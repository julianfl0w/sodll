# auto-generated file
import _cffi_backend

ffi = _cffi_backend.FFI('jvulkan',
    _version = 0x2601,
    _types = b'\x00\x0C\x2D\x0D\x00\x09\xFF\x03\x00\x08\xA6\x03\x00\x02\x94\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x0C\xB9\x03\x00\x00\x1F\x03\x00\x09\x8C\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x0C\xCD\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x0B\x11\x00\x08\xF5\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x0B\x11\x00\x0A\x34\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x0B\x11\x00\x0A\x35\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x0B\x11\x00\x0A\x38\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x0C\xDA\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x08\x8B\x03\x00\x00\x02\x11\x00\x06\xE1\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x08\x8C\x03\x00\x00\x02\x11\x00\x01\x68\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x08\xA3\x03\x00\x00\x07\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x08\xA5\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x02\x11\x00\x01\x79\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x08\xD6\x03\x00\x00\x02\x11\x00\x01\x6E\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x08\xE2\x03\x00\x00\x02\x11\x00\x06\xEB\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x08\xF4\x03\x00\x00\x0B\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x02\x03\x00\x00\x02\x11\x00\x01\x74\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x19\x03\x00\x00\x02\x11\x00\x07\x0A\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x1B\x03\x00\x00\x02\x11\x00\x07\x0F\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x1E\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x1F\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x26\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x27\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x33\x03\x00\x00\x02\x11\x00\x01\x9C\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x37\x03\x00\x07\x23\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x3D\x03\x00\x00\x02\x11\x00\x07\x1E\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x44\x03\x00\x00\x02\x11\x00\x05\x28\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x4D\x03\x00\x00\x02\x11\x00\x01\xBF\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x52\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\x87\x03\x00\x00\x02\x11\x00\x01\xBB\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x40\x0B\x00\x00\x07\x01\x00\x0A\x0B\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x9A\x11\x00\x0D\xE5\x03\x00\x0A\x13\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\xA1\x03\x00\x00\x02\x11\x00\x00\x8C\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\xA2\x03\x00\x00\x9B\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\xB3\x03\x00\x00\x02\x11\x00\x07\x50\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\xCF\x03\x00\x00\x02\x11\x00\x01\xC8\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\xE8\x03\x00\x00\x02\x11\x00\x01\xC3\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\xEE\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\xF1\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\xF3\x03\x00\x00\x02\x11\x00\x07\x70\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x09\xFB\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0A\x05\x03\x00\x00\x02\x11\x00\x01\x6F\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0A\x0C\x03\x00\x0C\xC6\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0A\x0D\x03\x00\x00\xAD\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0A\x0E\x03\x00\x01\x6A\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x66\x0B\x00\x00\x18\x01\x00\x0C\xEE\x03\x00\x00\x18\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0A\x2B\x03\x00\x01\xD3\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x6E\x0B\x00\x0A\x3A\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0A\xFA\x03\x00\x00\x02\x11\x00\x01\x8D\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0B\x14\x03\x00\x00\x07\x11\x00\x0B\x15\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x01\x11\x00\x00\x07\x11\x00\x0B\x18\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0B\x1C\x03\x00\x00\x07\x11\x00\x0B\x16\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0B\x20\x03\x00\x00\x02\x11\x00\x04\x64\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0B\x4D\x03\x00\x00\x02\x11\x00\x00\xEC\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0B\x54\x03\x00\x00\x02\x11\x00\x02\x10\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0B\x74\x03\x00\x00\x02\x11\x00\x02\x1A\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0B\x73\x03\x00\x00\x02\x11\x00\x01\x27\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\x36\x03\x00\x00\x02\x11\x00\x07\xA3\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\x3B\x03\x00\x00\x02\x11\x00\x07\x9E\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\x41\x03\x00\x00\x02\x11\x00\x02\x1F\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\x42\x03\x00\x00\xAD\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\x44\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\x4A\x03\x00\x00\x18\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\x4E\x03\x00\x00\x02\x11\x00\x07\xAD\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\x8E\x03\x00\x00\x02\x11\x00\x02\x29\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\x97\x03\x00\x00\x02\x11\x00\x02\x52\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xC7\x03\x00\x08\xA9\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xC9\x03\x00\x00\x1C\x01\x00\x0D\xE5\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xCC\x03\x00\x0C\xD9\x03\x00\x00\x18\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xCE\x03\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xD3\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x79\x11\x00\x09\x0E\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x79\x11\x00\x09\x0F\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x79\x11\x00\x09\x16\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x79\x11\x00\x0C\xEA\x03\x00\x00\x16\x01\x00\x0B\x63\x03\x00\x00\x02\x11\x00\x01\xFB\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x79\x11\x00\x00\x16\x01\x00\x08\x85\x03\x00\x08\x86\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xD4\x03\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x9C\x11\x00\x00\x16\x01\x00\x07\x23\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x6F\x11\x00\x00\x18\x01\x00\x00\x18\x01\x00\x00\x16\x01\x00\x00\xE6\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xDB\x03\x00\x09\x67\x03\x00\x00\x02\x11\x00\x00\x8C\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\xAF\x11\x00\x09\x74\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xDD\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xDE\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xE1\x03\x00\x09\xE6\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xE2\x03\x00\x09\xD2\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\xC8\x11\x00\x01\x6F\x11\x00\x00\x18\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xE5\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x8D\x11\x00\x01\x69\x03\x00\x01\x6A\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x8D\x11\x00\x00\x16\x01\x00\x09\x08\x03\x00\x00\x02\x11\x00\x01\x91\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x8D\x11\x00\x00\x16\x01\x00\x09\xBF\x03\x00\x00\x02\x11\x00\x01\x91\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x8D\x11\x00\x00\x16\x01\x00\x0B\x64\x03\x00\x00\x02\x11\x00\x01\x91\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\x8D\x11\x00\x00\x16\x01\x00\x01\x8D\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xED\x03\x00\x00\x9E\x0B\x00\x00\x9D\x0B\x00\x01\xD8\x11\x00\x01\x6A\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\xFB\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x01\xFB\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x1C\x01\x00\x01\x6A\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xEF\x03\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x1C\x01\x00\x01\x6A\x11\x00\x00\x18\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xF1\x03\x00\x09\x8D\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xF6\x03\x00\x00\xEB\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xF8\x03\x00\x00\x07\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xF9\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x02\x29\x11\x00\x0B\x6F\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x02\x29\x11\x00\x00\xAA\x0B\x00\x02\x20\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x02\x29\x11\x00\x00\x07\x11\x00\x0A\x29\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x02\x29\x11\x00\x00\x07\x11\x00\x00\xB9\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x02\x29\x11\x00\x00\x18\x01\x00\x02\x1F\x11\x00\x01\xBF\x11\x00\x00\x07\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x02\x29\x11\x00\x00\x18\x01\x00\x00\x18\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x0C\xFA\x03\x00\x01\xD8\x11\x00\x01\x6A\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x02\x52\x11\x00\x00\x16\x01\x00\x02\x52\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x08\xC2\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x08\xC4\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x08\xC6\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x08\xE5\x03\x00\x02\x20\x11\x00\x02\x20\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x0A\x02\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x01\x57\x11\x00\x00\x02\x11\x00\x01\x59\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x06\xE1\x03\x00\x00\x86\x0B\x00\x00\x1C\x01\x00\x01\x6A\x11\x00\x00\x1C\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x01\xBF\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x02\x8A\x11\x00\x00\x16\x01\x00\x00\x18\x01\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x0C\xE4\x03\x00\x08\xAB\x03\x00\x00\x02\x11\x00\x02\x24\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\x94\x11\x00\x09\x20\x03\x00\x00\x02\x11\x00\x07\xE5\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\x94\x11\x00\x09\x25\x03\x00\x00\x02\x11\x00\x07\xEA\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\x94\x11\x00\x09\x79\x03\x00\x00\x02\x11\x00\x02\x97\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\x94\x11\x00\x09\xC6\x03\x00\x00\x02\x11\x00\x02\x97\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\x94\x11\x00\x0C\xB0\x03\x00\x00\x02\x11\x00\x02\x97\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\x94\x11\x00\x0C\xB6\x03\x00\x00\x02\x11\x00\x02\x97\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\x94\x11\x00\x0C\xB7\x03\x00\x00\x02\x11\x00\x02\x97\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\x94\x11\x00\x00\x07\x11\x00\x0A\x7E\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\x94\x11\x00\x00\x07\x11\x00\x02\xCE\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x0C\xE9\x03\x00\x09\x49\x03\x00\x00\x02\x11\x00\x00\x22\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x09\x71\x03\x00\x09\x6F\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x47\x0B\x00\x00\x56\x0B\x00\x00\x55\x0B\x00\x00\x16\x01\x00\x00\x16\x01\x00\x09\xD5\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x02\xDA\x11\x00\x02\xDB\x11\x00\x02\xDC\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x09\x95\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x0A\x83\x03\x00\x09\xD4\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x0A\xDE\x03\x00\x0C\x86\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x02\xF2\x11\x00\x00\x07\x11\x00\x0C\x88\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x06\x11\x00\x00\x07\x11\x00\x00\x08\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x15\x01\x00\x01\xAF\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x15\x01\x00\x00\x16\x01\x00\x01\xAF\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x01\xAF\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x01\xAF\x11\x00\x09\x69\x03\x00\x00\x02\x11\x00\x03\x25\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x01\xAF\x11\x00\x00\x07\x11\x00\x09\x6B\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x01\xAF\x11\x00\x00\x07\x11\x00\x09\x6C\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x0C\xDC\x03\x00\x00\x16\x01\x00\x09\x70\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x02\x24\x11\x00\x0C\x85\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x02\x24\x11\x00\x0C\x87\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x02\x24\x11\x00\x00\x07\x11\x00\x0B\x46\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x02\x24\x11\x00\x00\x07\x11\x00\x0B\x6C\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x02\x24\x11\x00\x00\x07\x11\x00\x0C\x89\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x09\x0D\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x09\x72\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x09\x73\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x09\x77\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x09\x78\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x09\xB4\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x0A\x00\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x0A\x79\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x0A\xE5\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x0C\x92\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x16\x01\x00\x03\x0A\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x16\x01\x00\x02\x24\x11\x00\x00\x07\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x16\x01\x00\x00\x07\x11\x00\x0A\x2F\x03\x00\x0A\x2E\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x02\xCE\x11\x00\x00\x16\x01\x00\x00\x07\x11\x00\x03\x0A\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x0C\xF0\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x03\x90\x11\x00\x0B\x45\x03\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x03\x90\x11\x00\x01\xD3\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x03\x90\x11\x00\x00\x16\x01\x00\x08\xCB\x03\x00\x01\xBF\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x03\x90\x11\x00\x00\x16\x01\x00\x0C\x72\x03\x00\x01\xBF\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x03\x90\x11\x00\x00\x16\x01\x00\x0C\x71\x03\x00\x01\xBF\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x07\x11\x00\x00\x00\x0F\x00\x0C\x2D\x0D\x00\x00\x07\x11\x00\x03\x66\x11\x00\x00\x00\x0F\x00\x00\x1F\x0D\x00\x00\x28\x0B\x00\x00\x16\x01\x00\x09\x24\x03\x00\x01\x6A\x11\x00\x00\x00\x0F\x00\x00\x1F\x0D\x00\x00\x22\x11\x00\x09\xE9\x03\x00\x00\x00\x0F\x00\x00\x1F\x0D\x00\x00\x22\x11\x00\x01\x79\x11\x00\x00\x00\x0F\x00\x00\x1F\x0D\x00\x02\xCE\x11\x00\x00\x16\x01\x00\x08\x78\x03\x00\x00\x0A\x01\x00\x00\x00\x0F\x00\x00\x1F\x0D\x00\x02\xCE\x11\x00\x00\x16\x01\x00\x0C\xFB\x03\x00\x00\x00\x0F\x00\x00\x1F\x0D\x00\x02\xCE\x11\x00\x00\x16\x01\x00\x0D\xE8\x03\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x00\x1F\x0D\x00\x00\x16\x01\x00\x00\x27\x0B\x00\x00\x18\x01\x00\x00\x1C\x01\x00\x00\x15\x01\x00\x00\x06\x11\x00\x00\x06\x11\x00\x01\x6A\x11\x00\x00\x00\x0F\x00\x00\xEB\x0D\x00\x00\x22\x11\x00\x08\x8D\x03\x00\x00\x00\x0F\x00\x00\xEB\x0D\x00\x00\x22\x11\x00\x08\xD8\x03\x00\x00\x00\x0F\x00\x00\xEB\x0D\x00\x00\x22\x11\x00\x09\x59\x03\x00\x00\x00\x0F\x00\x00\xEB\x0D\x00\x00\x22\x11\x00\x01\xFB\x11\x00\x00\x16\x01\x00\x00\x9C\x0B\x00\x00\x00\x0F\x00\x01\x6A\x0D\x00\x01\x6A\x11\x00\x00\x1C\x01\x00\x00\x1C\x01\x00\x00\xAD\x0B\x00\x00\x00\x0F\x00\x01\x6A\x0D\x00\x01\x6A\x11\x00\x01\x6A\x11\x00\x00\x1C\x01\x00\x00\x1C\x01\x00\x03\xF2\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x09\x5B\x03\x00\x01\x6A\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x08\x96\x03\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x16\x01\x00\x01\x68\x11\x00\x01\x68\x11\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x08\xD0\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x14\x0B\x00\x00\x16\x01\x00\x08\xF1\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x1C\x0B\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\x09\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x7E\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x83\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\x10\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\x11\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\x14\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\x15\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x88\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\x1A\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\x1D\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\x22\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\x2C\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\x8D\x03\x00\x09\xAB\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x4A\x0B\x00\x04\x4E\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x4D\x0B\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x09\xB5\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x61\x0B\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x71\x0B\x00\x0C\xEB\x03\x00\x00\x16\x01\x00\x00\x16\x01\x00\x0C\xB1\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\x63\x11\x00\x04\x64\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x01\xA3\x11\x00\x00\x16\x01\x00\x00\x1F\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\x63\x11\x00\x01\xFB\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\x63\x11\x00\x01\xFB\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x7C\x0B\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\x80\x11\x00\x02\x10\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x80\x0B\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x0B\x71\x03\x00\x0C\x73\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\x91\x11\x00\x00\xA8\x0B\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x0B\x7F\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x0B\x80\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x0C\x32\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x0C\x6D\x03\x00\x04\xA7\x11\x00\x04\xA7\x11\x00\x04\xA7\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\xA7\x11\x00\x04\xA7\x11\x00\x04\xA7\x11\x00\x04\xA7\x11\x00\x00\x18\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\x92\x11\x00\x0C\x7E\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\x97\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\xBA\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\xCA\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x0D\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x0D\x01\x00\x00\x0D\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x0D\x01\x00\x00\x0D\x01\x00\x00\x0D\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x68\x11\x00\x01\x68\x11\x00\x00\x22\x0B\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x6E\x11\x00\x01\x6E\x11\x00\x00\x16\x01\x00\x08\xD4\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x6E\x11\x00\x01\xC8\x11\x00\x00\x54\x0B\x00\x00\x16\x01\x00\x08\xDB\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x5A\x0B\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x18\x01\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x18\x01\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x18\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x18\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x18\x01\x00\x00\xA1\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x0C\xD8\x03\x00\x04\x64\x11\x00\x00\x16\x01\x00\x00\xA1\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\xBB\x11\x00\x04\x49\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\xBB\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\xBB\x11\x00\x00\x18\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\xC3\x11\x00\x04\xE8\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\xC8\x11\x00\x04\xE8\x11\x00\x08\xEA\x03\x00\x00\x16\x01\x00\x09\xE2\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\xC8\x11\x00\x04\xE8\x11\x00\x08\xEB\x03\x00\x00\x16\x01\x00\x05\x47\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\xC8\x11\x00\x04\xE8\x11\x00\x01\x6E\x11\x00\x00\x16\x01\x00\x04\xEA\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\xC8\x11\x00\x04\xE8\x11\x00\x01\xC8\x11\x00\x04\xE8\x11\x00\x00\x16\x01\x00\x09\xCA\x03\x00\x00\x46\x0B\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\xC8\x11\x00\x04\xE8\x11\x00\x01\xC8\x11\x00\x04\xE8\x11\x00\x00\x16\x01\x00\x09\xCD\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x01\xC8\x11\x00\x04\xE8\x11\x00\x01\xC8\x11\x00\x04\xE8\x11\x00\x00\x16\x01\x00\x09\xDD\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x04\x64\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\xA1\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x02\x10\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x02\x10\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x02\x10\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x18\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x02\x10\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x01\x97\x11\x00\x01\x98\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x01\x97\x11\x00\x00\xEB\x03\x00\x04\x71\x11\x00\x04\x71\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x08\xE9\x03\x00\x00\x16\x01\x00\x08\xEC\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x04\x5B\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x0A\x1D\x03\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x03\x03\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x0A\x1E\x03\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x0B\x6C\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\xA4\x0B\x00\x05\xD0\x11\x00\x05\xD0\x11\x00\x04\x19\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x0C\xA6\x03\x00\x00\x16\x01\x00\x0C\xA3\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x0C\xAB\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x02\x81\x11\x00\x02\x82\x11\x00\x02\x10\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x01\x68\x03\x00\x02\x82\x11\x00\x02\x10\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x0B\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x01\xBB\x03\x00\x04\x49\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x05\xF9\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x0A\x08\x03\x00\x00\x16\x01\x00\x08\xDE\x03\x00\x00\x16\x01\x00\x09\xD8\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x14\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x04\x71\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x05\xCB\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x0C\x54\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x05\xDF\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x0C\xAF\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x01\x6E\x03\x00\x05\xA7\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x06\x34\x11\x00\x05\xA7\x11\x00\x05\xA7\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x06\x34\x11\x00\x05\xA7\x11\x00\x05\xA7\x11\x00\x05\xA7\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x15\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x06\x03\x11\x00\x00\x16\x01\x00\x06\x05\x11\x00\x00\x16\x01\x00\x06\x07\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x18\x01\x00\x01\x6E\x11\x00\x00\x18\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\x18\x01\x00\x02\x10\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x0B\x11\x00\x00\xA1\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x00\x00\x0B\x00\x01\x97\x11\x00\x04\x71\x11\x00\x08\x88\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x08\x99\x03\x00\x0A\x18\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x08\xA1\x03\x00\x08\x89\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x08\xDF\x03\x00\x06\x99\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x09\x38\x03\x00\x09\x3E\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x00\x7E\x11\x00\x09\x3F\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x09\x48\x03\x00\x06\x99\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x09\x58\x03\x00\x06\x99\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x06\xBA\x11\x00\x00\x07\x11\x00\x0C\x60\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x09\x64\x03\x00\x03\x90\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x09\xB6\x03\x00\x06\x99\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x09\xD9\x03\x00\x06\x99\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x09\xDE\x03\x00\x00\x07\x11\x00\x06\xC1\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x00\xEA\x11\x00\x00\x18\x01\x00\x00\xEC\x11\x00\x02\x20\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xC8\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x68\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xCB\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x6E\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x6E\x11\x00\x0A\x19\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x74\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x74\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x74\x11\x00\x00\x16\x01\x00\x05\xF4\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xCF\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xD0\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x79\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x9C\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xD6\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xD7\x03\x00\x05\x28\x11\x00\x00\xA1\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x07\x23\x11\x00\x00\xE6\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x05\x28\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x6F\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x6F\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x6F\x11\x00\x00\x0D\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x6F\x11\x00\x02\x20\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\xBB\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\xBF\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xDF\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\xC3\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\xC8\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\xC8\x11\x00\x09\xE0\x03\x00\x0C\x84\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\xC8\x11\x00\x06\xF6\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\xC8\x11\x00\x00\x07\x11\x00\x0C\x61\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xE3\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\x8D\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x04\x64\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x01\xFB\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x00\xEC\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x02\x10\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x02\x10\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x02\x1A\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x02\x1A\x11\x00\x02\x1B\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xF2\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xF4\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x02\x1F\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x0C\xF7\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x02\x29\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x02\x29\x11\x00\x00\x16\x01\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x02\x52\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x04\x67\x11\x00\x00\x16\x01\x00\x09\x13\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x02\x29\x03\x00\x09\xC5\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x06\xC6\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x22\x11\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x16\x01\x00\x00\x07\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\x94\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\x94\x11\x00\x03\xB4\x11\x00\x00\x16\x01\x00\x03\xB6\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\x94\x11\x00\x0C\xD1\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\x94\x11\x00\x0C\xD2\x03\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\x94\x11\x00\x02\x24\x11\x00\x00\x02\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\x94\x11\x00\x00\x16\x01\x00\x03\xD4\x11\x00\x00\x18\x01\x00\x00\x1C\x01\x00\x00\x15\x01\x00\x00\x06\x11\x00\x00\x06\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x02\xDA\x11\x00\x09\xA9\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x02\xDA\x11\x00\x09\xA7\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x02\xDA\x11\x00\x02\xDB\x11\x00\x00\x8F\x0B\x00\x00\x16\x01\x00\x02\xDC\x11\x00\x00\x07\x11\x00\x0C\x5B\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0A\x64\x03\x00\x09\x8F\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0A\x65\x03\x00\x09\x92\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0A\x69\x03\x00\x09\x9F\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0A\x6C\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0A\x6B\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0A\x97\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0A\x96\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0A\xAD\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0A\xAC\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0A\xD7\x03\x00\x00\x07\x11\x00\x0C\x5A\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x0B\x55\x03\x00\x00\x07\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x08\x0A\x11\x00\x0A\x1F\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x0B\x5D\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x02\xCE\x11\x00\x00\x07\x11\x00\x0B\x5C\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x03\x90\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x03\x90\x11\x00\x04\x45\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x03\x90\x11\x00\x00\x07\x11\x00\x08\xE6\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x03\x90\x11\x00\x00\x07\x11\x00\x08\xE7\x03\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x01\x6A\x11\x00\x00\x1C\x01\x00\x00\x5F\x0B\x00\x03\xF2\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x01\x6A\x11\x00\x01\x6A\x11\x00\x00\x00\x0F\x00\x0D\xE5\x0D\x00\x00\x00\x0F\x00\x0D\xE4\x0D\x00\x00\x22\x11\x00\x00\x06\x11\x00\x00\x00\x0F\x00\x0D\xE4\x0D\x00\x02\x94\x11\x00\x00\x06\x11\x00\x00\x00\x0F\x00\x08\x77\x03\x00\x00\x01\x09\x00\x00\x02\x09\x00\x00\x03\x09\x00\x00\x04\x09\x00\x00\x05\x09\x00\x00\x06\x09\x00\x00\x07\x09\x00\x00\x08\x09\x00\x00\x09\x09\x00\x00\x0A\x09\x00\x00\x0B\x09\x00\x08\x83\x03\x00\x02\xC3\x09\x00\x00\x0C\x09\x00\x00\x0D\x09\x00\x08\x87\x03\x00\x00\x0E\x09\x00\x00\x0F\x09\x00\x00\x01\x0B\x00\x00\x02\x0B\x00\x00\x10\x09\x00\x00\x11\x09\x00\x00\x12\x09\x00\x00\x13\x09\x00\x00\x14\x09\x00\x00\x15\x09\x00\x08\x92\x03\x00\x08\x93\x03\x00\x00\x16\x09\x00\x00\x17\x09\x00\x00\x18\x09\x00\x00\x19\x09\x00\x00\x1A\x09\x00\x00\x1C\x09\x00\x00\x1D\x09\x00\x00\x03\x0B\x00\x00\x1E\x09\x00\x00\x1F\x09\x00\x00\x20\x09\x00\x00\x04\x0B\x00\x00\x22\x09\x00\x00\x05\x0B\x00\x00\x23\x09\x00\x00\x06\x0B\x00\x00\x24\x09\x00\x00\x07\x0B\x00\x00\x25\x09\x00\x00\x26\x09\x00\x00\x27\x09\x00\x00\x28\x09\x00\x00\x29\x09\x00\x00\x2A\x09\x00\x00\x2B\x09\x00\x08\xAD\x03\x00\x00\x2C\x09\x00\x08\xB1\x03\x00\x08\xB0\x03\x00\x00\x2E\x09\x00\x00\x2D\x09\x00\x00\x08\x0B\x00\x00\x2F\x09\x00\x00\x09\x0B\x00\x08\xB8\x03\x00\x08\xB7\x03\x00\x00\x31\x09\x00\x00\x30\x09\x00\x00\x32\x09\x00\x00\x33\x09\x00\x08\xBC\x03\x00\x00\x34\x09\x00\x00\x0A\x0B\x00\x08\xBF\x03\x00\x00\x35\x09\x00\x08\xC1\x03\x00\x00\x36\x09\x00\x00\x37\x09\x00\x00\x38\x09\x00\x00\x39\x09\x00\x00\x3A\x09\x00\x00\x3B\x09\x00\x00\x3C\x09\x00\x00\x3D\x09\x00\x00\x3E\x09\x00\x00\x3F\x09\x00\x00\x40\x09\x00\x00\x41\x09\x00\x00\x0B\x0B\x00\x00\x0C\x0B\x00\x00\x0D\x0B\x00\x00\x42\x09\x00\x00\x0E\x0B\x00\x08\xD3\x03\x00\x00\x44\x09\x00\x00\x43\x09\x00\x00\x0F\x0B\x00\x00\x45\x09\x00\x00\x46\x09\x00\x00\x47\x09\x00\x08\xDA\x03\x00\x00\x49\x09\x00\x00\x48\x09\x00\x08\xDD\x03\x00\x00\x4B\x09\x00\x00\x4A\x09\x00\x00\x4C\x09\x00\x00\x4D\x09\x00\x00\x10\x0B\x00\x00\x4E\x09\x00\x00\x11\x0B\x00\x00\x12\x0B\x00\x00\x51\x09\x00\x00\x52\x09\x00\x00\x53\x09\x00\x00\x13\x0B\x00\x00\x54\x09\x00\x00\x55\x09\x00\x00\x56\x09\x00\x00\x57\x09\x00\x08\xEE\x03\x00\x00\x58\x09\x00\x08\xF0\x03\x00\x00\x59\x09\x00\x00\x5A\x09\x00\x00\x15\x0B\x00\x00\x16\x0B\x00\x00\x5B\x09\x00\x00\x5C\x09\x00\x00\x5D\x09\x00\x08\xF8\x03\x00\x00\x5E\x09\x00\x00\x5F\x09\x00\x00\x60\x09\x00\x00\x61\x09\x00\x00\x17\x0B\x00\x00\x18\x0B\x00\x08\xFF\x03\x00\x00\x62\x09\x00\x00\x19\x0B\x00\x00\x1A\x0B\x00\x00\x64\x09\x00\x00\x1B\x0B\x00\x00\x66\x09\x00\x00\x1D\x0B\x00\x00\x1E\x0B\x00\x00\x1F\x0B\x00\x00\x67\x09\x00\x00\x68\x09\x00\x00\x20\x0B\x00\x00\x69\x09\x00\x00\x21\x0B\x00\x00\x6A\x09\x00\x00\x6B\x09\x00\x00\x6C\x09\x00\x00\x6D\x09\x00\x00\x6E\x09\x00\x00\x6F\x09\x00\x00\x70\x09\x00\x00\x71\x09\x00\x00\x72\x09\x00\x00\x73\x09\x00\x00\x23\x0B\x00\x00\x24\x0B\x00\x00\x74\x09\x00\x00\x76\x09\x00\x00\x77\x09\x00\x00\x25\x0B\x00\x00\x79\x09\x00\x00\x7A\x09\x00\x00\x7B\x09\x00\x00\x7C\x09\x00\x00\x26\x0B\x00\x00\x7E\x09\x00\x00\x29\x0B\x00\x00\x7F\x09\x00\x00\x80\x09\x00\x00\x82\x09\x00\x00\x83\x09\x00\x00\x84\x09\x00\x00\x85\x09\x00\x00\x86\x09\x00\x00\x2A\x0B\x00\x00\x88\x09\x00\x00\x2B\x0B\x00\x09\x2F\x03\x00\x00\x89\x09\x00\x09\x31\x03\x00\x00\x8A\x09\x00\x00\x2C\x0B\x00\x00\x8B\x09\x00\x00\x8C\x09\x00\x09\x36\x03\x00\x00\x8D\x09\x00\x00\x8F\x09\x00\x00\x90\x09\x00\x09\x3A\x03\x00\x00\x91\x09\x00\x00\x92\x09\x00\x00\x2D\x0B\x00\x00\x93\x09\x00\x00\x94\x09\x00\x00\x95\x09\x00\x00\x97\x09\x00\x00\x98\x09\x00\x09\x43\x03\x00\x00\x2E\x0B\x00\x00\x9A\x09\x00\x09\x46\x03\x00\x00\x9B\x09\x00\x00\x2F\x0B\x00\x00\x9D\x09\x00\x00\x9E\x09\x00\x00\x9F\x09\x00\x00\xA0\x09\x00\x00\x30\x0B\x00\x00\xA1\x09\x00\x00\x31\x0B\x00\x00\xA2\x09\x00\x00\xA3\x09\x00\x00\xA4\x09\x00\x00\xA5\x09\x00\x00\xA6\x09\x00\x00\x32\x0B\x00\x00\xA7\x09\x00\x00\xA8\x09\x00\x00\xA9\x09\x00\x00\xAA\x09\x00\x00\xAB\x09\x00\x00\xAC\x09\x00\x00\xAD\x09\x00\x00\x33\x0B\x00\x00\xAF\x09\x00\x00\xB0\x09\x00\x00\xB1\x09\x00\x00\x34\x0B\x00\x09\x62\x03\x00\x00\xB2\x09\x00\x00\xB3\x09\x00\x00\xB4\x09\x00\x00\x35\x0B\x00\x00\xB6\x09\x00\x00\xB7\x09\x00\x00\x36\x0B\x00\x00\xB9\x09\x00\x00\xBB\x09\x00\x00\xBC\x09\x00\x00\xBD\x09\x00\x00\xBE\x09\x00\x00\x37\x0B\x00\x00\xBF\x09\x00\x00\xC0\x09\x00\x00\xC1\x09\x00\x00\xC2\x09\x00\x00\xC3\x09\x00\x00\xC4\x09\x00\x00\x38\x0B\x00\x00\xC5\x09\x00\x00\xC6\x09\x00\x00\xC7\x09\x00\x00\xC8\x09\x00\x00\xC9\x09\x00\x00\xCA\x09\x00\x00\xCB\x09\x00\x00\x39\x0B\x00\x09\x7F\x03\x00\x00\xCC\x09\x00\x09\x81\x03\x00\x00\xCD\x09\x00\x00\xCE\x09\x00\x00\xCF\x09\x00\x09\x85\x03\x00\x00\x3A\x0B\x00\x00\x3B\x0B\x00\x00\xD0\x09\x00\x00\xD2\x09\x00\x00\xD3\x09\x00\x00\xD4\x09\x00\x00\xD5\x09\x00\x00\xD6\x09\x00\x00\xD7\x09\x00\x00\xD8\x09\x00\x00\xD9\x09\x00\x00\x3C\x0B\x00\x00\x3D\x0B\x00\x00\xDA\x09\x00\x00\xDB\x09\x00\x00\xDC\x09\x00\x00\xDD\x09\x00\x00\xDE\x09\x00\x00\x3E\x0B\x00\x00\x3F\x0B\x00\x00\x41\x0B\x00\x00\xDF\x09\x00\x00\xE0\x09\x00\x00\xE1\x09\x00\x00\x42\x0B\x00\x00\x43\x0B\x00\x00\xE2\x09\x00\x00\x44\x0B\x00\x00\xE3\x09\x00\x00\xE4\x09\x00\x00\x45\x0B\x00\x00\xE6\x09\x00\x02\xDA\x03\x00\x00\x48\x0B\x00\x00\xE8\x09\x00\x00\xE9\x09\x00\x00\xE7\x09\x00\x00\xEA\x09\x00\x00\x49\x0B\x00\x09\xAB\x05\x00\x00\x00\x02\x00\x00\x4B\x0B\x00\x09\xB0\x03\x00\x00\xEB\x09\x00\x00\xEC\x09\x00\x00\x4C\x0B\x00\x00\xED\x09\x00\x00\xEE\x09\x00\x00\xF0\x09\x00\x00\xF1\x09\x00\x00\xF2\x09\x00\x00\xF3\x09\x00\x00\x4E\x0B\x00\x00\x4F\x0B\x00\x09\xBC\x03\x00\x00\xF4\x09\x00\x00\xF5\x09\x00\x00\x50\x0B\x00\x00\xF6\x09\x00\x00\xF7\x09\x00\x00\x51\x0B\x00\x00\xF8\x09\x00\x09\xC4\x03\x00\x00\xF9\x09\x00\x00\xFA\x09\x00\x00\xFB\x09\x00\x00\x52\x0B\x00\x09\xC9\x03\x00\x00\xFD\x09\x00\x00\xFC\x09\x00\x09\xCC\x03\x00\x00\xFF\x09\x00\x00\xFE\x09\x00\x00\x53\x0B\x00\x01\x00\x09\x00\x01\x01\x09\x00\x01\x02\x09\x00\x01\x03\x09\x00\x01\x04\x09\x00\x01\x06\x09\x00\x01\x05\x09\x00\x09\xD7\x03\x00\x01\x08\x09\x00\x01\x07\x09\x00\x01\x09\x09\x00\x01\x0A\x09\x00\x09\xDC\x03\x00\x01\x0C\x09\x00\x01\x0B\x09\x00\x01\x0D\x09\x00\x01\x0E\x09\x00\x01\x0F\x09\x00\x01\x10\x09\x00\x01\x11\x09\x00\x01\x12\x09\x00\x00\x57\x0B\x00\x01\x13\x09\x00\x01\x14\x09\x00\x00\x58\x0B\x00\x01\x15\x09\x00\x01\x16\x09\x00\x01\x17\x09\x00\x00\x59\x0B\x00\x01\x18\x09\x00\x01\x1B\x09\x00\x01\x1C\x09\x00\x01\x1D\x09\x00\x01\x1E\x09\x00\x01\x1F\x09\x00\x04\xF5\x03\x00\x01\x20\x09\x00\x09\xF5\x03\x00\x01\x22\x09\x00\x00\x5B\x0B\x00\x09\xF8\x03\x00\x01\x23\x09\x00\x00\x5C\x0B\x00\x00\x5D\x0B\x00\x01\x24\x09\x00\x09\xFD\x03\x00\x01\x25\x09\x00\x00\x5E\x0B\x00\x01\x26\x09\x00\x01\x28\x09\x00\x00\x60\x0B\x00\x01\x29\x09\x00\x00\x62\x0B\x00\x01\x2A\x09\x00\x01\x2B\x09\x00\x0A\x07\x03\x00\x01\x2D\x09\x00\x01\x2C\x09\x00\x01\x2E\x09\x00\x01\x2F\x09\x00\x01\x30\x09\x00\x01\x31\x09\x00\x01\x32\x09\x00\x01\x33\x09\x00\x01\x34\x09\x00\x00\x63\x0B\x00\x0A\x0F\x05\x00\x00\x00\x10\x00\x01\x35\x09\x00\x01\x36\x09\x00\x00\x64\x0B\x00\x01\x37\x09\x00\x00\x65\x0B\x00\x01\x39\x09\x00\x01\x38\x09\x00\x01\x3A\x09\x00\x0A\x1A\x05\x00\x00\x00\x20\x00\x01\x3B\x09\x00\x01\x3C\x09\x00\x01\x3D\x09\x00\x01\x3E\x09\x00\x01\x3F\x09\x00\x0A\x23\x03\x00\x01\x40\x09\x00\x0A\x25\x03\x00\x01\x41\x09\x00\x01\x42\x09\x00\x0A\x26\x05\x00\x00\x00\x02\x00\x01\x43\x09\x00\x00\x67\x0B\x00\x01\x44\x09\x00\x00\x68\x0B\x00\x00\x69\x0B\x00\x01\x46\x09\x00\x01\x47\x09\x00\x01\x48\x09\x00\x00\x6A\x0B\x00\x00\x6B\x0B\x00\x00\x6C\x0B\x00\x01\x49\x09\x00\x01\x4A\x09\x00\x00\x6D\x0B\x00\x01\x4B\x09\x00\x01\x4C\x09\x00\x01\x4D\x09\x00\x01\x4E\x09\x00\x00\x6F\x0B\x00\x01\x4F\x09\x00\x01\x50\x09\x00\x01\x51\x09\x00\x01\x52\x09\x00\x01\x53\x09\x00\x01\x54\x09\x00\x01\x55\x09\x00\x01\x56\x09\x00\x01\x57\x09\x00\x01\x58\x09\x00\x01\x59\x09\x00\x01\x5A\x09\x00\x01\x5B\x09\x00\x01\x5C\x09\x00\x01\x5D\x09\x00\x01\x5E\x09\x00\x01\x5F\x09\x00\x01\x60\x09\x00\x01\x61\x09\x00\x01\x62\x09\x00\x01\x63\x09\x00\x01\x64\x09\x00\x01\x65\x09\x00\x01\x66\x09\x00\x01\x67\x09\x00\x01\x68\x09\x00\x01\x69\x09\x00\x01\x6A\x09\x00\x01\x6B\x09\x00\x01\x6C\x09\x00\x01\x6D\x09\x00\x01\x6E\x09\x00\x01\x6F\x09\x00\x01\x70\x09\x00\x01\x71\x09\x00\x01\x72\x09\x00\x01\x73\x09\x00\x01\x74\x09\x00\x01\x75\x09\x00\x01\x76\x09\x00\x01\x77\x09\x00\x01\x78\x09\x00\x01\x79\x09\x00\x01\x7A\x09\x00\x01\x7B\x09\x00\x01\x7C\x09\x00\x0A\x6C\x03\x00\x01\x7E\x09\x00\x01\x7D\x09\x00\x01\x7F\x09\x00\x01\x80\x09\x00\x01\x81\x09\x00\x01\x82\x09\x00\x01\x83\x09\x00\x01\x84\x09\x00\x01\x85\x09\x00\x01\x86\x09\x00\x01\x87\x09\x00\x01\x88\x09\x00\x01\x89\x09\x00\x01\x8A\x09\x00\x01\x8B\x09\x00\x01\x8C\x09\x00\x01\x8D\x09\x00\x01\x8E\x09\x00\x01\x8F\x09\x00\x01\x90\x09\x00\x01\x91\x09\x00\x01\x92\x09\x00\x01\x93\x09\x00\x01\x94\x09\x00\x01\x95\x09\x00\x01\x96\x09\x00\x01\x97\x09\x00\x01\x98\x09\x00\x01\x99\x09\x00\x01\x9A\x09\x00\x01\x9B\x09\x00\x01\x9C\x09\x00\x01\x9D\x09\x00\x01\x9E\x09\x00\x01\x9F\x09\x00\x01\xA0\x09\x00\x01\xA1\x09\x00\x01\xA2\x09\x00\x01\xA3\x09\x00\x01\xA4\x09\x00\x01\xA5\x09\x00\x01\xA6\x09\x00\x01\xA7\x09\x00\x01\xA9\x09\x00\x01\xA8\x09\x00\x01\xAA\x09\x00\x01\xAB\x09\x00\x01\xAC\x09\x00\x01\xAD\x09\x00\x01\xAE\x09\x00\x01\xAF\x09\x00\x01\xB0\x09\x00\x01\xB1\x09\x00\x01\xB2\x09\x00\x01\xB3\x09\x00\x01\xB4\x09\x00\x01\xB5\x09\x00\x01\xB6\x09\x00\x01\xB7\x09\x00\x01\xB8\x09\x00\x01\xB9\x09\x00\x01\xBA\x09\x00\x01\xBB\x09\x00\x01\xBC\x09\x00\x01\xBD\x09\x00\x01\xBF\x09\x00\x01\xBE\x09\x00\x01\xC0\x09\x00\x01\xC1\x09\x00\x01\xC2\x09\x00\x01\xC3\x09\x00\x01\xC4\x09\x00\x01\xC5\x09\x00\x01\xC6\x09\x00\x01\xC7\x09\x00\x01\xC8\x09\x00\x01\xC9\x09\x00\x01\xCA\x09\x00\x01\xCB\x09\x00\x01\xCC\x09\x00\x01\xCD\x09\x00\x01\xCE\x09\x00\x01\xCF\x09\x00\x01\xD0\x09\x00\x01\xD1\x09\x00\x01\xD2\x09\x00\x01\xD3\x09\x00\x01\xD4\x09\x00\x01\xD5\x09\x00\x01\xD6\x09\x00\x01\xD7\x09\x00\x01\xD8\x09\x00\x01\xD9\x09\x00\x01\xDA\x09\x00\x01\xDB\x09\x00\x01\xDC\x09\x00\x01\xDD\x09\x00\x01\xDE\x09\x00\x01\xDF\x09\x00\x01\xE0\x09\x00\x01\xE1\x09\x00\x01\xE2\x09\x00\x01\xE3\x09\x00\x01\xE4\x09\x00\x01\xE5\x09\x00\x01\xE6\x09\x00\x01\xE7\x09\x00\x01\xE8\x09\x00\x01\xE9\x09\x00\x01\xEA\x09\x00\x01\xEB\x09\x00\x01\xEC\x09\x00\x01\xED\x09\x00\x01\xEE\x09\x00\x01\xEF\x09\x00\x01\xF0\x09\x00\x01\xF1\x09\x00\x01\xF2\x09\x00\x01\xF3\x09\x00\x01\xF4\x09\x00\x01\xF5\x09\x00\x01\xF6\x09\x00\x01\xF7\x09\x00\x01\xF8\x09\x00\x01\xF9\x09\x00\x00\x70\x0B\x00\x01\xFA\x09\x00\x01\xFB\x09\x00\x01\xFC\x09\x00\x01\xFD\x09\x00\x01\xFE\x09\x00\x01\xFF\x09\x00\x02\x00\x09\x00\x02\x01\x09\x00\x02\x02\x09\x00\x02\x03\x09\x00\x02\x04\x09\x00\x02\x05\x09\x00\x02\x06\x09\x00\x02\x07\x09\x00\x02\x08\x09\x00\x02\x09\x09\x00\x00\x72\x0B\x00\x02\x0B\x09\x00\x00\x73\x0B\x00\x02\x0C\x09\x00\x02\x0E\x09\x00\x0A\xFF\x03\x00\x02\x0F\x09\x00\x00\x74\x0B\x00\x0B\x02\x03\x00\x02\x10\x09\x00\x02\x11\x09\x00\x02\x12\x09\x00\x00\x75\x0B\x00\x02\x13\x09\x00\x02\x14\x09\x00\x02\x15\x09\x00\x00\x76\x0B\x00\x0B\x0B\x03\x00\x02\x16\x09\x00\x02\x17\x09\x00\x00\x77\x0B\x00\x00\x78\x0B\x00\x0B\x10\x03\x00\x02\x18\x09\x00\x02\x19\x09\x00\x0B\x13\x03\x00\x02\x1A\x09\x00\x02\x1B\x09\x00\x02\x1C\x09\x00\x02\x1D\x09\x00\x00\x79\x0B\x00\x02\x1E\x09\x00\x02\x1F\x09\x00\x02\x20\x09\x00\x02\x21\x09\x00\x02\x22\x09\x00\x0B\x1E\x03\x00\x02\x23\x09\x00\x00\x7A\x0B\x00\x02\x24\x09\x00\x0B\x22\x03\x00\x02\x26\x09\x00\x0B\x24\x03\x00\x02\x27\x09\x00\x02\x28\x09\x00\x02\x29\x09\x00\x02\x2A\x09\x00\x02\x2B\x09\x00\x0B\x2A\x03\x00\x02\x2C\x09\x00\x02\x2D\x09\x00\x02\x2E\x09\x00\x02\x2F\x09\x00\x02\x30\x09\x00\x02\x31\x09\x00\x00\x7B\x0B\x00\x0B\x32\x03\x00\x02\x32\x09\x00\x02\x33\x09\x00\x02\x34\x09\x00\x0B\x36\x03\x00\x02\x35\x09\x00\x02\x36\x09\x00\x0B\x39\x03\x00\x02\x37\x09\x00\x02\x38\x09\x00\x02\x39\x09\x00\x02\x3A\x09\x00\x02\x3B\x09\x00\x0B\x3F\x03\x00\x02\x3C\x09\x00\x02\x3D\x09\x00\x02\x3E\x09\x00\x00\x7D\x0B\x00\x00\x7E\x0B\x00\x02\x40\x09\x00\x02\x41\x09\x00\x00\x7F\x0B\x00\x0B\x48\x03\x00\x02\x42\x09\x00\x02\x43\x09\x00\x0B\x4B\x03\x00\x02\x44\x09\x00\x02\x45\x09\x00\x02\x46\x09\x00\x02\x48\x09\x00\x00\x81\x0B\x00\x0B\x51\x03\x00\x02\x49\x09\x00\x00\x82\x0B\x00\x00\x83\x0B\x00\x02\x4A\x09\x00\x02\x4B\x09\x00\x02\x4C\x09\x00\x00\x84\x0B\x00\x00\x85\x0B\x00\x02\x4E\x09\x00\x02\x4F\x09\x00\x02\x50\x09\x00\x02\x52\x09\x00\x02\x51\x09\x00\x00\x87\x0B\x00\x00\x88\x0B\x00\x0B\x5F\x05\x00\x00\x00\x10\x00\x00\x89\x0B\x00\x02\x54\x09\x00\x02\x55\x09\x00\x0B\x66\x03\x00\x02\x56\x09\x00\x0B\x68\x03\x00\x02\x57\x09\x00\x0B\x6A\x03\x00\x02\x58\x09\x00\x00\x8A\x0B\x00\x02\x59\x09\x00\x0B\x6E\x03\x00\x02\x5A\x09\x00\x02\x5B\x09\x00\x02\x5C\x09\x00\x02\x5D\x09\x00\x00\x8B\x0B\x00\x02\x5F\x09\x00\x02\x5E\x09\x00\x02\x60\x09\x00\x02\x61\x09\x00\x02\x62\x09\x00\x02\x63\x09\x00\x02\x64\x09\x00\x0B\x7B\x03\x00\x02\x66\x09\x00\x00\x8C\x0B\x00\x02\x67\x09\x00\x02\x68\x09\x00\x02\x69\x09\x00\x02\x6A\x09\x00\x00\x8D\x0B\x00\x0C\x2D\x03\x00\x00\x00\x03\x00\x00\x05\x03\x00\x00\x0A\x03\x00\x00\x0D\x03\x00\x00\x11\x03\x00\x00\x15\x03\x00\x00\x19\x03\x00\x00\x1D\x03\x00\x00\x21\x03\x00\x00\x24\x03\x00\x00\x2A\x03\x00\x00\x30\x03\x00\x00\x35\x03\x00\x00\x39\x03\x00\x00\x3E\x03\x00\x00\x44\x03\x00\x00\x4A\x03\x00\x00\x4F\x03\x00\x00\x55\x03\x00\x00\x5B\x03\x00\x00\x61\x03\x00\x00\x65\x03\x00\x00\x69\x03\x00\x00\x6D\x03\x00\x00\x71\x03\x00\x00\x77\x03\x00\x00\x7C\x03\x00\x00\x82\x03\x00\x00\x88\x03\x00\x00\x8E\x03\x00\x00\x92\x03\x00\x00\x98\x03\x00\x00\x9E\x03\x00\x00\xA4\x03\x00\x00\xAA\x03\x00\x00\xAF\x03\x00\x00\xB5\x03\x00\x00\xBB\x03\x00\x00\xC1\x03\x00\x00\xC5\x03\x00\x00\xC9\x03\x00\x00\xCF\x03\x00\x00\xD3\x03\x00\x00\xD9\x03\x00\x00\xDE\x03\x00\x00\xE3\x03\x00\x00\xE8\x03\x00\x00\xEF\x03\x00\x00\xF4\x03\x00\x00\xF9\x03\x00\x00\xFF\x03\x00\x01\x05\x03\x00\x01\x0B\x03\x00\x01\x11\x03\x00\x01\x17\x03\x00\x01\x1D\x03\x00\x01\x23\x03\x00\x01\x29\x03\x00\x01\x2F\x03\x00\x01\x35\x03\x00\x01\x3B\x03\x00\x01\x41\x03\x00\x01\x46\x03\x00\x01\x4A\x03\x00\x01\x4F\x03\x00\x01\x55\x03\x00\x01\x5B\x03\x00\x01\x61\x03\x00\x01\x66\x03\x00\x01\x6C\x03\x00\x01\x72\x03\x00\x01\x77\x03\x00\x01\x7B\x03\x00\x01\x80\x03\x00\x01\x85\x03\x00\x01\x8A\x03\x00\x01\x93\x03\x00\x01\x9A\x03\x00\x01\x9F\x03\x00\x01\xA5\x03\x00\x01\xAD\x03\x00\x01\xB4\x03\x00\x01\xB9\x03\x00\x01\xBD\x03\x00\x01\xC1\x03\x00\x01\xC6\x03\x00\x01\xCB\x03\x00\x01\xD1\x03\x00\x01\xD5\x03\x00\x01\xDB\x03\x00\x01\xE3\x03\x00\x01\xEB\x03\x00\x01\xF3\x03\x00\x01\xF9\x03\x00\x02\x01\x03\x00\x02\x06\x03\x00\x02\x0E\x03\x00\x02\x18\x03\x00\x02\x1D\x03\x00\x02\x22\x03\x00\x02\x27\x03\x00\x02\x2B\x03\x00\x02\x30\x03\x00\x02\x36\x03\x00\x02\x3C\x03\x00\x02\x42\x03\x00\x02\x4A\x03\x00\x02\x50\x03\x00\x02\x56\x03\x00\x02\x5C\x03\x00\x02\x61\x03\x00\x02\x66\x03\x00\x02\x6B\x03\x00\x02\x72\x03\x00\x02\x77\x03\x00\x02\x7E\x03\x00\x02\x87\x03\x00\x02\x8C\x03\x00\x02\x93\x03\x00\x02\x99\x03\x00\x02\x9F\x03\x00\x02\xA5\x03\x00\x02\xAB\x03\x00\x02\xB1\x03\x00\x02\xB7\x03\x00\x02\xBD\x03\x00\x02\xC3\x03\x00\x02\xC8\x03\x00\x02\xCD\x03\x00\x02\xD3\x03\x00\x02\xD8\x03\x00\x02\xE1\x03\x00\x02\xEB\x03\x00\x02\xF0\x03\x00\x02\xF5\x03\x00\x02\xFB\x03\x00\x03\x01\x03\x00\x03\x06\x03\x00\x03\x0C\x03\x00\x03\x10\x03\x00\x03\x17\x03\x00\x03\x1D\x03\x00\x03\x23\x03\x00\x03\x29\x03\x00\x03\x2E\x03\x00\x03\x33\x03\x00\x03\x39\x03\x00\x03\x3F\x03\x00\x03\x45\x03\x00\x03\x4A\x03\x00\x03\x4F\x03\x00\x03\x54\x03\x00\x03\x59\x03\x00\x03\x5E\x03\x00\x03\x63\x03\x00\x03\x68\x03\x00\x03\x6D\x03\x00\x03\x72\x03\x00\x03\x77\x03\x00\x03\x7C\x03\x00\x03\x82\x03\x00\x03\x89\x03\x00\x03\x8F\x03\x00\x03\x92\x03\x00\x03\x96\x03\x00\x03\x9A\x03\x00\x03\xA0\x03\x00\x03\xA6\x03\x00\x03\xAC\x03\x00\x03\xAF\x03\x00\x00\x8E\x0B\x00\x02\x6B\x09\x00\x08\x0A\x03\x00\x0C\x31\x03\x00\x02\x6C\x09\x00\x02\x6D\x09\x00\x00\x90\x0B\x00\x02\x6E\x09\x00\x00\x91\x0B\x00\x02\x6F\x09\x00\x02\x70\x09\x00\x00\x92\x0B\x00\x00\x93\x0B\x00\x02\x71\x09\x00\x02\x72\x09\x00\x02\x73\x09\x00\x02\x74\x09\x00\x00\x94\x0B\x00\x00\x95\x0B\x00\x00\x96\x0B\x00\x02\x77\x09\x00\x02\x78\x09\x00\x00\x97\x0B\x00\x02\x79\x09\x00\x0C\x46\x03\x00\x02\x7A\x09\x00\x00\x98\x0B\x00\x02\x7B\x09\x00\x00\x99\x0B\x00\x02\x7C\x09\x00\x02\x7E\x09\x00\x00\x9A\x0B\x00\x00\x9B\x0B\x00\x02\x7F\x09\x00\x02\x80\x09\x00\x02\x82\x09\x00\x02\x83\x09\x00\x0C\x53\x03\x00\x00\x9F\x0B\x00\x02\x84\x09\x00\x02\x85\x09\x00\x00\xA0\x0B\x00\x0C\x58\x03\x00\x02\x86\x09\x00\x00\xA1\x0B\x00\x02\x88\x09\x00\x02\x87\x09\x00\x0C\x5D\x03\x00\x02\x89\x09\x00\x0C\x5F\x03\x00\x02\x8A\x09\x00\x02\x8C\x09\x00\x02\x8B\x09\x00\x0C\x63\x03\x00\x02\x8D\x09\x00\x0C\x65\x03\x00\x02\x8E\x09\x00\x00\xA2\x0B\x00\x0C\x68\x03\x00\x02\x8F\x09\x00\x0C\x6A\x03\x00\x02\x90\x09\x00\x00\xA3\x0B\x00\x02\x91\x09\x00\x02\x92\x09\x00\x00\xA5\x0B\x00\x00\xA6\x0B\x00\x00\xA7\x0B\x00\x02\x94\x09\x00\x02\x93\x09\x00\x02\x95\x09\x00\x0C\x77\x03\x00\x0C\x76\x03\x00\x02\x97\x09\x00\x02\x96\x09\x00\x0C\x7B\x03\x00\x0C\x7A\x03\x00\x02\x99\x09\x00\x02\x98\x09\x00\x02\x9A\x09\x00\x00\xA9\x0B\x00\x02\x9B\x09\x00\x02\x9C\x09\x00\x0C\x81\x03\x00\x02\x9D\x09\x00\x02\x9E\x09\x00\x0C\x84\x03\x00\x02\x9F\x09\x00\x02\xA0\x09\x00\x02\xA1\x09\x00\x02\xA2\x09\x00\x02\xA3\x09\x00\x02\xA4\x09\x00\x02\xA6\x09\x00\x00\xAB\x0B\x00\x02\xA7\x09\x00\x00\xAC\x0B\x00\x02\xA8\x09\x00\x02\xA9\x09\x00\x00\xAE\x0B\x00\x02\xAB\x09\x00\x00\xAF\x0B\x00\x02\xAC\x09\x00\x00\xB0\x0B\x00\x02\xAD\x09\x00\x02\xAE\x09\x00\x02\xAF\x09\x00\x00\xB1\x0B\x00\x0C\x9A\x03\x00\x00\xB2\x0B\x00\x0C\x9C\x03\x00\x00\xB3\x0B\x00\x0C\x9E\x03\x00\x00\xB4\x0B\x00\x02\xB1\x09\x00\x02\xB2\x09\x00\x00\xB5\x0B\x00\x0C\xA4\x03\x00\x02\xB4\x09\x00\x02\xB3\x09\x00\x0C\xA7\x03\x00\x02\xB6\x09\x00\x02\xB5\x09\x00\x0C\xA9\x03\x00\x02\xB7\x09\x00\x00\xB6\x0B\x00\x02\xB8\x09\x00\x00\xB7\x0B\x00\x0C\xAE\x03\x00\x02\xB9\x09\x00\x02\xBA\x09\x00\x02\xBB\x09\x00\x02\xBC\x09\x00\x02\xBD\x09\x00\x02\xBE\x09\x00\x02\xBF\x09\x00\x02\xC0\x09\x00\x02\xC1\x09\x00\x02\xC2\x09\x00\x00\x06\x03\x00\x00\x02\x01\x00\x0C\xB9\x05\x00\x00\x01\x00\x00\x00\x0E\x01\x00\x04\xCA\x05\x00\x00\x00\x02\x00\x0C\xC1\x05\x00\x00\x00\x03\x00\x04\xCA\x05\x00\x00\x00\x04\x00\x03\x03\x05\x00\x00\x00\x04\x00\x00\x17\x01\x00\x0C\xC7\x03\x00\x00\x00\x09\x00\x00\x1B\x09\x00\x00\x21\x09\x00\x06\xEB\x03\x00\x00\x4F\x09\x00\x00\x50\x09\x00\x00\x63\x09\x00\x00\x65\x09\x00\x00\x75\x09\x00\x00\x78\x09\x00\x00\x7D\x09\x00\x00\x81\x09\x00\x00\x87\x09\x00\x00\x8E\x09\x00\x07\x1E\x03\x00\x00\x96\x09\x00\x00\x99\x09\x00\x00\x9C\x09\x00\x00\xAE\x09\x00\x00\xB5\x09\x00\x00\xB8\x09\x00\x00\xBA\x09\x00\x00\xD1\x09\x00\x00\xE5\x09\x00\x00\xEF\x09\x00\x01\xC3\x03\x00\x01\x19\x09\x00\x01\x1A\x09\x00\x01\x21\x09\x00\x01\x27\x09\x00\x01\x45\x09\x00\x02\xCE\x03\x00\x02\xCE\x05\x00\x00\x00\x20\x00\x02\x0A\x09\x00\x02\x0D\x09\x00\x02\x25\x09\x00\x01\xFB\x03\x00\x02\x3F\x09\x00\x02\x47\x09\x00\x02\x4D\x09\x00\x02\x53\x09\x00\x02\x65\x09\x00\x02\x75\x09\x00\x07\xA3\x03\x00\x02\x76\x09\x00\x02\x1F\x03\x00\x02\x7D\x09\x00\x02\x81\x09\x00\x02\xA5\x09\x00\x02\xAA\x09\x00\x02\xB0\x09\x00\x02\xC4\x09\x00\x0C\xFD\x03\x00\x02\xC5\x09\x00\x03\xB3\x03\x00\x03\xB9\x03\x00\x03\xBD\x03\x00\x03\xC1\x03\x00\x03\xC7\x03\x00\x03\xCC\x03\x00\x03\xD2\x03\x00\x00\x1F\x05\x00\x00\x00\x02\x00\x00\x1F\x05\x00\x00\x00\x20\x00\x00\x1F\x05\x00\x00\x00\x03\x00\x00\x1F\x05\x00\x00\x00\x04\x00\x03\xDC\x03\x00\x03\xE0\x03\x00\x03\xE4\x03\x00\x03\xE8\x03\x00\x00\xEB\x05\x00\x00\x00\x10\x00\x0D\x14\x03\x00\x00\x12\x01\x00\x0D\x14\x05\x00\x00\x00\x10\x00\x0D\x14\x05\x00\x00\x00\x08\x00\x03\xEE\x03\x00\x03\xF4\x03\x00\x00\xA1\x03\x00\x08\x6E\x03\x00\x08\x72\x03\x00\x03\xFB\x03\x00\x03\xFF\x03\x00\x04\x02\x03\x00\x04\x0D\x03\x00\x04\x11\x03\x00\x04\x17\x03\x00\x04\x1B\x03\x00\x04\x1F\x03\x00\x04\x23\x03\x00\x04\x27\x03\x00\x04\x2B\x03\x00\x04\x2F\x03\x00\x04\x33\x03\x00\x04\x37\x03\x00\x04\x3B\x03\x00\x04\x3F\x03\x00\x04\x43\x03\x00\x04\x47\x03\x00\x04\x4B\x03\x00\x04\x50\x03\x00\x04\x55\x03\x00\x04\x59\x03\x00\x04\x5D\x03\x00\x04\x61\x03\x00\x04\x69\x03\x00\x04\x73\x03\x00\x04\x78\x03\x00\x04\x7E\x03\x00\x04\x85\x03\x00\x04\x8B\x03\x00\x04\x8F\x03\x00\x04\x94\x03\x00\x04\x99\x03\x00\x04\x9D\x03\x00\x04\xA1\x03\x00\x04\xA5\x03\x00\x04\xAF\x03\x00\x04\xB7\x03\x00\x04\xBC\x03\x00\x04\xC0\x03\x00\x04\xC4\x03\x00\x04\xC8\x03\x00\x04\xCC\x03\x00\x04\xD1\x03\x00\x04\xD7\x03\x00\x04\xDD\x03\x00\x04\xE4\x03\x00\x04\xEC\x03\x00\x04\xF1\x03\x00\x04\xF7\x03\x00\x05\x00\x03\x00\x05\x11\x03\x00\x05\x18\x03\x00\x05\x1F\x03\x00\x05\x26\x03\x00\x05\x2D\x03\x00\x05\x32\x03\x00\x05\x37\x03\x00\x05\x3C\x03\x00\x05\x41\x03\x00\x05\x49\x03\x00\x05\x51\x03\x00\x05\x59\x03\x00\x05\x63\x03\x00\x05\x6C\x03\x00\x05\x75\x03\x00\x05\x7D\x03\x00\x05\x82\x03\x00\x05\x88\x03\x00\x05\x92\x03\x00\x05\x99\x03\x00\x05\x9D\x03\x00\x05\xA3\x03\x00\x05\xAB\x03\x00\x05\xB2\x03\x00\x05\xB7\x03\x00\x05\xC0\x03\x00\x05\xC8\x03\x00\x05\xCD\x03\x00\x05\xD5\x03\x00\x05\xDC\x03\x00\x05\xE1\x03\x00\x05\xE9\x03\x00\x05\xF1\x03\x00\x05\xF6\x03\x00\x05\xFC\x03\x00\x06\x09\x03\x00\x06\x0E\x03\x00\x06\x13\x03\x00\x06\x18\x03\x00\x06\x1E\x03\x00\x06\x24\x03\x00\x06\x2A\x03\x00\x06\x30\x03\x00\x06\x37\x03\x00\x06\x3F\x03\x00\x06\x48\x03\x00\x06\x51\x03\x00\x06\x57\x03\x00\x06\x5F\x03\x00\x06\x66\x03\x00\x06\x72\x03\x00\x06\x7B\x03\x00\x06\x82\x03\x00\x06\x88\x03\x00\x06\x8C\x03\x00\x06\x8F\x03\x00\x06\x96\x03\x00\x06\x9B\x03\x00\x06\xA0\x03\x00\x06\xA4\x03\x00\x06\xA9\x03\x00\x06\xAE\x03\x00\x06\xB3\x03\x00\x06\xB8\x03\x00\x06\xBD\x03\x00\x06\xC3\x03\x00\x06\xC8\x03\x00\x06\xCD\x03\x00\x06\xD2\x03\x00\x06\xD8\x03\x00\x06\xDF\x03\x00\x06\xE4\x03\x00\x06\xE9\x03\x00\x06\xEE\x03\x00\x06\xF3\x03\x00\x06\xF8\x03\x00\x06\xFD\x03\x00\x07\x02\x03\x00\x07\x08\x03\x00\x07\x0D\x03\x00\x07\x12\x03\x00\x07\x17\x03\x00\x07\x1C\x03\x00\x07\x21\x03\x00\x07\x27\x03\x00\x07\x2C\x03\x00\x07\x31\x03\x00\x07\x35\x03\x00\x07\x3A\x03\x00\x07\x3F\x03\x00\x07\x44\x03\x00\x07\x49\x03\x00\x07\x4E\x03\x00\x07\x53\x03\x00\x07\x58\x03\x00\x07\x5D\x03\x00\x07\x63\x03\x00\x07\x68\x03\x00\x07\x6E\x03\x00\x07\x73\x03\x00\x07\x78\x03\x00\x07\x7D\x03\x00\x07\x82\x03\x00\x07\x87\x03\x00\x07\x8C\x03\x00\x07\x92\x03\x00\x07\x97\x03\x00\x07\x9C\x03\x00\x07\xA1\x03\x00\x07\xA6\x03\x00\x07\xAB\x03\x00\x07\xB0\x03\x00\x07\xB5\x03\x00\x07\xBA\x03\x00\x07\xBF\x03\x00\x07\xC6\x03\x00\x07\xCC\x03\x00\x07\xD2\x03\x00\x07\xD9\x03\x00\x07\xDD\x03\x00\x07\xE3\x03\x00\x07\xE8\x03\x00\x07\xED\x03\x00\x07\xF2\x03\x00\x07\xFC\x03\x00\x08\x01\x03\x00\x08\x06\x03\x00\x08\x10\x03\x00\x08\x15\x03\x00\x08\x1A\x03\x00\x08\x1F\x03\x00\x08\x23\x03\x00\x08\x27\x03\x00\x08\x2B\x03\x00\x08\x2F\x03\x00\x08\x33\x03\x00\x08\x37\x03\x00\x08\x3D\x03\x00\x08\x42\x03\x00\x08\x47\x03\x00\x08\x4C\x03\x00\x08\x51\x03\x00\x08\x54\x03\x00\x08\x58\x03\x00\x08\x5D\x03\x00\x08\x62\x03\x00\x08\x68\x03\x00\x08\x6C\x03\x00\x00\x00\x01\x00\x0D\xE7\x03\x00\x00\x10\x01\x00\x02\xC6\x09',
    _globals = (b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR',1,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR',0,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR',2,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_BUILD_TYPE_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR',0,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR',1,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_COMPATIBILITY_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_CREATE_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV',4,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV',1,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV',0,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV',2,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV',1,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV',2,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV',0,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR',1,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV',1,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR',2,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR',0,b'\xFF\xFF\xFF\x0BVK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV',0,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR',2097152,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV',2097152,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR',4194304,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV',4194304,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT',128,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR',128,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT',524288,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT',256,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR',256,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV',131072,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV',262144,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT',1048576,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT',512,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR',512,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT',1024,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR',1024,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT',16777216,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR',8388608,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_HOST_READ_BIT',8192,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_HOST_READ_BIT_KHR',8192,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_HOST_WRITE_BIT',16384,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_HOST_WRITE_BIT_KHR',16384,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_INDEX_READ_BIT',2,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_INDEX_READ_BIT_KHR',2,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_INDIRECT_COMMAND_READ_BIT',1,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR',1,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT',16,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR',16,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI',549755813888,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_MEMORY_READ_BIT',32768,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_MEMORY_READ_BIT_KHR',32768,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_MEMORY_WRITE_BIT',65536,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_MEMORY_WRITE_BIT_KHR',65536,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_NONE',0,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_NONE_KHR',0,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADER_READ_BIT',32,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADER_READ_BIT_KHR',32,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADER_SAMPLED_READ_BIT',4294967296,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR',4294967296,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADER_STORAGE_READ_BIT',8589934592,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR',8589934592,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADER_STORAGE_WRITE_BIT',17179869184,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR',17179869184,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADER_WRITE_BIT',64,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADER_WRITE_BIT_KHR',64,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV',8388608,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_TRANSFER_READ_BIT',2048,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_TRANSFER_READ_BIT_KHR',2048,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_TRANSFER_WRITE_BIT',4096,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_TRANSFER_WRITE_BIT_KHR',4096,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT',67108864,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT',134217728,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT',33554432,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_UNIFORM_READ_BIT',8,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_UNIFORM_READ_BIT_KHR',8,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT',4,b'\xFF\xFF\xFF\x1FVK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR',2097152,b'\xFF\xFF\xFF\x0BVK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV',2097152,b'\xFF\xFF\xFF\x0BVK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR',4194304,b'\xFF\xFF\xFF\x0BVK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV',4194304,b'\xFF\xFF\xFF\x0BVK_ACCESS_COLOR_ATTACHMENT_READ_BIT',128,b'\xFF\xFF\xFF\x0BVK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT',524288,b'\xFF\xFF\xFF\x0BVK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT',256,b'\xFF\xFF\xFF\x0BVK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV',131072,b'\xFF\xFF\xFF\x0BVK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV',262144,b'\xFF\xFF\xFF\x0BVK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT',1048576,b'\xFF\xFF\xFF\x0BVK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT',512,b'\xFF\xFF\xFF\x0BVK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT',1024,b'\xFF\xFF\xFF\x0BVK_ACCESS_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT',16777216,b'\xFF\xFF\xFF\x0BVK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR',8388608,b'\xFF\xFF\xFF\x0BVK_ACCESS_HOST_READ_BIT',8192,b'\xFF\xFF\xFF\x0BVK_ACCESS_HOST_WRITE_BIT',16384,b'\xFF\xFF\xFF\x0BVK_ACCESS_INDEX_READ_BIT',2,b'\xFF\xFF\xFF\x0BVK_ACCESS_INDIRECT_COMMAND_READ_BIT',1,b'\xFF\xFF\xFF\x0BVK_ACCESS_INPUT_ATTACHMENT_READ_BIT',16,b'\xFF\xFF\xFF\x0BVK_ACCESS_MEMORY_READ_BIT',32768,b'\xFF\xFF\xFF\x0BVK_ACCESS_MEMORY_WRITE_BIT',65536,b'\xFF\xFF\xFF\x0BVK_ACCESS_NONE',0,b'\xFF\xFF\xFF\x0BVK_ACCESS_NONE_KHR',0,b'\xFF\xFF\xFF\x0BVK_ACCESS_SHADER_READ_BIT',32,b'\xFF\xFF\xFF\x0BVK_ACCESS_SHADER_WRITE_BIT',64,b'\xFF\xFF\xFF\x0BVK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV',8388608,b'\xFF\xFF\xFF\x0BVK_ACCESS_TRANSFER_READ_BIT',2048,b'\xFF\xFF\xFF\x0BVK_ACCESS_TRANSFER_WRITE_BIT',4096,b'\xFF\xFF\xFF\x0BVK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT',67108864,b'\xFF\xFF\xFF\x0BVK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT',134217728,b'\xFF\xFF\xFF\x0BVK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT',33554432,b'\xFF\xFF\xFF\x0BVK_ACCESS_UNIFORM_READ_BIT',8,b'\xFF\xFF\xFF\x0BVK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT',4,b'\xFF\xFF\xFF\x0BVK_ACQUIRE_PROFILING_LOCK_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT',1,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_LOAD_OP_CLEAR',1,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_LOAD_OP_DONT_CARE',2,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_LOAD_OP_LOAD',0,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_LOAD_OP_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_LOAD_OP_NONE_EXT',1000400000,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_STORE_OP_DONT_CARE',1,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_STORE_OP_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_STORE_OP_NONE',1000301000,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_STORE_OP_NONE_EXT',1000301000,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_STORE_OP_NONE_KHR',1000301000,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_STORE_OP_NONE_QCOM',1000301000,b'\xFF\xFF\xFF\x0BVK_ATTACHMENT_STORE_OP_STORE',0,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_CONSTANT_ALPHA',12,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_CONSTANT_COLOR',10,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_DST_ALPHA',8,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_DST_COLOR',4,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_ONE',1,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA',13,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR',11,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA',9,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_ONE_MINUS_DST_COLOR',5,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA',18,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR',16,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA',7,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR',3,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_SRC1_ALPHA',17,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_SRC1_COLOR',15,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_SRC_ALPHA',6,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_SRC_ALPHA_SATURATE',14,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_SRC_COLOR',2,b'\xFF\xFF\xFF\x0BVK_BLEND_FACTOR_ZERO',0,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_ADD',0,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_BLUE_EXT',1000148045,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_COLORBURN_EXT',1000148018,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_COLORDODGE_EXT',1000148017,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_CONTRAST_EXT',1000148041,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_DARKEN_EXT',1000148015,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_DIFFERENCE_EXT',1000148021,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_DST_ATOP_EXT',1000148010,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_DST_EXT',1000148002,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_DST_IN_EXT',1000148006,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_DST_OUT_EXT',1000148008,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_DST_OVER_EXT',1000148004,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_EXCLUSION_EXT',1000148022,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_GREEN_EXT',1000148044,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_HARDLIGHT_EXT',1000148019,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_HARDMIX_EXT',1000148030,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_HSL_COLOR_EXT',1000148033,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_HSL_HUE_EXT',1000148031,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_HSL_LUMINOSITY_EXT',1000148034,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_HSL_SATURATION_EXT',1000148032,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_INVERT_EXT',1000148023,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_INVERT_OVG_EXT',1000148042,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_INVERT_RGB_EXT',1000148024,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_LIGHTEN_EXT',1000148016,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_LINEARBURN_EXT',1000148026,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_LINEARDODGE_EXT',1000148025,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_LINEARLIGHT_EXT',1000148028,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_MAX',4,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_MIN',3,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_MINUS_CLAMPED_EXT',1000148040,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_MINUS_EXT',1000148039,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_MULTIPLY_EXT',1000148012,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_OVERLAY_EXT',1000148014,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_PINLIGHT_EXT',1000148029,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT',1000148037,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_PLUS_CLAMPED_EXT',1000148036,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_PLUS_DARKER_EXT',1000148038,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_PLUS_EXT',1000148035,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_RED_EXT',1000148043,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_REVERSE_SUBTRACT',2,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_SCREEN_EXT',1000148013,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_SOFTLIGHT_EXT',1000148020,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_SRC_ATOP_EXT',1000148009,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_SRC_EXT',1000148001,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_SRC_IN_EXT',1000148005,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_SRC_OUT_EXT',1000148007,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_SRC_OVER_EXT',1000148003,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_SUBTRACT',1,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_VIVIDLIGHT_EXT',1000148027,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_XOR_EXT',1000148011,b'\xFF\xFF\xFF\x0BVK_BLEND_OP_ZERO_EXT',1000148000,b'\xFF\xFF\xFF\x0BVK_BLEND_OVERLAP_CONJOINT_EXT',2,b'\xFF\xFF\xFF\x0BVK_BLEND_OVERLAP_DISJOINT_EXT',1,b'\xFF\xFF\xFF\x0BVK_BLEND_OVERLAP_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_BLEND_OVERLAP_UNCORRELATED_EXT',0,b'\xFF\xFF\xFF\x0BVK_BORDER_COLOR_FLOAT_CUSTOM_EXT',1000287003,b'\xFF\xFF\xFF\x0BVK_BORDER_COLOR_FLOAT_OPAQUE_BLACK',2,b'\xFF\xFF\xFF\x0BVK_BORDER_COLOR_FLOAT_OPAQUE_WHITE',4,b'\xFF\xFF\xFF\x0BVK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK',0,b'\xFF\xFF\xFF\x0BVK_BORDER_COLOR_INT_CUSTOM_EXT',1000287004,b'\xFF\xFF\xFF\x0BVK_BORDER_COLOR_INT_OPAQUE_BLACK',3,b'\xFF\xFF\xFF\x0BVK_BORDER_COLOR_INT_OPAQUE_WHITE',5,b'\xFF\xFF\xFF\x0BVK_BORDER_COLOR_INT_TRANSPARENT_BLACK',1,b'\xFF\xFF\xFF\x0BVK_BORDER_COLOR_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT',16,b'\xFF\xFF\xFF\x0BVK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT',16,b'\xFF\xFF\xFF\x0BVK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR',16,b'\xFF\xFF\xFF\x0BVK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_BUFFER_CREATE_PROTECTED_BIT',8,b'\xFF\xFF\xFF\x0BVK_BUFFER_CREATE_SPARSE_ALIASED_BIT',4,b'\xFF\xFF\xFF\x0BVK_BUFFER_CREATE_SPARSE_BINDING_BIT',1,b'\xFF\xFF\xFF\x0BVK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT',2,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR',524288,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR',1048576,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT',512,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_INDEX_BUFFER_BIT',64,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_INDIRECT_BUFFER_BIT',256,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_RAY_TRACING_BIT_NV',1024,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR',1024,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT',131072,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT',131072,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR',131072,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_STORAGE_BUFFER_BIT',32,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT',8,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_TRANSFER_DST_BIT',2,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_TRANSFER_SRC_BIT',1,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT',2048,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT',4096,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_UNIFORM_BUFFER_BIT',16,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT',4,b'\xFF\xFF\xFF\x0BVK_BUFFER_USAGE_VERTEX_BUFFER_BIT',128,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV',2,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV',1,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR',16,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV',16,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR',0,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR',1,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV',32,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV',8,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV',4,b'\xFF\xFF\xFF\x0BVK_CHROMA_LOCATION_COSITED_EVEN',0,b'\xFF\xFF\xFF\x0BVK_CHROMA_LOCATION_COSITED_EVEN_KHR',0,b'\xFF\xFF\xFF\x0BVK_CHROMA_LOCATION_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_CHROMA_LOCATION_MIDPOINT',1,b'\xFF\xFF\xFF\x0BVK_CHROMA_LOCATION_MIDPOINT_KHR',1,b'\xFF\xFF\xFF\x0BVK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV',1,b'\xFF\xFF\xFF\x0BVK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV',0,b'\xFF\xFF\xFF\x0BVK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV',2,b'\xFF\xFF\xFF\x0BVK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV',3,b'\xFF\xFF\xFF\x0BVK_COLORSPACE_SRGB_NONLINEAR_KHR',0,b'\xFF\xFF\xFF\x0BVK_COLOR_COMPONENT_A_BIT',8,b'\xFF\xFF\xFF\x0BVK_COLOR_COMPONENT_B_BIT',4,b'\xFF\xFF\xFF\x0BVK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_COLOR_COMPONENT_G_BIT',2,b'\xFF\xFF\xFF\x0BVK_COLOR_COMPONENT_R_BIT',1,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_ADOBERGB_LINEAR_EXT',1000104011,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT',1000104012,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_BT2020_LINEAR_EXT',1000104007,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_BT709_LINEAR_EXT',1000104005,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_BT709_NONLINEAR_EXT',1000104006,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_DCI_P3_LINEAR_EXT',1000104003,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT',1000104004,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_DISPLAY_NATIVE_AMD',1000213000,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT',1000104003,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT',1000104001,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_DOLBYVISION_EXT',1000104009,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT',1000104002,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT',1000104014,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_HDR10_HLG_EXT',1000104010,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_HDR10_ST2084_EXT',1000104008,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_PASS_THROUGH_EXT',1000104013,b'\xFF\xFF\xFF\x0BVK_COLOR_SPACE_SRGB_NONLINEAR_KHR',0,b'\xFF\xFF\xFF\x0BVK_COMMAND_BUFFER_LEVEL_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_COMMAND_BUFFER_LEVEL_PRIMARY',0,b'\xFF\xFF\xFF\x0BVK_COMMAND_BUFFER_LEVEL_SECONDARY',1,b'\xFF\xFF\xFF\x0BVK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT',1,b'\xFF\xFF\xFF\x0BVK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT',1,b'\xFF\xFF\xFF\x0BVK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT',2,b'\xFF\xFF\xFF\x0BVK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT',4,b'\xFF\xFF\xFF\x0BVK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_COMMAND_POOL_CREATE_PROTECTED_BIT',4,b'\xFF\xFF\xFF\x0BVK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT',2,b'\xFF\xFF\xFF\x0BVK_COMMAND_POOL_CREATE_TRANSIENT_BIT',1,b'\xFF\xFF\xFF\x0BVK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT',1,b'\xFF\xFF\xFF\x0BVK_COMPARE_OP_ALWAYS',7,b'\xFF\xFF\xFF\x0BVK_COMPARE_OP_EQUAL',2,b'\xFF\xFF\xFF\x0BVK_COMPARE_OP_GREATER',4,b'\xFF\xFF\xFF\x0BVK_COMPARE_OP_GREATER_OR_EQUAL',6,b'\xFF\xFF\xFF\x0BVK_COMPARE_OP_LESS',1,b'\xFF\xFF\xFF\x0BVK_COMPARE_OP_LESS_OR_EQUAL',3,b'\xFF\xFF\xFF\x0BVK_COMPARE_OP_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_COMPARE_OP_NEVER',0,b'\xFF\xFF\xFF\x0BVK_COMPARE_OP_NOT_EQUAL',5,b'\xFF\xFF\xFF\x0BVK_COMPONENT_SWIZZLE_A',6,b'\xFF\xFF\xFF\x0BVK_COMPONENT_SWIZZLE_B',5,b'\xFF\xFF\xFF\x0BVK_COMPONENT_SWIZZLE_G',4,b'\xFF\xFF\xFF\x0BVK_COMPONENT_SWIZZLE_IDENTITY',0,b'\xFF\xFF\xFF\x0BVK_COMPONENT_SWIZZLE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_COMPONENT_SWIZZLE_ONE',2,b'\xFF\xFF\xFF\x0BVK_COMPONENT_SWIZZLE_R',3,b'\xFF\xFF\xFF\x0BVK_COMPONENT_SWIZZLE_ZERO',1,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_FLOAT16_NV',0,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_FLOAT32_NV',1,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_FLOAT64_NV',2,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_SINT16_NV',4,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_SINT32_NV',5,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_SINT64_NV',6,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_SINT8_NV',3,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_UINT16_NV',8,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_UINT32_NV',9,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_UINT64_NV',10,b'\xFF\xFF\xFF\x0BVK_COMPONENT_TYPE_UINT8_NV',7,b'\xFF\xFF\xFF\x0BVK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_COMPOSITE_ALPHA_INHERIT_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_CONDITIONAL_RENDERING_FLAG_BITS_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT',0,b'\xFF\xFF\xFF\x0BVK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT',1,b'\xFF\xFF\xFF\x0BVK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT',2,b'\xFF\xFF\xFF\x0BVK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR',0,b'\xFF\xFF\xFF\x0BVK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV',0,b'\xFF\xFF\xFF\x0BVK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR',1,b'\xFF\xFF\xFF\x0BVK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV',1,b'\xFF\xFF\xFF\x0BVK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR',3,b'\xFF\xFF\xFF\x0BVK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR',2,b'\xFF\xFF\xFF\x0BVK_COVERAGE_MODULATION_MODE_ALPHA_NV',2,b'\xFF\xFF\xFF\x0BVK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_COVERAGE_MODULATION_MODE_NONE_NV',0,b'\xFF\xFF\xFF\x0BVK_COVERAGE_MODULATION_MODE_RGBA_NV',3,b'\xFF\xFF\xFF\x0BVK_COVERAGE_MODULATION_MODE_RGB_NV',1,b'\xFF\xFF\xFF\x0BVK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_COVERAGE_REDUCTION_MODE_MERGE_NV',0,b'\xFF\xFF\xFF\x0BVK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV',1,b'\xFF\xFF\xFF\x0BVK_CULL_MODE_BACK_BIT',2,b'\xFF\xFF\xFF\x0BVK_CULL_MODE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_CULL_MODE_FRONT_AND_BACK',3,b'\xFF\xFF\xFF\x0BVK_CULL_MODE_FRONT_BIT',1,b'\xFF\xFF\xFF\x0BVK_CULL_MODE_NONE',0,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_DEBUG_BIT_EXT',16,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_ERROR_BIT_EXT',8,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_INFORMATION_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT',1000150000,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT',1000165000,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT',1000366000,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT',9,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT',13,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT',6,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT',25,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT',1000029001,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT',1000029000,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT',28,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT',28,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT',22,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT',23,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT',20,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT',1000085000,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT',1000085000,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT',3,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT',8,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT',29,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT',30,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT',11,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT',7,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT',24,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT',10,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT',14,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT',1,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT',2,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT',16,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT',19,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT',17,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT',12,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT',4,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT',18,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT',21,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT',1000156000,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT',1000156000,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT',5,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT',15,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT',26,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT',27,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT',0,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT',33,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT',33,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT',4,b'\xFF\xFF\xFF\x0BVK_DEBUG_REPORT_WARNING_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT',4096,b'\xFF\xFF\xFF\x0BVK_DEBUG_UTILS_MESSAGE_SEVERITY_FLAG_BITS_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT',16,b'\xFF\xFF\xFF\x0BVK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT',256,b'\xFF\xFF\xFF\x0BVK_DEBUG_UTILS_MESSAGE_TYPE_FLAG_BITS_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT',4,b'\xFF\xFF\xFF\x0BVK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_DEPENDENCY_BY_REGION_BIT',1,b'\xFF\xFF\xFF\x0BVK_DEPENDENCY_DEVICE_GROUP_BIT',4,b'\xFF\xFF\xFF\x0BVK_DEPENDENCY_DEVICE_GROUP_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_DEPENDENCY_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_DEPENDENCY_VIEW_LOCAL_BIT',2,b'\xFF\xFF\xFF\x0BVK_DEPENDENCY_VIEW_LOCAL_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT',4,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT',4,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT',1,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT',2,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT',8,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT',8,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT',1,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE',4,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT',2,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE',4,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT',2,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR',1000150000,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV',1000165000,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER',1,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK',1000138000,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT',1000138000,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT',10,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_MUTABLE_VALVE',1000351000,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_SAMPLED_IMAGE',2,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_SAMPLER',0,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_STORAGE_BUFFER',7,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC',9,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_STORAGE_IMAGE',3,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER',5,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_UNIFORM_BUFFER',6,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC',8,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER',4,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET',0,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR',0,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR',1,b'\xFF\xFF\xFF\x0BVK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV',4,b'\xFF\xFF\xFF\x0BVK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV',2,b'\xFF\xFF\xFF\x0BVK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV',1,b'\xFF\xFF\xFF\x0BVK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT',0,b'\xFF\xFF\xFF\x0BVK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT',0,b'\xFF\xFF\xFF\x0BVK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT',4,b'\xFF\xFF\xFF\x0BVK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT',1,b'\xFF\xFF\xFF\x0BVK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT',2,b'\xFF\xFF\xFF\x0BVK_DEVICE_MEMORY_REPORT_EVENT_TYPE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT',3,b'\xFF\xFF\xFF\x0BVK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_DEVICE_QUEUE_CREATE_PROTECTED_BIT',1,b'\xFF\xFF\xFF\x0BVK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT',1,b'\xFF\xFF\xFF\x0BVK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT',0,b'\xFF\xFF\xFF\x0BVK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT',0,b'\xFF\xFF\xFF\x0BVK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_DISPLAY_POWER_STATE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_DISPLAY_POWER_STATE_OFF_EXT',0,b'\xFF\xFF\xFF\x0BVK_DISPLAY_POWER_STATE_ON_EXT',2,b'\xFF\xFF\xFF\x0BVK_DISPLAY_POWER_STATE_SUSPEND_EXT',1,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_AMD_OPEN_SOURCE',2,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_AMD_OPEN_SOURCE_KHR',2,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_AMD_PROPRIETARY',1,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_AMD_PROPRIETARY_KHR',1,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_ARM_PROPRIETARY',9,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_ARM_PROPRIETARY_KHR',9,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_BROADCOM_PROPRIETARY',12,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR',12,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_COREAVI_PROPRIETARY',15,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_GGP_PROPRIETARY',11,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_GGP_PROPRIETARY_KHR',11,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_GOOGLE_SWIFTSHADER',10,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR',10,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_IMAGINATION_PROPRIETARY',7,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR',7,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA',6,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR',6,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS',5,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR',5,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_JUICE_PROPRIETARY',16,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_MESA_LLVMPIPE',13,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_MESA_PANVK',20,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_MESA_RADV',3,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_MESA_RADV_KHR',3,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_MESA_TURNIP',18,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_MESA_V3DV',19,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_MESA_VENUS',22,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_MOLTENVK',14,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_NVIDIA_PROPRIETARY',4,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR',4,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_QUALCOMM_PROPRIETARY',8,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR',8,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_SAMSUNG_PROPRIETARY',21,b'\xFF\xFF\xFF\x0BVK_DRIVER_ID_VERISILICON_PROPRIETARY',17,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_BLEND_CONSTANTS',4,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT',1000381000,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_CULL_MODE',1000267000,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_CULL_MODE_EXT',1000267000,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_BIAS',3,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE',1000377002,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT',1000377002,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_BOUNDS',5,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE',1000267009,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT',1000267009,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_COMPARE_OP',1000267008,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT',1000267008,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_TEST_ENABLE',1000267006,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT',1000267006,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE',1000267007,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT',1000267007,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT',1000099000,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV',1000205001,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR',1000226000,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_FRONT_FACE',1000267001,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_FRONT_FACE_EXT',1000267001,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_LINE_STIPPLE_EXT',1000259000,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_LINE_WIDTH',2,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_LOGIC_OP_EXT',1000377003,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT',1000377000,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE',1000377004,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT',1000377004,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY',1000267002,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT',1000267002,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE',1000377001,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT',1000377001,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR',1000347000,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT',1000143000,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_SCISSOR',1,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_SCISSOR_WITH_COUNT',1000267004,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT',1000267004,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_STENCIL_COMPARE_MASK',6,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_STENCIL_OP',1000267011,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_STENCIL_OP_EXT',1000267011,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_STENCIL_REFERENCE',8,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_STENCIL_TEST_ENABLE',1000267010,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT',1000267010,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_STENCIL_WRITE_MASK',7,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE',1000267005,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT',1000267005,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_VERTEX_INPUT_EXT',1000352000,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_VIEWPORT',0,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV',1000164006,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV',1000164004,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT',1000267003,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT',1000267003,b'\xFF\xFF\xFF\x0BVK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV',1000087000,b'\xFF\xFF\xFF\x0BVK_ERROR_DEVICE_LOST',-4,b'\xFF\xFF\xFF\x0BVK_ERROR_EXTENSION_NOT_PRESENT',-7,b'\xFF\xFF\xFF\x0BVK_ERROR_FEATURE_NOT_PRESENT',-8,b'\xFF\xFF\xFF\x0BVK_ERROR_FORMAT_NOT_SUPPORTED',-11,b'\xFF\xFF\xFF\x0BVK_ERROR_FRAGMENTATION',-1000161000,b'\xFF\xFF\xFF\x0BVK_ERROR_FRAGMENTATION_EXT',-1000161000,b'\xFF\xFF\xFF\x0BVK_ERROR_FRAGMENTED_POOL',-12,b'\xFF\xFF\xFF\x0BVK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT',-1000255000,b'\xFF\xFF\xFF\x0BVK_ERROR_INCOMPATIBLE_DISPLAY_KHR',-1000003001,b'\xFF\xFF\xFF\x0BVK_ERROR_INCOMPATIBLE_DRIVER',-9,b'\xFF\xFF\xFF\x0BVK_ERROR_INITIALIZATION_FAILED',-3,b'\xFF\xFF\xFF\x0BVK_ERROR_INVALID_DEVICE_ADDRESS_EXT',-1000257000,b'\xFF\xFF\xFF\x0BVK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT',-1000158000,b'\xFF\xFF\xFF\x0BVK_ERROR_INVALID_EXTERNAL_HANDLE',-1000072003,b'\xFF\xFF\xFF\x0BVK_ERROR_INVALID_EXTERNAL_HANDLE_KHR',-1000072003,b'\xFF\xFF\xFF\x0BVK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS',-1000257000,b'\xFF\xFF\xFF\x0BVK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR',-1000257000,b'\xFF\xFF\xFF\x0BVK_ERROR_INVALID_SHADER_NV',-1000012000,b'\xFF\xFF\xFF\x0BVK_ERROR_LAYER_NOT_PRESENT',-6,b'\xFF\xFF\xFF\x0BVK_ERROR_MEMORY_MAP_FAILED',-5,b'\xFF\xFF\xFF\x0BVK_ERROR_NATIVE_WINDOW_IN_USE_KHR',-1000000001,b'\xFF\xFF\xFF\x0BVK_ERROR_NOT_PERMITTED_EXT',-1000174001,b'\xFF\xFF\xFF\x0BVK_ERROR_NOT_PERMITTED_KHR',-1000174001,b'\xFF\xFF\xFF\x0BVK_ERROR_OUT_OF_DATE_KHR',-1000001004,b'\xFF\xFF\xFF\x0BVK_ERROR_OUT_OF_DEVICE_MEMORY',-2,b'\xFF\xFF\xFF\x0BVK_ERROR_OUT_OF_HOST_MEMORY',-1,b'\xFF\xFF\xFF\x0BVK_ERROR_OUT_OF_POOL_MEMORY',-1000069000,b'\xFF\xFF\xFF\x0BVK_ERROR_OUT_OF_POOL_MEMORY_KHR',-1000069000,b'\xFF\xFF\xFF\x0BVK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT',1000297000,b'\xFF\xFF\xFF\x0BVK_ERROR_SURFACE_LOST_KHR',-1000000000,b'\xFF\xFF\xFF\x0BVK_ERROR_TOO_MANY_OBJECTS',-10,b'\xFF\xFF\xFF\x0BVK_ERROR_UNKNOWN',-13,b'\xFF\xFF\xFF\x0BVK_ERROR_VALIDATION_FAILED_EXT',-1000011001,b'\xFF\xFF\xFF\x0BVK_EVENT_CREATE_DEVICE_ONLY_BIT',1,b'\xFF\xFF\xFF\x0BVK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_EVENT_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_EVENT_RESET',4,b'\xFF\xFF\xFF\x0BVK_EVENT_SET',3,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT',4,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT',8,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT',4,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV',4,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID',1024,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV',4,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV',8,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT',8,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT',16,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR',16,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT',32,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR',32,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT',64,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR',64,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT',512,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT',128,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT',256,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT',4,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV',4096,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA',2048,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT',8,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT',8,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT',4,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT',16,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR',16,b'\xFF\xFF\xFF\x0BVK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA',128,b'\xFF\xFF\xFF\x0BVK_FENCE_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_FENCE_CREATE_SIGNALED_BIT',1,b'\xFF\xFF\xFF\x0BVK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_FENCE_IMPORT_TEMPORARY_BIT',1,b'\xFF\xFF\xFF\x0BVK_FENCE_IMPORT_TEMPORARY_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_FILTER_CUBIC_EXT',1000015000,b'\xFF\xFF\xFF\x0BVK_FILTER_CUBIC_IMG',1000015000,b'\xFF\xFF\xFF\x0BVK_FILTER_LINEAR',1,b'\xFF\xFF\xFF\x0BVK_FILTER_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_FILTER_NEAREST',0,b'\xFF\xFF\xFF\x0BVK_FORMAT_A1R5G5B5_UNORM_PACK16',8,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2B10G10R10_SINT_PACK32',69,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2B10G10R10_SNORM_PACK32',65,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2B10G10R10_SSCALED_PACK32',67,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2B10G10R10_UINT_PACK32',68,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2B10G10R10_UNORM_PACK32',64,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2B10G10R10_USCALED_PACK32',66,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2R10G10B10_SINT_PACK32',63,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2R10G10B10_SNORM_PACK32',59,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2R10G10B10_SSCALED_PACK32',61,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2R10G10B10_UINT_PACK32',62,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2R10G10B10_UNORM_PACK32',58,b'\xFF\xFF\xFF\x0BVK_FORMAT_A2R10G10B10_USCALED_PACK32',60,b'\xFF\xFF\xFF\x0BVK_FORMAT_A4B4G4R4_UNORM_PACK16',1000340001,b'\xFF\xFF\xFF\x0BVK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT',1000340001,b'\xFF\xFF\xFF\x0BVK_FORMAT_A4R4G4B4_UNORM_PACK16',1000340000,b'\xFF\xFF\xFF\x0BVK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT',1000340000,b'\xFF\xFF\xFF\x0BVK_FORMAT_A8B8G8R8_SINT_PACK32',56,b'\xFF\xFF\xFF\x0BVK_FORMAT_A8B8G8R8_SNORM_PACK32',52,b'\xFF\xFF\xFF\x0BVK_FORMAT_A8B8G8R8_SRGB_PACK32',57,b'\xFF\xFF\xFF\x0BVK_FORMAT_A8B8G8R8_SSCALED_PACK32',54,b'\xFF\xFF\xFF\x0BVK_FORMAT_A8B8G8R8_UINT_PACK32',55,b'\xFF\xFF\xFF\x0BVK_FORMAT_A8B8G8R8_UNORM_PACK32',51,b'\xFF\xFF\xFF\x0BVK_FORMAT_A8B8G8R8_USCALED_PACK32',53,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x10_SFLOAT_BLOCK',1000066011,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT',1000066011,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x10_SRGB_BLOCK',180,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x10_UNORM_BLOCK',179,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x5_SFLOAT_BLOCK',1000066008,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT',1000066008,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x5_SRGB_BLOCK',174,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x5_UNORM_BLOCK',173,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x6_SFLOAT_BLOCK',1000066009,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT',1000066009,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x6_SRGB_BLOCK',176,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x6_UNORM_BLOCK',175,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x8_SFLOAT_BLOCK',1000066010,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT',1000066010,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x8_SRGB_BLOCK',178,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_10x8_UNORM_BLOCK',177,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_12x10_SFLOAT_BLOCK',1000066012,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT',1000066012,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_12x10_SRGB_BLOCK',182,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_12x10_UNORM_BLOCK',181,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_12x12_SFLOAT_BLOCK',1000066013,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT',1000066013,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_12x12_SRGB_BLOCK',184,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_12x12_UNORM_BLOCK',183,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_4x4_SFLOAT_BLOCK',1000066000,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT',1000066000,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_4x4_SRGB_BLOCK',158,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_4x4_UNORM_BLOCK',157,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_5x4_SFLOAT_BLOCK',1000066001,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT',1000066001,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_5x4_SRGB_BLOCK',160,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_5x4_UNORM_BLOCK',159,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_5x5_SFLOAT_BLOCK',1000066002,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT',1000066002,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_5x5_SRGB_BLOCK',162,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_5x5_UNORM_BLOCK',161,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_6x5_SFLOAT_BLOCK',1000066003,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT',1000066003,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_6x5_SRGB_BLOCK',164,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_6x5_UNORM_BLOCK',163,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_6x6_SFLOAT_BLOCK',1000066004,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT',1000066004,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_6x6_SRGB_BLOCK',166,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_6x6_UNORM_BLOCK',165,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x5_SFLOAT_BLOCK',1000066005,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT',1000066005,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x5_SRGB_BLOCK',168,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x5_UNORM_BLOCK',167,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x6_SFLOAT_BLOCK',1000066006,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT',1000066006,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x6_SRGB_BLOCK',170,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x6_UNORM_BLOCK',169,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x8_SFLOAT_BLOCK',1000066007,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT',1000066007,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x8_SRGB_BLOCK',172,b'\xFF\xFF\xFF\x0BVK_FORMAT_ASTC_8x8_UNORM_BLOCK',171,b'\xFF\xFF\xFF\x0BVK_FORMAT_B10G11R11_UFLOAT_PACK32',122,b'\xFF\xFF\xFF\x0BVK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16',1000156011,b'\xFF\xFF\xFF\x0BVK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR',1000156011,b'\xFF\xFF\xFF\x0BVK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16',1000156021,b'\xFF\xFF\xFF\x0BVK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR',1000156021,b'\xFF\xFF\xFF\x0BVK_FORMAT_B16G16R16G16_422_UNORM',1000156028,b'\xFF\xFF\xFF\x0BVK_FORMAT_B16G16R16G16_422_UNORM_KHR',1000156028,b'\xFF\xFF\xFF\x0BVK_FORMAT_B4G4R4A4_UNORM_PACK16',3,b'\xFF\xFF\xFF\x0BVK_FORMAT_B5G5R5A1_UNORM_PACK16',7,b'\xFF\xFF\xFF\x0BVK_FORMAT_B5G6R5_UNORM_PACK16',5,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8A8_SINT',49,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8A8_SNORM',45,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8A8_SRGB',50,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8A8_SSCALED',47,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8A8_UINT',48,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8A8_UNORM',44,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8A8_USCALED',46,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8G8_422_UNORM',1000156001,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8G8_422_UNORM_KHR',1000156001,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8_SINT',35,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8_SNORM',31,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8_SRGB',36,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8_SSCALED',33,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8_UINT',34,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8_UNORM',30,b'\xFF\xFF\xFF\x0BVK_FORMAT_B8G8R8_USCALED',32,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC1_RGBA_SRGB_BLOCK',134,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC1_RGBA_UNORM_BLOCK',133,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC1_RGB_SRGB_BLOCK',132,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC1_RGB_UNORM_BLOCK',131,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC2_SRGB_BLOCK',136,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC2_UNORM_BLOCK',135,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC3_SRGB_BLOCK',138,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC3_UNORM_BLOCK',137,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC4_SNORM_BLOCK',140,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC4_UNORM_BLOCK',139,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC5_SNORM_BLOCK',142,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC5_UNORM_BLOCK',141,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC6H_SFLOAT_BLOCK',144,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC6H_UFLOAT_BLOCK',143,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC7_SRGB_BLOCK',146,b'\xFF\xFF\xFF\x0BVK_FORMAT_BC7_UNORM_BLOCK',145,b'\xFF\xFF\xFF\x0BVK_FORMAT_D16_UNORM',124,b'\xFF\xFF\xFF\x0BVK_FORMAT_D16_UNORM_S8_UINT',128,b'\xFF\xFF\xFF\x0BVK_FORMAT_D24_UNORM_S8_UINT',129,b'\xFF\xFF\xFF\x0BVK_FORMAT_D32_SFLOAT',126,b'\xFF\xFF\xFF\x0BVK_FORMAT_D32_SFLOAT_S8_UINT',130,b'\xFF\xFF\xFF\x0BVK_FORMAT_E5B9G9R9_UFLOAT_PACK32',123,b'\xFF\xFF\xFF\x0BVK_FORMAT_EAC_R11G11_SNORM_BLOCK',156,b'\xFF\xFF\xFF\x0BVK_FORMAT_EAC_R11G11_UNORM_BLOCK',155,b'\xFF\xFF\xFF\x0BVK_FORMAT_EAC_R11_SNORM_BLOCK',154,b'\xFF\xFF\xFF\x0BVK_FORMAT_EAC_R11_UNORM_BLOCK',153,b'\xFF\xFF\xFF\x0BVK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK',150,b'\xFF\xFF\xFF\x0BVK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK',149,b'\xFF\xFF\xFF\x0BVK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK',152,b'\xFF\xFF\xFF\x0BVK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK',151,b'\xFF\xFF\xFF\x0BVK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK',148,b'\xFF\xFF\xFF\x0BVK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK',147,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR',536870912,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_BLIT_DST_BIT',2048,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR',2048,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_BLIT_SRC_BIT',1024,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR',1024,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT',128,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR',128,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT',256,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR',256,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT',8388608,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR',8388608,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT',512,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR',512,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_DISJOINT_BIT',4194304,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR',4194304,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT',16777216,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR',1073741824,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV',274877906944,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT',131072,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR',131072,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT',1,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR',1,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT',8589934592,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR',8589934592,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT',8192,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT',8192,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT',4096,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR',4096,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT',65536,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR',65536,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT',1048576,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR',1048576,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT',2097152,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR',2097152,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT',262144,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR',262144,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT',524288,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR',524288,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT',4,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR',4,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT',2,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR',2,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT',2147483648,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR',2147483648,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT',32,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR',32,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT',16,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR',16,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT',4294967296,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR',4294967296,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_TRANSFER_DST_BIT',32768,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR',32768,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT',16384,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR',16384,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT',8,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR',8,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT',64,b'\xFF\xFF\xFF\x1FVK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR',64,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR',536870912,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_BLIT_DST_BIT',2048,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_BLIT_SRC_BIT',1024,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT',128,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT',256,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT',8388608,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR',8388608,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT',512,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_DISJOINT_BIT',4194304,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_DISJOINT_BIT_KHR',4194304,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT',16777216,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR',1073741824,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT',131072,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR',131072,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT',1,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT',8192,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG',8192,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT',4096,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT',65536,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT',65536,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT',1048576,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR',1048576,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT',2097152,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR',2097152,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT',262144,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR',262144,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT',524288,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR',524288,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT',4,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_STORAGE_IMAGE_BIT',2,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT',32,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT',16,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_TRANSFER_DST_BIT',32768,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR',32768,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_TRANSFER_SRC_BIT',16384,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR',16384,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT',8,b'\xFF\xFF\xFF\x0BVK_FORMAT_FEATURE_VERTEX_BUFFER_BIT',64,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16',1000156010,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR',1000156010,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16',1000156013,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR',1000156013,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16',1000156015,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR',1000156015,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16',1000330001,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT',1000330001,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16',1000156012,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR',1000156012,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16',1000156014,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR',1000156014,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16',1000156016,b'\xFF\xFF\xFF\x0BVK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR',1000156016,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16',1000156020,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR',1000156020,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16',1000156023,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR',1000156023,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16',1000156025,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR',1000156025,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16',1000330002,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT',1000330002,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16',1000156022,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR',1000156022,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16',1000156024,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR',1000156024,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16',1000156026,b'\xFF\xFF\xFF\x0BVK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR',1000156026,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16B16G16R16_422_UNORM',1000156027,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16B16G16R16_422_UNORM_KHR',1000156027,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16R16_2PLANE_420_UNORM',1000156030,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR',1000156030,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16R16_2PLANE_422_UNORM',1000156032,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR',1000156032,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16R16_2PLANE_444_UNORM',1000330003,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT',1000330003,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16_R16_3PLANE_420_UNORM',1000156029,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR',1000156029,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16_R16_3PLANE_422_UNORM',1000156031,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR',1000156031,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16_R16_3PLANE_444_UNORM',1000156033,b'\xFF\xFF\xFF\x0BVK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR',1000156033,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8B8G8R8_422_UNORM',1000156000,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8B8G8R8_422_UNORM_KHR',1000156000,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8R8_2PLANE_420_UNORM',1000156003,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR',1000156003,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8R8_2PLANE_422_UNORM',1000156005,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR',1000156005,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8R8_2PLANE_444_UNORM',1000330000,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT',1000330000,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8_R8_3PLANE_420_UNORM',1000156002,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR',1000156002,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8_R8_3PLANE_422_UNORM',1000156004,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR',1000156004,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8_R8_3PLANE_444_UNORM',1000156006,b'\xFF\xFF\xFF\x0BVK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR',1000156006,b'\xFF\xFF\xFF\x0BVK_FORMAT_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG',1000054004,b'\xFF\xFF\xFF\x0BVK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG',1000054000,b'\xFF\xFF\xFF\x0BVK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG',1000054005,b'\xFF\xFF\xFF\x0BVK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG',1000054001,b'\xFF\xFF\xFF\x0BVK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG',1000054006,b'\xFF\xFF\xFF\x0BVK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG',1000054002,b'\xFF\xFF\xFF\x0BVK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG',1000054007,b'\xFF\xFF\xFF\x0BVK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG',1000054003,b'\xFF\xFF\xFF\x0BVK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16',1000156009,b'\xFF\xFF\xFF\x0BVK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR',1000156009,b'\xFF\xFF\xFF\x0BVK_FORMAT_R10X6G10X6_UNORM_2PACK16',1000156008,b'\xFF\xFF\xFF\x0BVK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR',1000156008,b'\xFF\xFF\xFF\x0BVK_FORMAT_R10X6_UNORM_PACK16',1000156007,b'\xFF\xFF\xFF\x0BVK_FORMAT_R10X6_UNORM_PACK16_KHR',1000156007,b'\xFF\xFF\xFF\x0BVK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16',1000156019,b'\xFF\xFF\xFF\x0BVK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR',1000156019,b'\xFF\xFF\xFF\x0BVK_FORMAT_R12X4G12X4_UNORM_2PACK16',1000156018,b'\xFF\xFF\xFF\x0BVK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR',1000156018,b'\xFF\xFF\xFF\x0BVK_FORMAT_R12X4_UNORM_PACK16',1000156017,b'\xFF\xFF\xFF\x0BVK_FORMAT_R12X4_UNORM_PACK16_KHR',1000156017,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16A16_SFLOAT',97,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16A16_SINT',96,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16A16_SNORM',92,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16A16_SSCALED',94,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16A16_UINT',95,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16A16_UNORM',91,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16A16_USCALED',93,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16_SFLOAT',90,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16_SINT',89,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16_SNORM',85,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16_SSCALED',87,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16_UINT',88,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16_UNORM',84,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16B16_USCALED',86,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16_SFLOAT',83,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16_SINT',82,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16_SNORM',78,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16_SSCALED',80,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16_UINT',81,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16_UNORM',77,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16G16_USCALED',79,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16_SFLOAT',76,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16_SINT',75,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16_SNORM',71,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16_SSCALED',73,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16_UINT',74,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16_UNORM',70,b'\xFF\xFF\xFF\x0BVK_FORMAT_R16_USCALED',72,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32G32B32A32_SFLOAT',109,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32G32B32A32_SINT',108,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32G32B32A32_UINT',107,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32G32B32_SFLOAT',106,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32G32B32_SINT',105,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32G32B32_UINT',104,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32G32_SFLOAT',103,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32G32_SINT',102,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32G32_UINT',101,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32_SFLOAT',100,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32_SINT',99,b'\xFF\xFF\xFF\x0BVK_FORMAT_R32_UINT',98,b'\xFF\xFF\xFF\x0BVK_FORMAT_R4G4B4A4_UNORM_PACK16',2,b'\xFF\xFF\xFF\x0BVK_FORMAT_R4G4_UNORM_PACK8',1,b'\xFF\xFF\xFF\x0BVK_FORMAT_R5G5B5A1_UNORM_PACK16',6,b'\xFF\xFF\xFF\x0BVK_FORMAT_R5G6B5_UNORM_PACK16',4,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64G64B64A64_SFLOAT',121,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64G64B64A64_SINT',120,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64G64B64A64_UINT',119,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64G64B64_SFLOAT',118,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64G64B64_SINT',117,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64G64B64_UINT',116,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64G64_SFLOAT',115,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64G64_SINT',114,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64G64_UINT',113,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64_SFLOAT',112,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64_SINT',111,b'\xFF\xFF\xFF\x0BVK_FORMAT_R64_UINT',110,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8A8_SINT',42,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8A8_SNORM',38,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8A8_SRGB',43,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8A8_SSCALED',40,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8A8_UINT',41,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8A8_UNORM',37,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8A8_USCALED',39,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8_SINT',28,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8_SNORM',24,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8_SRGB',29,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8_SSCALED',26,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8_UINT',27,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8_UNORM',23,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8B8_USCALED',25,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8_SINT',21,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8_SNORM',17,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8_SRGB',22,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8_SSCALED',19,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8_UINT',20,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8_UNORM',16,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8G8_USCALED',18,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8_SINT',14,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8_SNORM',10,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8_SRGB',15,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8_SSCALED',12,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8_UINT',13,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8_UNORM',9,b'\xFF\xFF\xFF\x0BVK_FORMAT_R8_USCALED',11,b'\xFF\xFF\xFF\x0BVK_FORMAT_S8_UINT',127,b'\xFF\xFF\xFF\x0BVK_FORMAT_UNDEFINED',0,b'\xFF\xFF\xFF\x0BVK_FORMAT_X8_D24_UNORM_PACK32',125,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV',14,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV',1,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV',4,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV',5,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV',6,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV',9,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV',10,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV',0,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV',11,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV',12,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV',13,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR',0,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR',3,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR',2,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR',4,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR',1,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV',15,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV',1,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV',0,b'\xFF\xFF\xFF\x0BVK_FRAGMENT_SHADING_RATE_TYPE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_FRAMEBUFFER_CREATE_IMAGELESS_BIT',1,b'\xFF\xFF\xFF\x0BVK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_FRONT_FACE_CLOCKWISE',1,b'\xFF\xFF\xFF\x0BVK_FRONT_FACE_COUNTER_CLOCKWISE',0,b'\xFF\xFF\xFF\x0BVK_FRONT_FACE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV',8,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV',4,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV',1,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV',2,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV',2,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_OPAQUE_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_OPAQUE_BIT_NV',1,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_TYPE_AABBS_KHR',1,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_TYPE_AABBS_NV',1,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_TYPE_INSTANCES_KHR',2,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_TYPE_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_TYPE_TRIANGLES_KHR',0,b'\xFF\xFF\xFF\x0BVK_GEOMETRY_TYPE_TRIANGLES_NV',0,b'\xFF\xFF\xFF\x0BVK_GRAPHICS_PIPELINE_LIBRARY_FLAG_BITS_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT',8,b'\xFF\xFF\xFF\x0BVK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT',4,b'\xFF\xFF\xFF\x0BVK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_COLOR_BIT',1,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_DEPTH_BIT',2,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT',128,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT',256,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT',512,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT',1024,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_METADATA_BIT',8,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_NONE',0,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_NONE_KHR',0,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_PLANE_0_BIT',16,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_PLANE_0_BIT_KHR',16,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_PLANE_1_BIT',32,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_PLANE_1_BIT_KHR',32,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_PLANE_2_BIT',64,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_PLANE_2_BIT_KHR',64,b'\xFF\xFF\xFF\x0BVK_IMAGE_ASPECT_STENCIL_BIT',4,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT',32,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR',32,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT',131072,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_ALIAS_BIT',1024,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_ALIAS_BIT_KHR',1024,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT',128,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR',128,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV',8192,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT',16,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_DISJOINT_BIT',512,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_DISJOINT_BIT_KHR',512,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_EXTENDED_USAGE_BIT',256,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR',256,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM',32768,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_MUTABLE_FORMAT_BIT',8,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_PROTECTED_BIT',2048,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT',4096,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_SPARSE_ALIASED_BIT',4,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_SPARSE_BINDING_BIT',1,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT',2,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT',64,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR',64,b'\xFF\xFF\xFF\x0BVK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT',16384,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL',1000314001,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR',1000314001,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL',2,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL',1000241000,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR',1000241000,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL',1000117001,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR',1000117001,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL',1000241001,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR',1000241001,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL',1000117000,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR',1000117000,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL',3,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL',4,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT',1000218000,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR',1000164003,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_GENERAL',1,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_PREINITIALIZED',8,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_PRESENT_SRC_KHR',1000001002,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL',1000314000,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR',1000314000,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL',5,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV',1000164003,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_SHARED_PRESENT_KHR',1000111000,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL',1000241002,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR',1000241002,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL',1000241003,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR',1000241003,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL',7,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL',6,b'\xFF\xFF\xFF\x0BVK_IMAGE_LAYOUT_UNDEFINED',0,b'\xFF\xFF\xFF\x0BVK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT',1000158000,b'\xFF\xFF\xFF\x0BVK_IMAGE_TILING_LINEAR',1,b'\xFF\xFF\xFF\x0BVK_IMAGE_TILING_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_IMAGE_TILING_OPTIMAL',0,b'\xFF\xFF\xFF\x0BVK_IMAGE_TYPE_1D',0,b'\xFF\xFF\xFF\x0BVK_IMAGE_TYPE_2D',1,b'\xFF\xFF\xFF\x0BVK_IMAGE_TYPE_3D',2,b'\xFF\xFF\xFF\x0BVK_IMAGE_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT',16,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT',32,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT',512,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR',256,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT',128,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI',262144,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_SAMPLED_BIT',4,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV',256,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_STORAGE_BIT',8,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_TRANSFER_DST_BIT',2,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_TRANSFER_SRC_BIT',1,b'\xFF\xFF\xFF\x0BVK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT',64,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_TYPE_1D',0,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_TYPE_1D_ARRAY',4,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_TYPE_2D',1,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_TYPE_2D_ARRAY',5,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_TYPE_3D',2,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_TYPE_CUBE',3,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_TYPE_CUBE_ARRAY',6,b'\xFF\xFF\xFF\x0BVK_IMAGE_VIEW_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_INCOMPLETE',5,b'\xFF\xFF\xFF\x0BVK_INDEX_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_INDEX_TYPE_NONE_KHR',1000165000,b'\xFF\xFF\xFF\x0BVK_INDEX_TYPE_NONE_NV',1000165000,b'\xFF\xFF\xFF\x0BVK_INDEX_TYPE_UINT16',0,b'\xFF\xFF\xFF\x0BVK_INDEX_TYPE_UINT32',1,b'\xFF\xFF\xFF\x0BVK_INDEX_TYPE_UINT8_EXT',1000265000,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV',1,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV',2,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV',4,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV',5,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV',6,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV',7,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV',2,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV',4,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV',0,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV',1,b'\xFF\xFF\xFF\x0BVK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV',3,b'\xFF\xFF\xFF\x0BVK_INDIRECT_STATE_FLAG_BITS_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV',1,b'\xFF\xFF\xFF\x0BVK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_INSTANCE_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE',0,b'\xFF\xFF\xFF\x0BVK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT',2,b'\xFF\xFF\xFF\x0BVK_LINE_RASTERIZATION_MODE_DEFAULT_EXT',0,b'\xFF\xFF\xFF\x0BVK_LINE_RASTERIZATION_MODE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT',1,b'\xFF\xFF\xFF\x0BVK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT',3,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_AND',1,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_AND_INVERTED',4,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_AND_REVERSE',2,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_CLEAR',0,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_COPY',3,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_COPY_INVERTED',12,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_EQUIVALENT',9,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_INVERT',10,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_NAND',14,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_NOR',8,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_NO_OP',5,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_OR',7,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_OR_INVERTED',13,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_OR_REVERSE',11,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_SET',15,b'\xFF\xFF\xFF\x0BVK_LOGIC_OP_XOR',6,b'\xFF\xFF\xFF\x0BVK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT',2,b'\xFF\xFF\xFF\x0BVK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT',4,b'\xFF\xFF\xFF\x0BVK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_MEMORY_ALLOCATE_DEVICE_MASK_BIT',1,b'\xFF\xFF\xFF\x0BVK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_MEMORY_HEAP_DEVICE_LOCAL_BIT',1,b'\xFF\xFF\xFF\x0BVK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_MEMORY_HEAP_MULTI_INSTANCE_BIT',2,b'\xFF\xFF\xFF\x0BVK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD',1,b'\xFF\xFF\xFF\x0BVK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD',0,b'\xFF\xFF\xFF\x0BVK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD',2,b'\xFF\xFF\xFF\x0BVK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD',2147483647,b'\xFF\xFF\xFF\x0BVK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD',64,b'\xFF\xFF\xFF\x0BVK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT',1,b'\xFF\xFF\xFF\x0BVK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD',128,b'\xFF\xFF\xFF\x0BVK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_MEMORY_PROPERTY_HOST_CACHED_BIT',8,b'\xFF\xFF\xFF\x0BVK_MEMORY_PROPERTY_HOST_COHERENT_BIT',4,b'\xFF\xFF\xFF\x0BVK_MEMORY_PROPERTY_HOST_VISIBLE_BIT',2,b'\xFF\xFF\xFF\x0BVK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT',16,b'\xFF\xFF\xFF\x0BVK_MEMORY_PROPERTY_PROTECTED_BIT',32,b'\xFF\xFF\xFF\x0BVK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV',256,b'\xFF\xFF\xFF\x0BVK_NOT_READY',1,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR',1000150000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV',1000165000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_BUFFER',9,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA',1000366000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_BUFFER_VIEW',13,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_COMMAND_BUFFER',6,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_COMMAND_POOL',25,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_CU_FUNCTION_NVX',1000029001,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_CU_MODULE_NVX',1000029000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT',1000011000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT',1000128000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DEFERRED_OPERATION_KHR',1000268000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DESCRIPTOR_POOL',22,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DESCRIPTOR_SET',23,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT',20,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE',1000085000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR',1000085000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DEVICE',3,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DEVICE_MEMORY',8,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DISPLAY_KHR',1000002000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_DISPLAY_MODE_KHR',1000002001,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_EVENT',11,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_FENCE',7,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_FRAMEBUFFER',24,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_IMAGE',10,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_IMAGE_VIEW',14,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV',1000277000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_INSTANCE',1,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL',1000210000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_PHYSICAL_DEVICE',2,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_PIPELINE',19,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_PIPELINE_CACHE',16,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_PIPELINE_LAYOUT',17,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_PRIVATE_DATA_SLOT',1000295000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT',1000295000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_QUERY_POOL',12,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_QUEUE',4,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_RENDER_PASS',18,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_SAMPLER',21,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION',1000156000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR',1000156000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_SEMAPHORE',5,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_SHADER_MODULE',15,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_SURFACE_KHR',1000000000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_SWAPCHAIN_KHR',1000001000,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_UNKNOWN',0,b'\xFF\xFF\xFF\x0BVK_OBJECT_TYPE_VALIDATION_CACHE_EXT',1000160000,b'\xFF\xFF\xFF\x0BVK_OPERATION_DEFERRED_KHR',1000268002,b'\xFF\xFF\xFF\x0BVK_OPERATION_NOT_DEFERRED_KHR',1000268003,b'\xFF\xFF\xFF\x0BVK_PEER_MEMORY_FEATURE_COPY_DST_BIT',2,b'\xFF\xFF\xFF\x0BVK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_PEER_MEMORY_FEATURE_COPY_SRC_BIT',1,b'\xFF\xFF\xFF\x0BVK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT',8,b'\xFF\xFF\xFF\x0BVK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT',4,b'\xFF\xFF\xFF\x0BVK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL',0,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL',2147483647,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR',2,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR',1,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR',0,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR',2,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR',1,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR',4,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR',5,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR',0,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR',1,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_STORAGE_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR',2,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR',3,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR',8,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR',3,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR',4,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR',10,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR',0,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR',9,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR',5,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR',2,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR',1,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR',7,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR',6,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL',1,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL',2147483647,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL',0,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL',0,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL',2147483647,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL',1,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL',3,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL',2,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL',2147483647,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_VALUE_TYPE_STRING_INTEL',4,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL',0,b'\xFF\xFF\xFF\x0BVK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL',1,b'\xFF\xFF\xFF\x0BVK_PHYSICAL_DEVICE_TYPE_CPU',4,b'\xFF\xFF\xFF\x0BVK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU',2,b'\xFF\xFF\xFF\x0BVK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU',1,b'\xFF\xFF\xFF\x0BVK_PHYSICAL_DEVICE_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PHYSICAL_DEVICE_TYPE_OTHER',0,b'\xFF\xFF\xFF\x0BVK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU',3,b'\xFF\xFF\xFF\x0BVK_PIPELINE_BIND_POINT_COMPUTE',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_BIND_POINT_GRAPHICS',0,b'\xFF\xFF\xFF\x0BVK_PIPELINE_BIND_POINT_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_BIND_POINT_RAY_TRACING_KHR',1000165000,b'\xFF\xFF\xFF\x0BVK_PIPELINE_BIND_POINT_RAY_TRACING_NV',1000165000,b'\xFF\xFF\xFF\x0BVK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI',1000369003,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CACHE_HEADER_VERSION_ONE',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_COLOR_BLEND_STATE_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_COMPILER_CONTROL_FLAG_BITS_MAX_ENUM_AMD',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_COMPILE_REQUIRED',1000297000,b'\xFF\xFF\xFF\x0BVK_PIPELINE_COMPILE_REQUIRED_EXT',1000297000,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT',2,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR',128,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR',64,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV',32,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_DERIVATIVE_BIT',4,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_DISPATCH_BASE',16,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_DISPATCH_BASE_BIT',16,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_DISPATCH_BASE_KHR',16,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT',512,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT',512,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT',256,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT',256,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV',262144,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_LIBRARY_BIT_KHR',2048,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT',1024,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV',1048576,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR',16384,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR',32768,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR',131072,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR',65536,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR',524288,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR',8192,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR',4096,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT',4194304,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR',2097152,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT',8388608,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT',8,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT',2,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT',4,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT',4,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATION_FEEDBACK_VALID_BIT',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM',2,b'\xFF\xFF\xFF\x0BVK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR',0,b'\xFF\xFF\xFF\x0BVK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR',3,b'\xFF\xFF\xFF\x0BVK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR',2,b'\xFF\xFF\xFF\x0BVK_PIPELINE_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT',4194304,b'\xFF\xFF\xFF\x0BVK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR',2097152,b'\xFF\xFF\xFF\x0BVK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT',2,b'\xFF\xFF\xFF\x0BVK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT',2,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR',33554432,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV',33554432,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT',65536,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR',65536,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT',32768,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR',32768,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT',4096,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR',4096,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_BLIT_BIT',17179869184,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_BLIT_BIT_KHR',17179869184,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT',8192,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR',8192,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_CLEAR_BIT',34359738368,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_CLEAR_BIT_KHR',34359738368,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT',1024,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR',1024,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV',131072,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT',2048,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR',2048,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT',262144,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_COPY_BIT',4294967296,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_COPY_BIT_KHR',4294967296,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT',2,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR',2,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT',256,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR',256,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT',8388608,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT',128,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR',128,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR',4194304,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT',64,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR',64,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_HOST_BIT',16384,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_HOST_BIT_KHR',16384,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_INDEX_INPUT_BIT',68719476736,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR',68719476736,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI',1099511627776,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT',512,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR',512,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV',1048576,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_NONE',0,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_NONE_KHR',0,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT',274877906944,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR',274877906944,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR',2097152,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV',2097152,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_RESOLVE_BIT',8589934592,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR',8589934592,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV',4194304,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI',549755813888,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV',524288,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT',16,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR',16,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT',32,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR',32,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT',1,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR',1,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_TRANSFER_BIT',4096,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR',4096,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT',16777216,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT',137438953472,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR',137438953472,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT',4,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR',4,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT',8,b'\xFF\xFF\xFF\x1FVK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR',33554432,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV',33554432,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_ALL_COMMANDS_BIT',65536,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_ALL_GRAPHICS_BIT',32768,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT',8192,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT',1024,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV',131072,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_COMPUTE_SHADER_BIT',2048,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT',262144,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_DRAW_INDIRECT_BIT',2,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT',256,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT',8388608,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT',128,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR',4194304,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT',64,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_HOST_BIT',16384,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT',512,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_MESH_SHADER_BIT_NV',1048576,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_NONE',0,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_NONE_KHR',0,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR',2097152,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV',2097152,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV',4194304,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_TASK_SHADER_BIT_NV',524288,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT',16,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT',32,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_TOP_OF_PIPE_BIT',1,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_TRANSFER_BIT',4096,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT',16777216,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_VERTEX_INPUT_BIT',4,b'\xFF\xFF\xFF\x0BVK_PIPELINE_STAGE_VERTEX_SHADER_BIT',8,b'\xFF\xFF\xFF\x0BVK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES',0,b'\xFF\xFF\xFF\x0BVK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR',0,b'\xFF\xFF\xFF\x0BVK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY',1,b'\xFF\xFF\xFF\x0BVK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR',1,b'\xFF\xFF\xFF\x0BVK_POLYGON_MODE_FILL',0,b'\xFF\xFF\xFF\x0BVK_POLYGON_MODE_FILL_RECTANGLE_NV',1000153000,b'\xFF\xFF\xFF\x0BVK_POLYGON_MODE_LINE',1,b'\xFF\xFF\xFF\x0BVK_POLYGON_MODE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_POLYGON_MODE_POINT',2,b'\xFF\xFF\xFF\x0BVK_PRESENT_MODE_FIFO_KHR',2,b'\xFF\xFF\xFF\x0BVK_PRESENT_MODE_FIFO_RELAXED_KHR',3,b'\xFF\xFF\xFF\x0BVK_PRESENT_MODE_IMMEDIATE_KHR',0,b'\xFF\xFF\xFF\x0BVK_PRESENT_MODE_MAILBOX_KHR',1,b'\xFF\xFF\xFF\x0BVK_PRESENT_MODE_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR',1000111001,b'\xFF\xFF\xFF\x0BVK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR',1000111000,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_LINE_LIST',1,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY',6,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_LINE_STRIP',2,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY',7,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_PATCH_LIST',10,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_POINT_LIST',0,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN',5,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST',3,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY',8,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP',4,b'\xFF\xFF\xFF\x0BVK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY',9,b'\xFF\xFF\xFF\x0BVK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT',0,b'\xFF\xFF\xFF\x0BVK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT',1,b'\xFF\xFF\xFF\x0BVK_PROVOKING_VERTEX_MODE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_QUERY_CONTROL_PRECISE_BIT',1,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT',32,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT',64,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT',1024,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT',128,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT',8,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT',16,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT',2,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT',1,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT',256,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT',512,b'\xFF\xFF\xFF\x0BVK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT',4,b'\xFF\xFF\xFF\x0BVK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL',0,b'\xFF\xFF\xFF\x0BVK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL',2147483647,b'\xFF\xFF\xFF\x0BVK_QUERY_RESULT_64_BIT',1,b'\xFF\xFF\xFF\x0BVK_QUERY_RESULT_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_QUERY_RESULT_PARTIAL_BIT',8,b'\xFF\xFF\xFF\x0BVK_QUERY_RESULT_WAIT_BIT',2,b'\xFF\xFF\xFF\x0BVK_QUERY_RESULT_WITH_AVAILABILITY_BIT',4,b'\xFF\xFF\xFF\x0BVK_QUERY_SCOPE_COMMAND_BUFFER_KHR',0,b'\xFF\xFF\xFF\x0BVK_QUERY_SCOPE_COMMAND_KHR',2,b'\xFF\xFF\xFF\x0BVK_QUERY_SCOPE_RENDER_PASS_KHR',1,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR',1000150000,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV',1000165000,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR',1000150001,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_OCCLUSION',0,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL',1000210000,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_PERFORMANCE_QUERY_KHR',1000116000,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_PIPELINE_STATISTICS',1,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT',1000382000,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_TIMESTAMP',2,b'\xFF\xFF\xFF\x0BVK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT',1000028004,b'\xFF\xFF\xFF\x0BVK_QUEUE_COMPUTE_BIT',2,b'\xFF\xFF\xFF\x0BVK_QUEUE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT',512,b'\xFF\xFF\xFF\x0BVK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR',512,b'\xFF\xFF\xFF\x0BVK_QUEUE_GLOBAL_PRIORITY_LOW_EXT',128,b'\xFF\xFF\xFF\x0BVK_QUEUE_GLOBAL_PRIORITY_LOW_KHR',128,b'\xFF\xFF\xFF\x0BVK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT',256,b'\xFF\xFF\xFF\x0BVK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR',256,b'\xFF\xFF\xFF\x0BVK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT',1024,b'\xFF\xFF\xFF\x0BVK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR',1024,b'\xFF\xFF\xFF\x0BVK_QUEUE_GRAPHICS_BIT',1,b'\xFF\xFF\xFF\x0BVK_QUEUE_PROTECTED_BIT',16,b'\xFF\xFF\xFF\x0BVK_QUEUE_SPARSE_BINDING_BIT',8,b'\xFF\xFF\xFF\x0BVK_QUEUE_TRANSFER_BIT',4,b'\xFF\xFF\xFF\x0BVK_RASTERIZATION_ORDER_MAX_ENUM_AMD',2147483647,b'\xFF\xFF\xFF\x0BVK_RASTERIZATION_ORDER_RELAXED_AMD',1,b'\xFF\xFF\xFF\x0BVK_RASTERIZATION_ORDER_STRICT_AMD',0,b'\xFF\xFF\xFF\x0BVK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR',0,b'\xFF\xFF\xFF\x0BVK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV',0,b'\xFF\xFF\xFF\x0BVK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR',2,b'\xFF\xFF\xFF\x0BVK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV',2,b'\xFF\xFF\xFF\x0BVK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR',1,b'\xFF\xFF\xFF\x0BVK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV',1,b'\xFF\xFF\xFF\x0BVK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT',1,b'\xFF\xFF\xFF\x0BVK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_RENDERING_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_RENDERING_RESUMING_BIT',4,b'\xFF\xFF\xFF\x0BVK_RENDERING_RESUMING_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_RENDERING_SUSPENDING_BIT',2,b'\xFF\xFF\xFF\x0BVK_RENDERING_SUSPENDING_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_RENDER_PASS_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM',2,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_AVERAGE_BIT',2,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_AVERAGE_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_MAX_BIT',8,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_MAX_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_MIN_BIT',4,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_MIN_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_NONE',0,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_NONE_KHR',0,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_SAMPLE_ZERO_BIT',1,b'\xFF\xFF\xFF\x0BVK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_RESULT_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER',3,b'\xFF\xFF\xFF\x0BVK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE',2,b'\xFF\xFF\xFF\x0BVK_SAMPLER_ADDRESS_MODE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT',1,b'\xFF\xFF\xFF\x0BVK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE',4,b'\xFF\xFF\xFF\x0BVK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR',4,b'\xFF\xFF\xFF\x0BVK_SAMPLER_ADDRESS_MODE_REPEAT',0,b'\xFF\xFF\xFF\x0BVK_SAMPLER_CREATE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_SAMPLER_MIPMAP_MODE_LINEAR',1,b'\xFF\xFF\xFF\x0BVK_SAMPLER_MIPMAP_MODE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SAMPLER_MIPMAP_MODE_NEAREST',0,b'\xFF\xFF\xFF\x0BVK_SAMPLER_REDUCTION_MODE_MAX',2,b'\xFF\xFF\xFF\x0BVK_SAMPLER_REDUCTION_MODE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SAMPLER_REDUCTION_MODE_MAX_EXT',2,b'\xFF\xFF\xFF\x0BVK_SAMPLER_REDUCTION_MODE_MIN',1,b'\xFF\xFF\xFF\x0BVK_SAMPLER_REDUCTION_MODE_MIN_EXT',1,b'\xFF\xFF\xFF\x0BVK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE',0,b'\xFF\xFF\xFF\x0BVK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT',0,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY',0,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR',0,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020',4,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR',4,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601',3,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR',3,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709',2,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR',2,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY',1,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR',1,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_RANGE_ITU_FULL',0,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR',0,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_RANGE_ITU_NARROW',1,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR',1,b'\xFF\xFF\xFF\x0BVK_SAMPLER_YCBCR_RANGE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SAMPLE_COUNT_16_BIT',16,b'\xFF\xFF\xFF\x0BVK_SAMPLE_COUNT_1_BIT',1,b'\xFF\xFF\xFF\x0BVK_SAMPLE_COUNT_2_BIT',2,b'\xFF\xFF\xFF\x0BVK_SAMPLE_COUNT_32_BIT',32,b'\xFF\xFF\xFF\x0BVK_SAMPLE_COUNT_4_BIT',4,b'\xFF\xFF\xFF\x0BVK_SAMPLE_COUNT_64_BIT',64,b'\xFF\xFF\xFF\x0BVK_SAMPLE_COUNT_8_BIT',8,b'\xFF\xFF\xFF\x0BVK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SCOPE_DEVICE_NV',1,b'\xFF\xFF\xFF\x0BVK_SCOPE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_SCOPE_QUEUE_FAMILY_NV',5,b'\xFF\xFF\xFF\x0BVK_SCOPE_SUBGROUP_NV',3,b'\xFF\xFF\xFF\x0BVK_SCOPE_WORKGROUP_NV',2,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_IMPORT_TEMPORARY_BIT',1,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_TYPE_BINARY',0,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_TYPE_BINARY_KHR',0,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_TYPE_TIMELINE',1,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_TYPE_TIMELINE_KHR',1,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_WAIT_ANY_BIT',1,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_WAIT_ANY_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SHADER_CORE_PROPERTIES_FLAG_BITS_MAX_ENUM_AMD',2147483647,b'\xFF\xFF\xFF\x0BVK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY',0,b'\xFF\xFF\xFF\x0BVK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR',0,b'\xFF\xFF\xFF\x0BVK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL',1,b'\xFF\xFF\xFF\x0BVK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR',1,b'\xFF\xFF\xFF\x0BVK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE',2,b'\xFF\xFF\xFF\x0BVK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR',2,b'\xFF\xFF\xFF\x0BVK_SHADER_GROUP_SHADER_ANY_HIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_SHADER_GROUP_SHADER_GENERAL_KHR',0,b'\xFF\xFF\xFF\x0BVK_SHADER_GROUP_SHADER_INTERSECTION_KHR',3,b'\xFF\xFF\xFF\x0BVK_SHADER_GROUP_SHADER_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_SHADER_INFO_TYPE_BINARY_AMD',1,b'\xFF\xFF\xFF\x0BVK_SHADER_INFO_TYPE_DISASSEMBLY_AMD',2,b'\xFF\xFF\xFF\x0BVK_SHADER_INFO_TYPE_MAX_ENUM_AMD',2147483647,b'\xFF\xFF\xFF\x0BVK_SHADER_INFO_TYPE_STATISTICS_AMD',0,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_ALL',2147483647,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_ALL_GRAPHICS',31,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_ANY_HIT_BIT_KHR',512,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_ANY_HIT_BIT_NV',512,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_CALLABLE_BIT_KHR',8192,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_CALLABLE_BIT_NV',8192,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR',1024,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_CLOSEST_HIT_BIT_NV',1024,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_COMPUTE_BIT',32,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_FRAGMENT_BIT',16,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_GEOMETRY_BIT',8,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_INTERSECTION_BIT_KHR',4096,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_INTERSECTION_BIT_NV',4096,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_MESH_BIT_NV',128,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_MISS_BIT_KHR',2048,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_MISS_BIT_NV',2048,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_RAYGEN_BIT_KHR',256,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_RAYGEN_BIT_NV',256,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI',16384,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_TASK_BIT_NV',64,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_TESSELLATION_CONTROL_BIT',2,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT',4,b'\xFF\xFF\xFF\x0BVK_SHADER_STAGE_VERTEX_BIT',1,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV',1,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV',7,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV',6,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV',8,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV',10,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV',9,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV',11,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV',5,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV',4,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV',3,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV',2,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV',0,b'\xFF\xFF\xFF\x0BVK_SHARING_MODE_CONCURRENT',1,b'\xFF\xFF\xFF\x0BVK_SHARING_MODE_EXCLUSIVE',0,b'\xFF\xFF\xFF\x0BVK_SHARING_MODE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT',2,b'\xFF\xFF\xFF\x0BVK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT',4,b'\xFF\xFF\xFF\x0BVK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT',1,b'\xFF\xFF\xFF\x0BVK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SPARSE_MEMORY_BIND_METADATA_BIT',1,b'\xFF\xFF\xFF\x0BVK_STENCIL_FACE_BACK_BIT',2,b'\xFF\xFF\xFF\x0BVK_STENCIL_FACE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_STENCIL_FACE_FRONT_AND_BACK',3,b'\xFF\xFF\xFF\x0BVK_STENCIL_FACE_FRONT_BIT',1,b'\xFF\xFF\xFF\x0BVK_STENCIL_FRONT_AND_BACK',3,b'\xFF\xFF\xFF\x0BVK_STENCIL_OP_DECREMENT_AND_CLAMP',4,b'\xFF\xFF\xFF\x0BVK_STENCIL_OP_DECREMENT_AND_WRAP',7,b'\xFF\xFF\xFF\x0BVK_STENCIL_OP_INCREMENT_AND_CLAMP',3,b'\xFF\xFF\xFF\x0BVK_STENCIL_OP_INCREMENT_AND_WRAP',6,b'\xFF\xFF\xFF\x0BVK_STENCIL_OP_INVERT',5,b'\xFF\xFF\xFF\x0BVK_STENCIL_OP_KEEP',0,b'\xFF\xFF\xFF\x0BVK_STENCIL_OP_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_STENCIL_OP_REPLACE',2,b'\xFF\xFF\xFF\x0BVK_STENCIL_OP_ZERO',1,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR',1000150000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR',1000150020,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR',1000150017,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV',1000165001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR',1000150002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR',1000150003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR',1000150004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR',1000150006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV',1000327000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR',1000150005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV',1000165012,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV',1000165008,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV',1000327002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR',1000150009,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR',1000060010,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR',1000116004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID',1000129006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID',1000129002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID',1000129001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID',1000129000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR',1000008000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_APPLICATION_INFO',0,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2',1000109000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR',1000109000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT',1000241002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR',1000241002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2',1000109001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR',1000109001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT',1000241001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR',1000241001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD',1000044008,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV',1000044008,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV',1000165006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO',1000060013,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR',1000060013,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO',1000157000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR',1000157000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO',1000060014,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR',1000060014,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO',1000157001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR',1000157001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR',1000060009,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO',1000156002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR',1000156002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BIND_SPARSE_INFO',7,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2',1000337004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR',1000337004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA',1000366005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA',1000366009,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA',1000366000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA',1000366002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA',1000366003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA',1000366004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_COPY_2',1000337006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR',1000337006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_CREATE_INFO',12,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT',1000244002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO',1000244001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT',1000244001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR',1000244001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2',1000337009,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR',1000337009,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER',44,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2',1000314001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR',1000314001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2',1000146000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR',1000146000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO',1000257002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR',1000257002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO',13,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT',1000184000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV',1000314009,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV',1000206000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO',40,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO',42,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT',1000081000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO',41,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO',1000044004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR',1000044004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM',1000282000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV',1000278001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO',1000314006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR',1000314006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO',39,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO',29,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT',1000081002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV',1000249001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR',1000150010,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR',1000150011,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2',1000337000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR',1000337000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2',1000337002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR',1000337002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM',1000333000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET',36,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2',1000337001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR',1000337001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2',1000337003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR',1000337003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR',1000150012,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX',1000029001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX',1000029002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX',1000029000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR',1000078002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT',1000022002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT',1000022000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT',1000022001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT',1000011000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT',1000011000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT',1000128002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT',1000128003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT',1000128004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT',1000128000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT',1000128001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV',1000026001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV',1000026000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV',1000026002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEPENDENCY_INFO',1000314003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR',1000314003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO',33,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO',1000138003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT',1000138003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO',34,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE',1000420001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO',1000161000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT',1000161000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO',32,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE',1000420002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT',1000168001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR',1000168001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO',1000161003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT',1000161003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT',1000161004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT',1000161004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO',1000085000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR',1000085000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS',1000413002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR',1000413002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_CREATE_INFO',3,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT',1000284001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV',1000300001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT',1000091001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO',1000060006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR',1000060006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO',1000060004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR',1000060004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO',1000070001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR',1000070001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR',1000060007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR',1000060011,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO',1000060003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR',1000060003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO',1000060005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR',1000060005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR',1000060012,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS',1000413003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR',1000413003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO',1000257004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR',1000257004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD',1000189000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT',1000284002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO',1000295001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT',1000295001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO',2,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT',1000174000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR',1000174000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2',1000145003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT',1000346000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT',1000091002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR',1000002000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR',1000121002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD',1000213000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR',1000121004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR',1000121003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR',1000121001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT',1000091000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR',1000003000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR',1000121000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR',1000002001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT',1000158006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT',1000158000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EVENT_CREATE_INFO',10,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO',1000113000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR',1000113000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR',1000114001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO',1000072002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR',1000072002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV',1000056001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR',1000073001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV',1000057001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO',1000077000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR',1000077000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR',1000078001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES',1000071003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR',1000071003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES',1000112001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR',1000112001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID',1000129005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES',1000071001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR',1000071001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO',1000072000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR',1000072000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO',1000072001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR',1000072001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV',1000056000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES',1000076001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR',1000076001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FENCE_CREATE_INFO',8,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR',1000115001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR',1000114002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT',1000170001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2',1000059002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR',1000059002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3',1000360000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR',1000360000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR',1000226000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO',1000108001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR',1000108001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO',1000108002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR',1000108002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO',37,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV',1000250002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV',1000277005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV',1000277006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_GEOMETRY_AABB_NV',1000165005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_GEOMETRY_NV',1000165003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV',1000165004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO',28,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT',1000320002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV',1000277002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV',1000277001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_HDR_METADATA_EXT',1000105000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT',1000256000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA',1000214000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_BLIT_2',1000337008,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR',1000337008,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA',1000366006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_COPY_2',1000337007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR',1000337007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_CREATE_INFO',14,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT',1000158004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT',1000158003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT',1000158005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA',1000366007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO',1000147000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR',1000147000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2',1000059003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR',1000059003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER',45,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2',1000314002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR',1000314002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2',1000146001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR',1000146001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO',1000156003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR',1000156003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_RESOLVE_2',1000337010,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR',1000337010,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2',1000146002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR',1000146002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO',1000246000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT',1000246000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR',1000060008,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX',1000030001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT',1000067000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO',15,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX',1000030000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT',1000391001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO',1000117002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR',1000117002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID',1000129003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR',1000115000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR',1000114000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA',1000366001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR',1000074000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT',1000178000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR',1000073000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV',1000057000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA',1000364000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR',1000079000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR',1000078000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA',1000365000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV',1000277004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV',1000277003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL',1000210001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO',1,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK',1000122000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO',48,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO',47,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK',1000123000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE',6,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO',1000060000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR',1000060000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO',5,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_BARRIER',46,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_BARRIER_2',1000314000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR',1000314000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO',1000127001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR',1000127001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS',1000127000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR',1000127000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR',1000074001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID',1000129004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR',1000074002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV',1000371000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR',1000073003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA',1000364002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT',1000178001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO',1000257003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR',1000257003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT',1000238001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2',1000146003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR',1000146003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR',1000073002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA',1000364001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT',1000217000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT',1000143004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX',1000044009,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE',1000351002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL',1000210005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR',1000116006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR',1000116005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL',1000210002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL',1000210004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR',1000116003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL',1000210003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES',1000083000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR',1000083000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT',1000340000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES',1000177000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR',1000177000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR',1000150013,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR',1000150014,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT',1000067001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT',1000148000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT',1000148001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT',1000411000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT',1000244000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES',1000257000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT',1000244000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR',1000257000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD',1000229000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT',1000381000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV',1000201000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT',1000081001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT',1000101000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV',1000249000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV',1000249002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV',1000050000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV',1000250000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT',1000287002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT',1000287001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV',1000240000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT',1000355000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT',1000102000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES',1000199000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR',1000199000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES',1000161001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT',1000161001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES',1000161002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT',1000161002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE',1000420000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV',1000277007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV',1000277000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT',1000284000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV',1000300000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT',1000099000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES',1000196000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR',1000196000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT',1000353000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES',1000044003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR',1000044003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV',1000205002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT',1000377000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT',1000267000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO',1000071002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR',1000071002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO',1000112000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR',1000112000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO',1000071000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR',1000071000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT',1000178002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV',1000371001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO',1000076000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR',1000076000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2',1000059000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR',1000059000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR',1000082000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES',1000197000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR',1000197000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT',1000332000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT',1000332001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT',1000218000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM',1000425000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM',1000425001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT',1000218001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV',1000203000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT',1000251000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV',1000326001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV',1000326000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR',1000226003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR',1000226004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR',1000226002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT',1000388000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR',1000388000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT',1000320000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT',1000320001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES',1000070000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR',1000070000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES',1000261000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT',1000261000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES',1000071004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR',1000071004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES',1000108000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR',1000108000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT',1000393000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT',1000158002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2',1000059004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR',1000059004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES',1000335000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT',1000335000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT',1000170000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT',1000391000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT',1000265000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV',1000278000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES',1000138000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT',1000138000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES',1000138001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT',1000138001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI',1000370000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV',1000430000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT',1000259000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT',1000259002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES',1000168000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR',1000168000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES',1000413000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR',1000413000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES',1000413001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR',1000413001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT',1000237000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT',1000238000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2',1000059006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR',1000059006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV',1000202000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV',1000202001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES',1000053001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR',1000053001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX',1000097000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES',1000053002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR',1000053002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT',1000392000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT',1000392001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE',1000351000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT',1000412000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT',1000212000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR',1000116000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR',1000116001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES',1000297000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT',1000297000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR',1000269000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES',1000117000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR',1000117000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR',1000294001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR',1000248000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT',1000382000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT',1000356000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES',1000295000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT',1000295000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2',1000059001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR',1000059001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES',1000145001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES',1000145002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT',1000254000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT',1000254002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR',1000080000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM',1000342000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR',1000348013,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV',1000327001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR',1000347000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR',1000347001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV',1000165009,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV',1000166000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT',1000344000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT',1000286000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT',1000286001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES',1000130000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT',1000130000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES',1000156004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR',1000156004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT',1000143003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES',1000221000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT',1000221000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES',1000241000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR',1000241000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT',1000273000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT',1000260000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES',1000180000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR',1000180000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR',1000181000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD',1000227000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD',1000185000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES',1000276000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT',1000276000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES',1000063000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES',1000063000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES',1000082000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR',1000082000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT',1000234000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV',1000204000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES',1000280000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR',1000280000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES',1000280001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR',1000280001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL',1000209000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV',1000154000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV',1000154001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES',1000175000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR',1000175000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR',1000323000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES',1000215000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR',1000215000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV',1000164001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV',1000164002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2',1000059008,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR',1000059008,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES',1000094000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES',1000225002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT',1000225002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES',1000225000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT',1000225000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI',1000369001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI',1000369002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR',1000119000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES',1000314007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR',1000314007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT',1000281000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES',1000281001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT',1000281001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES',1000066000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT',1000066000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES',1000207000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR',1000207000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES',1000207001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR',1000207001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES',1000245000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT',1000245000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT',1000028000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT',1000028001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES',1000253000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR',1000253000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES',1000120000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR',1000120000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES',1000120000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR',1000120000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT',1000190002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT',1000190000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT',1000352000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES',49,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES',50,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES',51,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES',52,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES',53,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES',54,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES',1000211000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR',1000211000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR',1000336000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT',1000330000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT',1000252000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES',1000325000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR',1000325000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO',17,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT',1000148002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO',26,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT',1000381001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD',1000183000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV',1000152000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV',1000250001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV',1000149000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO',1000192000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT',1000192000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO',25,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT',1000099001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO',27,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR',1000269003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR',1000269005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR',1000269002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR',1000269004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV',1000326002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR',1000226001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_INFO_KHR',1000269001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO',20,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO',30,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR',1000290000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO',24,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT',1000101001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT',1000102001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT',1000259001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT',1000254001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO',23,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD',1000018000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT',1000028002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO',1000044002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR',1000044002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV',1000166001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT',1000143002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO',18,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO',1000225001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT',1000225001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO',1000117003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR',1000117003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO',21,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT',1000190001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO',19,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV',1000164005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT',1000355001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV',1000205000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV',1000164000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO',22,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV',1000098000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV',1000087000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP',1000191000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PRESENT_ID_KHR',1000294000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PRESENT_INFO_KHR',1000001001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR',1000084000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE',1000092000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO',1000295002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT',1000295002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO',1000145000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO',11,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL',1000210000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR',1000116002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL',1000210000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV',1000314008,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV',1000206001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT',1000388001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR',1000388001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2',1000059005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR',1000059005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR',1000150015,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV',1000165000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR',1000150018,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR',1000150016,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV',1000165011,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO',1000044001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR',1000044001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT',1000044007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR',1000044006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDERING_INFO',1000044000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDERING_INFO_KHR',1000044000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO',1000108003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR',1000108003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO',43,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO',38,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2',1000109004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR',1000109004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT',1000218002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO',1000117001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR',1000117001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO',1000053000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR',1000053000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT',1000143001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM',1000282001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2',1000337005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR',1000337005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT',1000411001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO',31,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT',1000287000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO',1000130001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT',1000130001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO',1000156000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR',1000156000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES',1000156005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR',1000156005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO',1000156001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR',1000156001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT',1000143000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX',1000378000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO',9,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR',1000079001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR',1000078003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA',1000365001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO',1000207005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR',1000207005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO',1000314005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR',1000314005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO',1000207002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR',1000207002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO',1000207004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR',1000207004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO',16,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT',1000160001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR',1000111000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2',1000059007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR',1000059007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2',1000146004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR',1000146004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP',1000049000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBMIT_INFO',4,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBMIT_INFO_2',1000314004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR',1000314004,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO',1000109005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR',1000109005,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2',1000109003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR',1000109003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2',1000109002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR',1000109002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE',1000199001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR',1000199001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_END_INFO',1000109006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR',1000109006,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM',1000425002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI',1000369000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT',1000090000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT',1000090000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR',1000119001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT',1000255002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR',1000119002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT',1000255000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT',1000255001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR',1000239000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT',1000091003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR',1000001000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD',1000213001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA',1000366008,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD',1000041000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO',1000207003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR',1000207003,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT',1000160000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT',1000247000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT',1000061000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT',1000352002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT',1000352001,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN',1000062000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR',1000006000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR',1000075000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV',1000058000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR',1000009000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET',35,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR',1000150007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV',1000165007,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK',1000138002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT',1000138002,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR',1000005000,b'\xFF\xFF\xFF\x0BVK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR',1000004000,b'\xFF\xFF\xFF\x0BVK_SUBGROUP_FEATURE_ARITHMETIC_BIT',4,b'\xFF\xFF\xFF\x0BVK_SUBGROUP_FEATURE_BALLOT_BIT',8,b'\xFF\xFF\xFF\x0BVK_SUBGROUP_FEATURE_BASIC_BIT',1,b'\xFF\xFF\xFF\x0BVK_SUBGROUP_FEATURE_CLUSTERED_BIT',64,b'\xFF\xFF\xFF\x0BVK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV',256,b'\xFF\xFF\xFF\x0BVK_SUBGROUP_FEATURE_QUAD_BIT',128,b'\xFF\xFF\xFF\x0BVK_SUBGROUP_FEATURE_SHUFFLE_BIT',16,b'\xFF\xFF\xFF\x0BVK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT',32,b'\xFF\xFF\xFF\x0BVK_SUBGROUP_FEATURE_VOTE_BIT',2,b'\xFF\xFF\xFF\x0BVK_SUBMIT_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SUBMIT_PROTECTED_BIT',1,b'\xFF\xFF\xFF\x0BVK_SUBMIT_PROTECTED_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_SUBOPTIMAL_KHR',1000001003,b'\xFF\xFF\xFF\x0BVK_SUBPASS_CONTENTS_INLINE',0,b'\xFF\xFF\xFF\x0BVK_SUBPASS_CONTENTS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS',1,b'\xFF\xFF\xFF\x0BVK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM',4,b'\xFF\xFF\xFF\x0BVK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX',1,b'\xFF\xFF\xFF\x0BVK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX',2,b'\xFF\xFF\xFF\x0BVK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM',16,b'\xFF\xFF\xFF\x0BVK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM',32,b'\xFF\xFF\xFF\x0BVK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM',64,b'\xFF\xFF\xFF\x0BVK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM',8,b'\xFF\xFF\xFF\x0BVK_SUCCESS',0,b'\xFF\xFF\xFF\x0BVK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_SURFACE_COUNTER_VBLANK_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_SURFACE_COUNTER_VBLANK_EXT',1,b'\xFF\xFF\xFF\x0BVK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR',16,b'\xFF\xFF\xFF\x0BVK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR',64,b'\xFF\xFF\xFF\x0BVK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR',128,b'\xFF\xFF\xFF\x0BVK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR',32,b'\xFF\xFF\xFF\x0BVK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_SURFACE_TRANSFORM_INHERIT_BIT_KHR',256,b'\xFF\xFF\xFF\x0BVK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR',8,b'\xFF\xFF\xFF\x0BVK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR',2147483647,b'\xFF\xFF\xFF\x0BVK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR',4,b'\xFF\xFF\xFF\x0BVK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR',2,b'\xFF\xFF\xFF\x0BVK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR',1,b'\xFF\xFF\xFF\x0BVK_SYSTEM_ALLOCATION_SCOPE_CACHE',2,b'\xFF\xFF\xFF\x0BVK_SYSTEM_ALLOCATION_SCOPE_COMMAND',0,b'\xFF\xFF\xFF\x0BVK_SYSTEM_ALLOCATION_SCOPE_DEVICE',3,b'\xFF\xFF\xFF\x0BVK_SYSTEM_ALLOCATION_SCOPE_INSTANCE',4,b'\xFF\xFF\xFF\x0BVK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_SYSTEM_ALLOCATION_SCOPE_OBJECT',1,b'\xFF\xFF\xFF\x0BVK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT',1,b'\xFF\xFF\xFF\x0BVK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR',1,b'\xFF\xFF\xFF\x0BVK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT',0,b'\xFF\xFF\xFF\x0BVK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR',0,b'\xFF\xFF\xFF\x0BVK_THREAD_DONE_KHR',1000268001,b'\xFF\xFF\xFF\x0BVK_THREAD_IDLE_KHR',1000268000,b'\xFF\xFF\xFF\x0BVK_TIMEOUT',2,b'\xFF\xFF\xFF\x0BVK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT',1,b'\xFF\xFF\xFF\x0BVK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT',2,b'\xFF\xFF\xFF\x0BVK_TIME_DOMAIN_DEVICE_EXT',0,b'\xFF\xFF\xFF\x0BVK_TIME_DOMAIN_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT',3,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT',8,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT',8,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT',64,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT',32,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT',16,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT',16,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_PROFILING_BIT',2,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_PROFILING_BIT_EXT',2,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_TRACING_BIT',4,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_TRACING_BIT_EXT',4,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_VALIDATION_BIT',1,b'\xFF\xFF\xFF\x0BVK_TOOL_PURPOSE_VALIDATION_BIT_EXT',1,b'\xFF\xFF\xFF\x0BVK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT',1,b'\xFF\xFF\xFF\x0BVK_VALIDATION_CHECK_ALL_EXT',0,b'\xFF\xFF\xFF\x0BVK_VALIDATION_CHECK_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_VALIDATION_CHECK_SHADERS_EXT',1,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_DISABLE_ALL_EXT',0,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT',3,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT',5,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT',4,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT',1,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT',7,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT',2,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT',6,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT',2,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT',3,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT',0,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT',1,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT',2147483647,b'\xFF\xFF\xFF\x0BVK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT',4,b'\xFF\xFF\xFF\x0BVK_VENDOR_ID_CODEPLAY',65540,b'\xFF\xFF\xFF\x0BVK_VENDOR_ID_KAZAN',65539,b'\xFF\xFF\xFF\x0BVK_VENDOR_ID_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_VENDOR_ID_MESA',65541,b'\xFF\xFF\xFF\x0BVK_VENDOR_ID_POCL',65542,b'\xFF\xFF\xFF\x0BVK_VENDOR_ID_VIV',65537,b'\xFF\xFF\xFF\x0BVK_VENDOR_ID_VSI',65538,b'\xFF\xFF\xFF\x0BVK_VERTEX_INPUT_RATE_INSTANCE',1,b'\xFF\xFF\xFF\x0BVK_VERTEX_INPUT_RATE_MAX_ENUM',2147483647,b'\xFF\xFF\xFF\x0BVK_VERTEX_INPUT_RATE_VERTEX',0,b'\xFF\xFF\xFF\x0BVK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV',2147483647,b'\xFF\xFF\xFF\x0BVK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV',7,b'\xFF\xFF\xFF\x0BVK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV',1,b'\xFF\xFF\xFF\x0BVK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV',3,b'\xFF\xFF\xFF\x0BVK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV',5,b'\xFF\xFF\xFF\x0BVK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV',6,b'\xFF\xFF\xFF\x0BVK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV',0,b'\xFF\xFF\xFF\x0BVK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV',2,b'\xFF\xFF\xFF\x0BVK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV',4,b'\x00\x03\x01\x23vkAcquireDrmDisplayEXT',0,b'\x00\x00\x30\x23vkAcquireNextImage2KHR',0,b'\x00\x02\x42\x23vkAcquireNextImageKHR',0,b'\x00\x00\xEF\x23vkAcquirePerformanceConfigurationINTEL',0,b'\x00\x00\x35\x23vkAcquireProfilingLockKHR',0,b'\x00\x03\x0C\x23vkAcquireWinrtDisplayNV',0,b'\x00\x00\x4A\x23vkAllocateCommandBuffers',0,b'\x00\x00\x77\x23vkAllocateDescriptorSets',0,b'\x00\x00\xD3\x23vkAllocateMemory',0,b'\x00\x00\x0D\x23vkBeginCommandBuffer',0,b'\x00\x02\x5C\x23vkBindAccelerationStructureMemoryNV',0,b'\x00\x01\x6C\x23vkBindBufferMemory',0,b'\x00\x02\x61\x23vkBindBufferMemory2',0,b'\x00\x02\x61\x23vkBindBufferMemory2KHR',0,b'\x00\x01\xCB\x23vkBindImageMemory',0,b'\x00\x02\x66\x23vkBindImageMemory2',0,b'\x00\x02\x66\x23vkBindImageMemory2KHR',0,b'\x00\x01\x93\x23vkBuildAccelerationStructuresKHR',0,b'\x00\x04\x1B\x23vkCmdBeginConditionalRenderingEXT',0,b'\x00\x04\x43\x23vkCmdBeginDebugUtilsLabelEXT',0,b'\x00\x05\x82\x23vkCmdBeginQuery',0,b'\x00\x05\x92\x23vkCmdBeginQueryIndexedEXT',0,b'\x00\x04\x94\x23vkCmdBeginRenderPass',0,b'\x00\x04\x8F\x23vkCmdBeginRenderPass2',0,b'\x00\x04\x8F\x23vkCmdBeginRenderPass2KHR',0,b'\x00\x04\x99\x23vkCmdBeginRendering',0,b'\x00\x04\x99\x23vkCmdBeginRenderingKHR',0,b'\x00\x06\x30\x23vkCmdBeginTransformFeedbackEXT',0,b'\x00\x04\x69\x23vkCmdBindDescriptorSets',0,b'\x00\x04\xF1\x23vkCmdBindIndexBuffer',0,b'\x00\x05\x3C\x23vkCmdBindInvocationMaskHUAWEI',0,b'\x00\x04\x73\x23vkCmdBindPipeline',0,b'\x00\x04\x78\x23vkCmdBindPipelineShaderGroupNV',0,b'\x00\x05\x3C\x23vkCmdBindShadingRateImageNV',0,b'\x00\x06\x37\x23vkCmdBindTransformFeedbackBuffersEXT',0,b'\x00\x06\x30\x23vkCmdBindVertexBuffers',0,b'\x00\x06\x3F\x23vkCmdBindVertexBuffers2',0,b'\x00\x06\x3F\x23vkCmdBindVertexBuffers2EXT',0,b'\x00\x05\x59\x23vkCmdBlitImage',0,b'\x00\x04\x0D\x23vkCmdBlitImage2',0,b'\x00\x04\x0D\x23vkCmdBlitImage2KHR',0,b'\x00\x04\x02\x23vkCmdBuildAccelerationStructureNV',0,b'\x00\x05\xA3\x23vkCmdBuildAccelerationStructuresIndirectKHR',0,b'\x00\x05\x9D\x23vkCmdBuildAccelerationStructuresKHR',0,b'\x00\x05\xAB\x23vkCmdClearAttachments',0,b'\x00\x05\x41\x23vkCmdClearColorImage',0,b'\x00\x05\x49\x23vkCmdClearDepthStencilImage',0,b'\x00\x04\x1F\x23vkCmdCopyAccelerationStructureKHR',0,b'\x00\x04\xD7\x23vkCmdCopyAccelerationStructureNV',0,b'\x00\x04\x23\x23vkCmdCopyAccelerationStructureToMemoryKHR',0,b'\x00\x04\xDD\x23vkCmdCopyBuffer',0,b'\x00\x04\x27\x23vkCmdCopyBuffer2',0,b'\x00\x04\x27\x23vkCmdCopyBuffer2KHR',0,b'\x00\x04\xE4\x23vkCmdCopyBufferToImage',0,b'\x00\x04\x2B\x23vkCmdCopyBufferToImage2',0,b'\x00\x04\x2B\x23vkCmdCopyBufferToImage2KHR',0,b'\x00\x05\x63\x23vkCmdCopyImage',0,b'\x00\x04\x2F\x23vkCmdCopyImage2',0,b'\x00\x04\x2F\x23vkCmdCopyImage2KHR',0,b'\x00\x05\x51\x23vkCmdCopyImageToBuffer',0,b'\x00\x04\x33\x23vkCmdCopyImageToBuffer2',0,b'\x00\x04\x33\x23vkCmdCopyImageToBuffer2KHR',0,b'\x00\x04\x37\x23vkCmdCopyMemoryToAccelerationStructureKHR',0,b'\x00\x05\x88\x23vkCmdCopyQueryPoolResults',0,b'\x00\x04\x3B\x23vkCmdCuLaunchKernelNVX',0,b'\x00\x04\x3F\x23vkCmdDebugMarkerBeginEXT',0,b'\x00\x03\xFF\x23vkCmdDebugMarkerEndEXT',0,b'\x00\x04\x3F\x23vkCmdDebugMarkerInsertEXT',0,b'\x00\x06\x51\x23vkCmdDispatch',0,b'\x00\x06\x72\x23vkCmdDispatchBase',0,b'\x00\x06\x72\x23vkCmdDispatchBaseKHR',0,b'\x00\x04\xEC\x23vkCmdDispatchIndirect',0,b'\x00\x06\x5F\x23vkCmdDraw',0,b'\x00\x06\x57\x23vkCmdDrawIndexed',0,b'\x00\x05\x11\x23vkCmdDrawIndexedIndirect',0,b'\x00\x04\xF7\x23vkCmdDrawIndexedIndirectCount',0,b'\x00\x04\xF7\x23vkCmdDrawIndexedIndirectCountAMD',0,b'\x00\x04\xF7\x23vkCmdDrawIndexedIndirectCountKHR',0,b'\x00\x05\x11\x23vkCmdDrawIndirect',0,b'\x00\x06\x48\x23vkCmdDrawIndirectByteCountEXT',0,b'\x00\x04\xF7\x23vkCmdDrawIndirectCount',0,b'\x00\x04\xF7\x23vkCmdDrawIndirectCountAMD',0,b'\x00\x04\xF7\x23vkCmdDrawIndirectCountKHR',0,b'\x00\x04\xF7\x23vkCmdDrawMeshTasksIndirectCountNV',0,b'\x00\x05\x11\x23vkCmdDrawMeshTasksIndirectNV',0,b'\x00\x06\x13\x23vkCmdDrawMeshTasksNV',0,b'\x00\x05\xC0\x23vkCmdDrawMultiEXT',0,b'\x00\x05\xB7\x23vkCmdDrawMultiIndexedEXT',0,b'\x00\x03\xFF\x23vkCmdEndConditionalRenderingEXT',0,b'\x00\x03\xFF\x23vkCmdEndDebugUtilsLabelEXT',0,b'\x00\x05\x7D\x23vkCmdEndQuery',0,b'\x00\x05\x82\x23vkCmdEndQueryIndexedEXT',0,b'\x00\x03\xFF\x23vkCmdEndRenderPass',0,b'\x00\x04\xC0\x23vkCmdEndRenderPass2',0,b'\x00\x04\xC0\x23vkCmdEndRenderPass2KHR',0,b'\x00\x03\xFF\x23vkCmdEndRendering',0,b'\x00\x03\xFF\x23vkCmdEndRenderingKHR',0,b'\x00\x06\x30\x23vkCmdEndTransformFeedbackEXT',0,b'\x00\x05\xF1\x23vkCmdExecuteCommands',0,b'\x00\x05\xB2\x23vkCmdExecuteGeneratedCommandsNV',0,b'\x00\x05\x18\x23vkCmdFillBuffer',0,b'\x00\x04\x43\x23vkCmdInsertDebugUtilsLabelEXT',0,b'\x00\x04\xBC\x23vkCmdNextSubpass',0,b'\x00\x04\xB7\x23vkCmdNextSubpass2',0,b'\x00\x04\xB7\x23vkCmdNextSubpass2KHR',0,b'\x00\x06\x66\x23vkCmdPipelineBarrier',0,b'\x00\x04\x47\x23vkCmdPipelineBarrier2',0,b'\x00\x04\x47\x23vkCmdPipelineBarrier2KHR',0,b'\x00\x04\x59\x23vkCmdPreprocessGeneratedCommandsNV',0,b'\x00\x05\x75\x23vkCmdPushConstants',0,b'\x00\x04\x61\x23vkCmdPushDescriptorSetKHR',0,b'\x00\x05\x26\x23vkCmdPushDescriptorSetWithTemplateKHR',0,b'\x00\x05\x32\x23vkCmdResetEvent',0,b'\x00\x05\x37\x23vkCmdResetEvent2',0,b'\x00\x05\x37\x23vkCmdResetEvent2KHR',0,b'\x00\x05\x82\x23vkCmdResetQueryPool',0,b'\x00\x05\x6C\x23vkCmdResolveImage',0,b'\x00\x04\x9D\x23vkCmdResolveImage2',0,b'\x00\x04\x9D\x23vkCmdResolveImage2KHR',0,b'\x00\x04\xC4\x23vkCmdSetBlendConstants',0,b'\x00\x06\x88\x23vkCmdSetCheckpointNV',0,b'\x00\x04\x11\x23vkCmdSetCoarseSampleOrderNV',0,b'\x00\x06\x0E\x23vkCmdSetColorWriteEnableEXT',0,b'\x00\x05\x99\x23vkCmdSetCullMode',0,b'\x00\x05\x99\x23vkCmdSetCullModeEXT',0,b'\x00\x04\xD1\x23vkCmdSetDepthBias',0,b'\x00\x05\x99\x23vkCmdSetDepthBiasEnable',0,b'\x00\x05\x99\x23vkCmdSetDepthBiasEnableEXT',0,b'\x00\x04\xCC\x23vkCmdSetDepthBounds',0,b'\x00\x05\x99\x23vkCmdSetDepthBoundsTestEnable',0,b'\x00\x05\x99\x23vkCmdSetDepthBoundsTestEnableEXT',0,b'\x00\x04\x17\x23vkCmdSetDepthCompareOp',0,b'\x00\x04\x17\x23vkCmdSetDepthCompareOpEXT',0,b'\x00\x05\x99\x23vkCmdSetDepthTestEnable',0,b'\x00\x05\x99\x23vkCmdSetDepthTestEnableEXT',0,b'\x00\x05\x99\x23vkCmdSetDepthWriteEnable',0,b'\x00\x05\x99\x23vkCmdSetDepthWriteEnableEXT',0,b'\x00\x05\x99\x23vkCmdSetDeviceMask',0,b'\x00\x05\x99\x23vkCmdSetDeviceMaskKHR',0,b'\x00\x06\x18\x23vkCmdSetDiscardRectangleEXT',0,b'\x00\x05\x32\x23vkCmdSetEvent',0,b'\x00\x05\x2D\x23vkCmdSetEvent2',0,b'\x00\x05\x2D\x23vkCmdSetEvent2KHR',0,b'\x00\x06\x18\x23vkCmdSetExclusiveScissorNV',0,b'\x00\x04\x50\x23vkCmdSetFragmentShadingRateEnumNV',0,b'\x00\x04\x4B\x23vkCmdSetFragmentShadingRateKHR',0,b'\x00\x04\x55\x23vkCmdSetFrontFace',0,b'\x00\x04\x55\x23vkCmdSetFrontFaceEXT',0,b'\x00\x06\x09\x23vkCmdSetLineStippleEXT',0,b'\x00\x04\xC8\x23vkCmdSetLineWidth',0,b'\x00\x04\x5D\x23vkCmdSetLogicOpEXT',0,b'\x00\x05\x99\x23vkCmdSetPatchControlPointsEXT',0,b'\x00\x00\x11\x23vkCmdSetPerformanceMarkerINTEL',0,b'\x00\x00\x15\x23vkCmdSetPerformanceOverrideINTEL',0,b'\x00\x00\x19\x23vkCmdSetPerformanceStreamMarkerINTEL',0,b'\x00\x05\x99\x23vkCmdSetPrimitiveRestartEnable',0,b'\x00\x05\x99\x23vkCmdSetPrimitiveRestartEnableEXT',0,b'\x00\x04\x8B\x23vkCmdSetPrimitiveTopology',0,b'\x00\x04\x8B\x23vkCmdSetPrimitiveTopologyEXT',0,b'\x00\x05\x99\x23vkCmdSetRasterizerDiscardEnable',0,b'\x00\x05\x99\x23vkCmdSetRasterizerDiscardEnableEXT',0,b'\x00\x05\x99\x23vkCmdSetRayTracingPipelineStackSizeKHR',0,b'\x00\x04\xA1\x23vkCmdSetSampleLocationsEXT',0,b'\x00\x06\x18\x23vkCmdSetScissor',0,b'\x00\x05\xC8\x23vkCmdSetScissorWithCount',0,b'\x00\x05\xC8\x23vkCmdSetScissorWithCountEXT',0,b'\x00\x06\x13\x23vkCmdSetStencilCompareMask',0,b'\x00\x05\xCD\x23vkCmdSetStencilOp',0,b'\x00\x05\xCD\x23vkCmdSetStencilOpEXT',0,b'\x00\x06\x13\x23vkCmdSetStencilReference',0,b'\x00\x05\x99\x23vkCmdSetStencilTestEnable',0,b'\x00\x05\x99\x23vkCmdSetStencilTestEnableEXT',0,b'\x00\x06\x13\x23vkCmdSetStencilWriteMask',0,b'\x00\x05\xD5\x23vkCmdSetVertexInputEXT',0,b'\x00\x06\x24\x23vkCmdSetViewport',0,b'\x00\x06\x1E\x23vkCmdSetViewportShadingRatePaletteNV',0,b'\x00\x06\x2A\x23vkCmdSetViewportWScalingNV',0,b'\x00\x05\xDC\x23vkCmdSetViewportWithCount',0,b'\x00\x05\xDC\x23vkCmdSetViewportWithCountEXT',0,b'\x00\x03\xFF\x23vkCmdSubpassShadingHUAWEI',0,b'\x00\x04\xAF\x23vkCmdTraceRaysIndirectKHR',0,b'\x00\x04\xA5\x23vkCmdTraceRaysKHR',0,b'\x00\x05\x00\x23vkCmdTraceRaysNV',0,b'\x00\x05\x1F\x23vkCmdUpdateBuffer',0,b'\x00\x05\xFC\x23vkCmdWaitEvents',0,b'\x00\x05\xF6\x23vkCmdWaitEvents2',0,b'\x00\x05\xF6\x23vkCmdWaitEvents2KHR',0,b'\x00\x05\xE1\x23vkCmdWriteAccelerationStructuresPropertiesKHR',0,b'\x00\x05\xE9\x23vkCmdWriteAccelerationStructuresPropertiesNV',0,b'\x00\x06\x7B\x23vkCmdWriteBufferMarker2AMD',0,b'\x00\x04\x7E\x23vkCmdWriteBufferMarkerAMD',0,b'\x00\x04\x85\x23vkCmdWriteTimestamp',0,b'\x00\x06\x82\x23vkCmdWriteTimestamp2',0,b'\x00\x06\x82\x23vkCmdWriteTimestamp2KHR',0,b'\x00\x02\x01\x23vkCompileDeferredNV',0,b'\x00\x01\x7B\x23vkCopyAccelerationStructureKHR',0,b'\x00\x01\x80\x23vkCopyAccelerationStructureToMemoryKHR',0,b'\x00\x01\x85\x23vkCopyMemoryToAccelerationStructureKHR',0,b'\x00\x00\x24\x23vkCreateAccelerationStructureKHR',0,b'\x00\x00\x2A\x23vkCreateAccelerationStructureNV',0,b'\x00\x02\x93\x23vkCreateAndroidSurfaceKHR',0,b'\x00\x00\x3E\x23vkCreateBuffer',0,b'\x00\x00\x44\x23vkCreateBufferView',0,b'\x00\x00\x4F\x23vkCreateCommandPool',0,b'\x00\x01\xDB\x23vkCreateComputePipelines',0,b'\x00\x00\x55\x23vkCreateCuFunctionNVX',0,b'\x00\x00\x5B\x23vkCreateCuModuleNVX',0,b'\x00\x02\x99\x23vkCreateDebugReportCallbackEXT',0,b'\x00\x02\x9F\x23vkCreateDebugUtilsMessengerEXT',0,b'\x00\x00\x39\x23vkCreateDeferredOperationKHR',0,b'\x00\x00\x71\x23vkCreateDescriptorPool',0,b'\x00\x00\x7C\x23vkCreateDescriptorSetLayout',0,b'\x00\x00\x82\x23vkCreateDescriptorUpdateTemplate',0,b'\x00\x00\x82\x23vkCreateDescriptorUpdateTemplateKHR',0,b'\x00\x02\xCD\x23vkCreateDevice',0,b'\x00\x03\x10\x23vkCreateDisplayModeKHR',0,b'\x00\x02\xA5\x23vkCreateDisplayPlaneSurfaceKHR',0,b'\x00\x00\x92\x23vkCreateEvent',0,b'\x00\x00\xA4\x23vkCreateFence',0,b'\x00\x00\xAF\x23vkCreateFramebuffer',0,b'\x00\x01\xE3\x23vkCreateGraphicsPipelines',0,b'\x00\x02\xAB\x23vkCreateHeadlessSurfaceEXT',0,b'\x00\x00\xB5\x23vkCreateImage',0,b'\x00\x00\xBB\x23vkCreateImageView',0,b'\x00\x00\xC9\x23vkCreateIndirectCommandsLayoutNV',0,b'\x00\x00\x00\x23vkCreateInstance',0,b'\x00\x00\xF9\x23vkCreatePipelineCache',0,b'\x00\x01\x11\x23vkCreatePipelineLayout',0,b'\x00\x01\x17\x23vkCreatePrivateDataSlot',0,b'\x00\x01\x17\x23vkCreatePrivateDataSlotEXT',0,b'\x00\x01\x1D\x23vkCreateQueryPool',0,b'\x00\x01\x8A\x23vkCreateRayTracingPipelinesKHR',0,b'\x00\x01\xEB\x23vkCreateRayTracingPipelinesNV',0,b'\x00\x01\x23\x23vkCreateRenderPass',0,b'\x00\x01\x29\x23vkCreateRenderPass2',0,b'\x00\x01\x29\x23vkCreateRenderPass2KHR',0,b'\x00\x01\x2F\x23vkCreateSampler',0,b'\x00\x01\x35\x23vkCreateSamplerYcbcrConversion',0,b'\x00\x01\x35\x23vkCreateSamplerYcbcrConversionKHR',0,b'\x00\x01\x3B\x23vkCreateSemaphore',0,b'\x00\x01\x4F\x23vkCreateShaderModule',0,b'\x00\x02\x77\x23vkCreateSharedSwapchainsKHR',0,b'\x00\x01\x55\x23vkCreateSwapchainKHR',0,b'\x00\x01\x5B\x23vkCreateValidationCacheEXT',0,b'\x00\x02\xB1\x23vkCreateWaylandSurfaceKHR',0,b'\x00\x02\xB7\x23vkCreateXcbSurfaceKHR',0,b'\x00\x02\xBD\x23vkCreateXlibSurfaceKHR',0,b'\x00\x00\x61\x23vkDebugMarkerSetObjectNameEXT',0,b'\x00\x00\x65\x23vkDebugMarkerSetObjectTagEXT',0,b'\x00\x07\xF2\x23vkDebugReportMessageEXT',0,b'\x00\x01\x77\x23vkDeferredOperationJoinKHR',0,b'\x00\x06\xDF\x23vkDestroyAccelerationStructureKHR',0,b'\x00\x06\xE4\x23vkDestroyAccelerationStructureNV',0,b'\x00\x06\xEE\x23vkDestroyBuffer',0,b'\x00\x06\xE9\x23vkDestroyBufferView',0,b'\x00\x06\xF8\x23vkDestroyCommandPool',0,b'\x00\x07\x08\x23vkDestroyCuFunctionNVX',0,b'\x00\x07\x0D\x23vkDestroyCuModuleNVX',0,b'\x00\x07\xE3\x23vkDestroyDebugReportCallbackEXT',0,b'\x00\x07\xE8\x23vkDestroyDebugUtilsMessengerEXT',0,b'\x00\x07\x12\x23vkDestroyDeferredOperationKHR',0,b'\x00\x07\x17\x23vkDestroyDescriptorPool',0,b'\x00\x07\x1C\x23vkDestroyDescriptorSetLayout',0,b'\x00\x07\x2C\x23vkDestroyDescriptorUpdateTemplate',0,b'\x00\x07\x2C\x23vkDestroyDescriptorUpdateTemplateKHR',0,b'\x00\x06\xA0\x23vkDestroyDevice',0,b'\x00\x07\x44\x23vkDestroyEvent',0,b'\x00\x07\x49\x23vkDestroyFence',0,b'\x00\x07\x4E\x23vkDestroyFramebuffer',0,b'\x00\x07\x58\x23vkDestroyImage',0,b'\x00\x07\x53\x23vkDestroyImageView',0,b'\x00\x07\x6E\x23vkDestroyIndirectCommandsLayoutNV',0,b'\x00\x07\xD9\x23vkDestroyInstance',0,b'\x00\x07\x7D\x23vkDestroyPipeline',0,b'\x00\x07\x73\x23vkDestroyPipelineCache',0,b'\x00\x07\x78\x23vkDestroyPipelineLayout',0,b'\x00\x07\x82\x23vkDestroyPrivateDataSlot',0,b'\x00\x07\x82\x23vkDestroyPrivateDataSlotEXT',0,b'\x00\x07\x87\x23vkDestroyQueryPool',0,b'\x00\x07\x92\x23vkDestroyRenderPass',0,b'\x00\x07\xA1\x23vkDestroySampler',0,b'\x00\x07\x9C\x23vkDestroySamplerYcbcrConversion',0,b'\x00\x07\x9C\x23vkDestroySamplerYcbcrConversionKHR',0,b'\x00\x07\xA6\x23vkDestroySemaphore',0,b'\x00\x07\xAB\x23vkDestroyShaderModule',0,b'\x00\x07\xED\x23vkDestroySurfaceKHR',0,b'\x00\x07\xB0\x23vkDestroySwapchainKHR',0,b'\x00\x07\xBA\x23vkDestroyValidationCacheEXT',0,b'\x00\x00\x21\x23vkDeviceWaitIdle',0,b'\x00\x01\xB4\x23vkDisplayPowerControlEXT',0,b'\x00\x00\x0A\x23vkEndCommandBuffer',0,b'\x00\x02\xFB\x23vkEnumerateDeviceExtensionProperties',0,b'\x00\x03\x63\x23vkEnumerateDeviceLayerProperties',0,b'\x00\x00\x05\x23vkEnumerateInstanceExtensionProperties',0,b'\x00\x03\xAF\x23vkEnumerateInstanceLayerProperties',0,b'\x00\x03\xAC\x23vkEnumerateInstanceVersion',0,b'\x00\x02\xC3\x23vkEnumeratePhysicalDeviceGroups',0,b'\x00\x02\xC3\x23vkEnumeratePhysicalDeviceGroupsKHR',0,b'\x00\x03\x82\x23vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR',0,b'\x00\x02\xC8\x23vkEnumeratePhysicalDevices',0,b'\x00\x02\x72\x23vkFlushMappedMemoryRanges',0,b'\x00\x07\x02\x23vkFreeCommandBuffers',0,b'\x00\x01\x9F\x23vkFreeDescriptorSets',0,b'\x00\x07\x35\x23vkFreeMemory',0,b'\x00\x06\x8F\x23vkGetAccelerationStructureBuildSizesKHR',0,b'\x00\x03\xDC\x23vkGetAccelerationStructureDeviceAddressKHR',0,b'\x00\x01\x66\x23vkGetAccelerationStructureHandleNV',0,b'\x00\x06\x96\x23vkGetAccelerationStructureMemoryRequirementsNV',0,b'\x00\x01\x61\x23vkGetAndroidHardwareBufferPropertiesANDROID',0,b'\x00\x03\xE0\x23vkGetBufferDeviceAddress',0,b'\x00\x03\xE0\x23vkGetBufferDeviceAddressEXT',0,b'\x00\x03\xE0\x23vkGetBufferDeviceAddressKHR',0,b'\x00\x06\xF3\x23vkGetBufferMemoryRequirements',0,b'\x00\x06\xA4\x23vkGetBufferMemoryRequirements2',0,b'\x00\x06\xA4\x23vkGetBufferMemoryRequirements2KHR',0,b'\x00\x03\xE0\x23vkGetBufferOpaqueCaptureAddress',0,b'\x00\x03\xE0\x23vkGetBufferOpaqueCaptureAddressKHR',0,b'\x00\x02\x6B\x23vkGetCalibratedTimestampsEXT',0,b'\x00\x03\xBD\x23vkGetDeferredOperationMaxConcurrencyKHR',0,b'\x00\x01\x77\x23vkGetDeferredOperationResultKHR',0,b'\x00\x07\x27\x23vkGetDescriptorSetHostMappingVALVE',0,b'\x00\x06\xA9\x23vkGetDescriptorSetLayoutHostMappingInfoVALVE',0,b'\x00\x06\xAE\x23vkGetDescriptorSetLayoutSupport',0,b'\x00\x06\xAE\x23vkGetDescriptorSetLayoutSupportKHR',0,b'\x00\x06\x9B\x23vkGetDeviceAccelerationStructureCompatibilityKHR',0,b'\x00\x06\xB3\x23vkGetDeviceBufferMemoryRequirements',0,b'\x00\x06\xB3\x23vkGetDeviceBufferMemoryRequirementsKHR',0,b'\x00\x07\xD2\x23vkGetDeviceGroupPeerMemoryFeatures',0,b'\x00\x07\xD2\x23vkGetDeviceGroupPeerMemoryFeaturesKHR',0,b'\x00\x00\x8E\x23vkGetDeviceGroupPresentCapabilitiesKHR',0,b'\x00\x02\x22\x23vkGetDeviceGroupSurfacePresentModesKHR',0,b'\x00\x06\xB8\x23vkGetDeviceImageMemoryRequirements',0,b'\x00\x06\xB8\x23vkGetDeviceImageMemoryRequirementsKHR',0,b'\x00\x06\xBD\x23vkGetDeviceImageSparseMemoryRequirements',0,b'\x00\x06\xBD\x23vkGetDeviceImageSparseMemoryRequirementsKHR',0,b'\x00\x07\x3F\x23vkGetDeviceMemoryCommitment',0,b'\x00\x03\xE4\x23vkGetDeviceMemoryOpaqueCaptureAddress',0,b'\x00\x03\xE4\x23vkGetDeviceMemoryOpaqueCaptureAddressKHR',0,b'\x00\x08\x6E\x23vkGetDeviceProcAddr',0,b'\x00\x07\xCC\x23vkGetDeviceQueue',0,b'\x00\x06\xC3\x23vkGetDeviceQueue2',0,b'\x00\x02\x18\x23vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI',0,b'\x00\x03\x17\x23vkGetDisplayModeProperties2KHR',0,b'\x00\x03\x1D\x23vkGetDisplayModePropertiesKHR',0,b'\x00\x02\xD3\x23vkGetDisplayPlaneCapabilities2KHR',0,b'\x00\x03\x23\x23vkGetDisplayPlaneCapabilitiesKHR',0,b'\x00\x03\x89\x23vkGetDisplayPlaneSupportedDisplaysKHR',0,b'\x00\x03\x06\x23vkGetDrmDisplayEXT',0,b'\x00\x01\xB9\x23vkGetEventStatus',0,b'\x00\x00\xAA\x23vkGetFenceFdKHR',0,b'\x00\x01\xBD\x23vkGetFenceStatus',0,b'\x00\x06\xC8\x23vkGetGeneratedCommandsMemoryRequirementsNV',0,b'\x00\x01\xC6\x23vkGetImageDrmFormatModifierPropertiesEXT',0,b'\x00\x07\x63\x23vkGetImageMemoryRequirements',0,b'\x00\x06\xCD\x23vkGetImageMemoryRequirements2',0,b'\x00\x06\xCD\x23vkGetImageMemoryRequirements2KHR',0,b'\x00\x07\x68\x23vkGetImageSparseMemoryRequirements',0,b'\x00\x06\xD2\x23vkGetImageSparseMemoryRequirements2',0,b'\x00\x06\xD2\x23vkGetImageSparseMemoryRequirements2KHR',0,b'\x00\x07\x5D\x23vkGetImageSubresourceLayout',0,b'\x00\x01\xC1\x23vkGetImageViewAddressNVX',0,b'\x00\x03\xB9\x23vkGetImageViewHandleNVX',0,b'\x00\x08\x72\x23vkGetInstanceProcAddr',0,b'\x00\x00\xD9\x23vkGetMemoryAndroidHardwareBufferANDROID',0,b'\x00\x00\xDE\x23vkGetMemoryFdKHR',0,b'\x00\x00\x98\x23vkGetMemoryFdPropertiesKHR',0,b'\x00\x00\x9E\x23vkGetMemoryHostPointerPropertiesEXT',0,b'\x00\x00\xE3\x23vkGetMemoryRemoteAddressNV',0,b'\x00\x02\x36\x23vkGetPastPresentationTimingGOOGLE',0,b'\x00\x00\xF4\x23vkGetPerformanceParameterINTEL',0,b'\x00\x03\x72\x23vkGetPhysicalDeviceCalibrateableTimeDomainsEXT',0,b'\x00\x03\x45\x23vkGetPhysicalDeviceCooperativeMatrixPropertiesNV',0,b'\x00\x03\x4A\x23vkGetPhysicalDeviceDisplayPlaneProperties2KHR',0,b'\x00\x03\x4F\x23vkGetPhysicalDeviceDisplayPlanePropertiesKHR',0,b'\x00\x03\x54\x23vkGetPhysicalDeviceDisplayProperties2KHR',0,b'\x00\x03\x59\x23vkGetPhysicalDeviceDisplayPropertiesKHR',0,b'\x00\x08\x10\x23vkGetPhysicalDeviceExternalBufferProperties',0,b'\x00\x08\x10\x23vkGetPhysicalDeviceExternalBufferPropertiesKHR',0,b'\x00\x08\x15\x23vkGetPhysicalDeviceExternalFenceProperties',0,b'\x00\x08\x15\x23vkGetPhysicalDeviceExternalFencePropertiesKHR',0,b'\x00\x02\xE1\x23vkGetPhysicalDeviceExternalImageFormatPropertiesNV',0,b'\x00\x08\x1A\x23vkGetPhysicalDeviceExternalSemaphoreProperties',0,b'\x00\x08\x1A\x23vkGetPhysicalDeviceExternalSemaphorePropertiesKHR',0,b'\x00\x08\x1F\x23vkGetPhysicalDeviceFeatures',0,b'\x00\x08\x23\x23vkGetPhysicalDeviceFeatures2',0,b'\x00\x08\x23\x23vkGetPhysicalDeviceFeatures2KHR',0,b'\x00\x07\xFC\x23vkGetPhysicalDeviceFormatProperties',0,b'\x00\x08\x01\x23vkGetPhysicalDeviceFormatProperties2',0,b'\x00\x08\x01\x23vkGetPhysicalDeviceFormatProperties2KHR',0,b'\x00\x03\x68\x23vkGetPhysicalDeviceFragmentShadingRatesKHR',0,b'\x00\x02\xD8\x23vkGetPhysicalDeviceImageFormatProperties',0,b'\x00\x02\xEB\x23vkGetPhysicalDeviceImageFormatProperties2',0,b'\x00\x02\xEB\x23vkGetPhysicalDeviceImageFormatProperties2KHR',0,b'\x00\x08\x27\x23vkGetPhysicalDeviceMemoryProperties',0,b'\x00\x08\x2B\x23vkGetPhysicalDeviceMemoryProperties2',0,b'\x00\x08\x2B\x23vkGetPhysicalDeviceMemoryProperties2KHR',0,b'\x00\x08\x42\x23vkGetPhysicalDeviceMultisamplePropertiesEXT',0,b'\x00\x03\x39\x23vkGetPhysicalDevicePresentRectanglesKHR',0,b'\x00\x08\x2F\x23vkGetPhysicalDeviceProperties',0,b'\x00\x08\x33\x23vkGetPhysicalDeviceProperties2',0,b'\x00\x08\x33\x23vkGetPhysicalDeviceProperties2KHR',0,b'\x00\x08\x3D\x23vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR',0,b'\x00\x08\x47\x23vkGetPhysicalDeviceQueueFamilyProperties',0,b'\x00\x08\x4C\x23vkGetPhysicalDeviceQueueFamilyProperties2',0,b'\x00\x08\x4C\x23vkGetPhysicalDeviceQueueFamilyProperties2KHR',0,b'\x00\x08\x06\x23vkGetPhysicalDeviceSparseImageFormatProperties',0,b'\x00\x08\x37\x23vkGetPhysicalDeviceSparseImageFormatProperties2',0,b'\x00\x08\x37\x23vkGetPhysicalDeviceSparseImageFormatProperties2KHR',0,b'\x00\x03\x5E\x23vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV',0,b'\x00\x03\x29\x23vkGetPhysicalDeviceSurfaceCapabilities2EXT',0,b'\x00\x02\xF0\x23vkGetPhysicalDeviceSurfaceCapabilities2KHR',0,b'\x00\x03\x2E\x23vkGetPhysicalDeviceSurfaceCapabilitiesKHR',0,b'\x00\x02\xF5\x23vkGetPhysicalDeviceSurfaceFormats2KHR',0,b'\x00\x03\x3F\x23vkGetPhysicalDeviceSurfaceFormatsKHR',0,b'\x00\x03\x33\x23vkGetPhysicalDeviceSurfacePresentModesKHR',0,b'\x00\x03\x7C\x23vkGetPhysicalDeviceSurfaceSupportKHR',0,b'\x00\x03\x6D\x23vkGetPhysicalDeviceToolProperties',0,b'\x00\x03\x6D\x23vkGetPhysicalDeviceToolPropertiesEXT',0,b'\x00\x03\xC7\x23vkGetPhysicalDeviceWaylandPresentationSupportKHR',0,b'\x00\x03\xCC\x23vkGetPhysicalDeviceXcbPresentationSupportKHR',0,b'\x00\x03\xC1\x23vkGetPhysicalDeviceXlibPresentationSupportKHR',0,b'\x00\x01\xD5\x23vkGetPipelineCacheData',0,b'\x00\x00\xFF\x23vkGetPipelineExecutableInternalRepresentationsKHR',0,b'\x00\x01\x0B\x23vkGetPipelineExecutablePropertiesKHR',0,b'\x00\x01\x05\x23vkGetPipelineExecutableStatisticsKHR',0,b'\x00\x06\xD8\x23vkGetPrivateData',0,b'\x00\x06\xD8\x23vkGetPrivateDataEXT',0,b'\x00\x02\x0E\x23vkGetQueryPoolResults',0,b'\x00\x08\x58\x23vkGetQueueCheckpointData2NV',0,b'\x00\x08\x5D\x23vkGetQueueCheckpointDataNV',0,b'\x00\x02\x06\x23vkGetRayTracingCaptureReplayShaderGroupHandlesKHR',0,b'\x00\x02\x06\x23vkGetRayTracingShaderGroupHandlesKHR',0,b'\x00\x02\x06\x23vkGetRayTracingShaderGroupHandlesNV',0,b'\x00\x03\xE8\x23vkGetRayTracingShaderGroupStackSizeKHR',0,b'\x00\x02\x2B\x23vkGetRefreshCycleDurationGOOGLE',0,b'\x00\x07\x97\x23vkGetRenderAreaGranularity',0,b'\x00\x02\x1D\x23vkGetSemaphoreCounterValue',0,b'\x00\x02\x1D\x23vkGetSemaphoreCounterValueKHR',0,b'\x00\x01\x41\x23vkGetSemaphoreFdKHR',0,b'\x00\x01\xF9\x23vkGetShaderInfoAMD',0,b'\x00\x02\x30\x23vkGetSwapchainCounterEXT',0,b'\x00\x02\x3C\x23vkGetSwapchainImagesKHR',0,b'\x00\x02\x27\x23vkGetSwapchainStatusKHR',0,b'\x00\x02\x50\x23vkGetValidationCacheDataEXT',0,b'\x00\x03\x77\x23vkGetWinrtDisplayNV',0,b'\x00\x00\xC1\x23vkImportFenceFdKHR',0,b'\x00\x00\xC5\x23vkImportSemaphoreFdKHR',0,b'\x00\x00\xCF\x23vkInitializePerformanceApiINTEL',0,b'\x00\x02\x72\x23vkInvalidateMappedMemoryRanges',0,b'\x00\x01\xA5\x23vkMapMemory',0,b'\x00\x01\xF3\x23vkMergePipelineCaches',0,b'\x00\x02\x56\x23vkMergeValidationCachesEXT',0,b'\x00\x08\x54\x23vkQueueBeginDebugUtilsLabelEXT',0,b'\x00\x03\x9A\x23vkQueueBindSparse',0,b'\x00\x08\x51\x23vkQueueEndDebugUtilsLabelEXT',0,b'\x00\x08\x54\x23vkQueueInsertDebugUtilsLabelEXT',0,b'\x00\x03\x92\x23vkQueuePresentKHR',0,b'\x00\x03\x96\x23vkQueueSetPerformanceConfigurationINTEL',0,b'\x00\x03\xA0\x23vkQueueSubmit',0,b'\x00\x03\xA6\x23vkQueueSubmit2',0,b'\x00\x03\xA6\x23vkQueueSubmit2KHR',0,b'\x00\x03\x8F\x23vkQueueWaitIdle',0,b'\x00\x00\x88\x23vkRegisterDeviceEventEXT',0,b'\x00\x01\xAD\x23vkRegisterDisplayEventEXT',0,b'\x00\x03\x0C\x23vkReleaseDisplayEXT',0,b'\x00\x01\xD1\x23vkReleasePerformanceConfigurationINTEL',0,b'\x00\x06\x8C\x23vkReleaseProfilingLockKHR',0,b'\x00\x00\x1D\x23vkResetCommandBuffer',0,b'\x00\x01\x72\x23vkResetCommandPool',0,b'\x00\x01\x9A\x23vkResetDescriptorPool',0,b'\x00\x01\xB9\x23vkResetEvent',0,b'\x00\x02\x87\x23vkResetFences',0,b'\x00\x07\x8C\x23vkResetQueryPool',0,b'\x00\x07\x8C\x23vkResetQueryPoolEXT',0,b'\x00\x00\x69\x23vkSetDebugUtilsObjectNameEXT',0,b'\x00\x00\x6D\x23vkSetDebugUtilsObjectTagEXT',0,b'\x00\x07\x3A\x23vkSetDeviceMemoryPriorityEXT',0,b'\x00\x01\xB9\x23vkSetEvent',0,b'\x00\x07\xC6\x23vkSetHdrMetadataEXT',0,b'\x00\x07\xB5\x23vkSetLocalDimmingAMD',0,b'\x00\x00\xE8\x23vkSetPrivateData',0,b'\x00\x00\xE8\x23vkSetPrivateDataEXT',0,b'\x00\x01\x46\x23vkSignalSemaphore',0,b'\x00\x01\x46\x23vkSignalSemaphoreKHR',0,b'\x00\x07\xDD\x23vkSubmitDebugUtilsMessageEXT',0,b'\x00\x06\xFD\x23vkTrimCommandPool',0,b'\x00\x06\xFD\x23vkTrimCommandPoolKHR',0,b'\x00\x06\x8C\x23vkUninitializePerformanceApiINTEL',0,b'\x00\x07\x31\x23vkUnmapMemory',0,b'\x00\x07\x21\x23vkUpdateDescriptorSetWithTemplate',0,b'\x00\x07\x21\x23vkUpdateDescriptorSetWithTemplateKHR',0,b'\x00\x07\xBF\x23vkUpdateDescriptorSets',0,b'\x00\x02\x8C\x23vkWaitForFences',0,b'\x00\x02\x4A\x23vkWaitForPresentKHR',0,b'\x00\x01\x4A\x23vkWaitSemaphores',0,b'\x00\x01\x4A\x23vkWaitSemaphoresKHR',0,b'\x00\x02\x7E\x23vkWriteAccelerationStructuresPropertiesKHR',0),
    _struct_unions = ((b'\x00\x00\x0C\xC7\x00\x00\x00\x10AHardwareBuffer',),(b'\x00\x00\x08\x77\x00\x00\x00\x10ANativeWindow',),(b'\x00\x00\x08\x78\x00\x00\x00\x10Display',),(b'\x00\x00\x08\x79\x00\x00\x00\x10MirBlob',),(b'\x00\x00\x08\x7A\x00\x00\x00\x10MirBufferStream',),(b'\x00\x00\x08\x7B\x00\x00\x00\x10MirConnection',),(b'\x00\x00\x08\x7C\x00\x00\x00\x10MirDisplayConfig',),(b'\x00\x00\x08\x7D\x00\x00\x00\x10MirPersistentId',),(b'\x00\x00\x08\x7E\x00\x00\x00\x10MirPromptSession',),(b'\x00\x00\x08\x7F\x00\x00\x00\x10MirScreencast',),(b'\x00\x00\x08\x80\x00\x00\x00\x10MirSurface',),(b'\x00\x00\x08\x81\x00\x00\x00\x10MirSurfaceSpec',),(b'\x00\x00\x08\x84\x00\x00\x00\x02VkAabbPositionsKHR',b'\x00\x04\xCA\x11minX',b'\x00\x04\xCA\x11minY',b'\x00\x04\xCA\x11minZ',b'\x00\x04\xCA\x11maxX',b'\x00\x04\xCA\x11maxY',b'\x00\x04\xCA\x11maxZ'),(b'\x00\x00\x08\x85\x00\x00\x00\x02VkAccelerationStructureBuildGeometryInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x08\xA0\x11type',b'\x00\x00\x1F\x11flags',b'\x00\x08\xE4\x11mode',b'\x00\x06\xE1\x11srcAccelerationStructure',b'\x00\x06\xE1\x11dstAccelerationStructure',b'\x00\x00\x1F\x11geometryCount',b'\x00\x08\x92\x11pGeometries',b'\x00\x08\x91\x11ppGeometries',b'\x00\x09\x5E\x11scratchData'),(b'\x00\x00\x08\x87\x00\x00\x00\x02VkAccelerationStructureBuildRangeInfoKHR',b'\x00\x00\x1F\x11primitiveCount',b'\x00\x00\x1F\x11primitiveOffset',b'\x00\x00\x1F\x11firstVertex',b'\x00\x00\x1F\x11transformOffset'),(b'\x00\x00\x08\x88\x00\x00\x00\x02VkAccelerationStructureBuildSizesInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11accelerationStructureSize',b'\x00\x00\xEB\x11updateScratchSize',b'\x00\x00\xEB\x11buildScratchSize'),(b'\x00\x00\x08\x8B\x00\x00\x00\x02VkAccelerationStructureCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11createFlags',b'\x00\x01\x6E\x11buffer',b'\x00\x00\xEB\x11offset',b'\x00\x00\xEB\x11size',b'\x00\x08\xA0\x11type',b'\x00\x00\xEB\x11deviceAddress'),(b'\x00\x00\x08\x8C\x00\x00\x00\x02VkAccelerationStructureCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11compactedSize',b'\x00\x08\x96\x11info'),(b'\x00\x00\x08\x8D\x00\x00\x00\x02VkAccelerationStructureDeviceAddressInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x06\xE1\x11accelerationStructure'),(b'\x00\x00\x08\x8E\x00\x00\x00\x02VkAccelerationStructureGeometryAabbsDataKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\x5D\x11data',b'\x00\x00\xEB\x11stride'),(b'\x00\x00\x08\x8F\x00\x00\x00\x03VkAccelerationStructureGeometryDataKHR',b'\x00\x08\x95\x11triangles',b'\x00\x08\x8E\x11aabbs',b'\x00\x08\x90\x11instances'),(b'\x00\x00\x08\x90\x00\x00\x00\x02VkAccelerationStructureGeometryInstancesDataKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11arrayOfPointers',b'\x00\x09\x5D\x11data'),(b'\x00\x00\x08\x93\x00\x00\x00\x02VkAccelerationStructureGeometryKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\xBE\x11geometryType',b'\x00\x08\x8F\x11geometry',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x08\x94\x00\x00\x00\x02VkAccelerationStructureGeometryMotionTrianglesDataNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\x5D\x11vertexData'),(b'\x00\x00\x08\x95\x00\x00\x00\x02VkAccelerationStructureGeometryTrianglesDataKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\xDA\x11vertexFormat',b'\x00\x09\x5D\x11vertexData',b'\x00\x00\xEB\x11vertexStride',b'\x00\x00\x1F\x11maxVertex',b'\x00\x04\xF5\x11indexType',b'\x00\x09\x5D\x11indexData',b'\x00\x09\x5D\x11transformData'),(b'\x00\x00\x08\x96\x00\x00\x00\x02VkAccelerationStructureInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x08\xA0\x11type',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11instanceCount',b'\x00\x00\x1F\x11geometryCount',b'\x00\x09\xBB\x11pGeometries'),(b'\x00\x00\x08\x97\x00\x00\x00\x02VkAccelerationStructureInstanceKHR',b'\x00\x0C\x96\x11transform',b'\x00\x00\x1F\x13\x00\x00\x00\x18instanceCustomIndex',b'\x00\x00\x1F\x13\x00\x00\x00\x08mask',b'\x00\x00\x1F\x13\x00\x00\x00\x18instanceShaderBindingTableRecordOffset',b'\x00\x00\x1F\x13\x00\x00\x00\x08flags',b'\x00\x00\xEB\x11accelerationStructureReference'),(b'\x00\x00\x0C\xC8\x00\x00\x00\x10VkAccelerationStructureKHR_T',),(b'\x00\x00\x08\x98\x00\x00\x00\x02VkAccelerationStructureMatrixMotionInstanceNV',b'\x00\x0C\x96\x11transformT0',b'\x00\x0C\x96\x11transformT1',b'\x00\x00\x1F\x13\x00\x00\x00\x18instanceCustomIndex',b'\x00\x00\x1F\x13\x00\x00\x00\x08mask',b'\x00\x00\x1F\x13\x00\x00\x00\x18instanceShaderBindingTableRecordOffset',b'\x00\x00\x1F\x13\x00\x00\x00\x08flags',b'\x00\x00\xEB\x11accelerationStructureReference'),(b'\x00\x00\x08\x99\x00\x00\x00\x02VkAccelerationStructureMemoryRequirementsInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x08\x9A\x11type',b'\x00\x01\x68\x11accelerationStructure'),(b'\x00\x00\x08\x9B\x00\x00\x00\x02VkAccelerationStructureMotionInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11maxInstances',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x08\x9C\x00\x00\x00\x03VkAccelerationStructureMotionInstanceDataNV',b'\x00\x08\x97\x11staticInstance',b'\x00\x08\x98\x11matrixMotionInstance',b'\x00\x08\x9F\x11srtMotionInstance'),(b'\x00\x00\x08\x9D\x00\x00\x00\x02VkAccelerationStructureMotionInstanceNV',b'\x00\x08\x9E\x11type',b'\x00\x00\x1F\x11flags',b'\x00\x08\x9C\x11data'),(b'\x00\x00\x0C\xC9\x00\x00\x00\x10VkAccelerationStructureNV_T',),(b'\x00\x00\x08\x9F\x00\x00\x00\x02VkAccelerationStructureSRTMotionInstanceNV',b'\x00\x0C\x2E\x11transformT0',b'\x00\x0C\x2E\x11transformT1',b'\x00\x00\x1F\x13\x00\x00\x00\x18instanceCustomIndex',b'\x00\x00\x1F\x13\x00\x00\x00\x08mask',b'\x00\x00\x1F\x13\x00\x00\x00\x18instanceShaderBindingTableRecordOffset',b'\x00\x00\x1F\x13\x00\x00\x00\x08flags',b'\x00\x00\xEB\x11accelerationStructureReference'),(b'\x00\x00\x08\xA1\x00\x00\x00\x02VkAccelerationStructureVersionInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0D\x13\x11pVersionData'),(b'\x00\x00\x08\xA3\x00\x00\x00\x02VkAcquireNextImageInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x29\x11swapchain',b'\x00\x00\xEB\x11timeout',b'\x00\x02\x1F\x11semaphore',b'\x00\x01\xBF\x11fence',b'\x00\x00\x1F\x11deviceMask'),(b'\x00\x00\x08\xA5\x00\x00\x00\x02VkAcquireProfilingLockInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\xEB\x11timeout'),(b'\x00\x00\x08\xA6\x00\x00\x00\x02VkAllocationCallbacks',b'\x00\x01\x6A\x11pUserData',b'\x00\x0D\x19\x11pfnAllocation',b'\x00\x0D\x1A\x11pfnReallocation',b'\x00\x0D\xE3\x11pfnFree',b'\x00\x0D\xE2\x11pfnInternalAllocation',b'\x00\x0D\xE2\x11pfnInternalFree'),(b'\x00\x00\x08\xA7\x00\x00\x00\x02VkAndroidHardwareBufferFormatProperties2ANDROID',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x02\xDA\x11format',b'\x00\x00\xEB\x11externalFormat',b'\x00\x00\xEB\x11formatFeatures',b'\x00\x09\x04\x11samplerYcbcrConversionComponents',b'\x00\x0C\x3E\x11suggestedYcbcrModel',b'\x00\x0C\x3F\x11suggestedYcbcrRange',b'\x00\x08\xE8\x11suggestedXChromaOffset',b'\x00\x08\xE8\x11suggestedYChromaOffset'),(b'\x00\x00\x08\xA8\x00\x00\x00\x02VkAndroidHardwareBufferFormatPropertiesANDROID',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x02\xDA\x11format',b'\x00\x00\xEB\x11externalFormat',b'\x00\x00\x1F\x11formatFeatures',b'\x00\x09\x04\x11samplerYcbcrConversionComponents',b'\x00\x0C\x3E\x11suggestedYcbcrModel',b'\x00\x0C\x3F\x11suggestedYcbcrRange',b'\x00\x08\xE8\x11suggestedXChromaOffset',b'\x00\x08\xE8\x11suggestedYChromaOffset'),(b'\x00\x00\x08\xA9\x00\x00\x00\x02VkAndroidHardwareBufferPropertiesANDROID',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11allocationSize',b'\x00\x00\x1F\x11memoryTypeBits'),(b'\x00\x00\x08\xAA\x00\x00\x00\x02VkAndroidHardwareBufferUsageANDROID',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11androidHardwareBufferUsage'),(b'\x00\x00\x08\xAB\x00\x00\x00\x02VkAndroidSurfaceCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x08\x76\x11window'),(b'\x00\x00\x08\xAD\x00\x00\x00\x02VkApplicationInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x06\x11pApplicationName',b'\x00\x00\x1F\x11applicationVersion',b'\x00\x00\x06\x11pEngineName',b'\x00\x00\x1F\x11engineVersion',b'\x00\x00\x1F\x11apiVersion'),(b'\x00\x00\x08\xB1\x00\x00\x00\x02VkAttachmentDescription',b'\x00\x00\x1F\x11flags',b'\x00\x02\xDA\x11format',b'\x00\x08\x0A\x11samples',b'\x00\x08\xB4\x11loadOp',b'\x00\x08\xBD\x11storeOp',b'\x00\x08\xB4\x11stencilLoadOp',b'\x00\x08\xBD\x11stencilStoreOp',b'\x00\x04\xE8\x11initialLayout',b'\x00\x04\xE8\x11finalLayout'),(b'\x00\x00\x08\xB0\x00\x00\x00\x02VkAttachmentDescription2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x02\xDA\x11format',b'\x00\x08\x0A\x11samples',b'\x00\x08\xB4\x11loadOp',b'\x00\x08\xBD\x11storeOp',b'\x00\x08\xB4\x11stencilLoadOp',b'\x00\x08\xBD\x11stencilStoreOp',b'\x00\x04\xE8\x11initialLayout',b'\x00\x04\xE8\x11finalLayout'),(b'\x00\x00\x08\xB3\x00\x00\x00\x02VkAttachmentDescriptionStencilLayout',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x04\xE8\x11stencilInitialLayout',b'\x00\x04\xE8\x11stencilFinalLayout'),(b'\x00\x00\x08\xB8\x00\x00\x00\x02VkAttachmentReference',b'\x00\x00\x1F\x11attachment',b'\x00\x04\xE8\x11layout'),(b'\x00\x00\x08\xB7\x00\x00\x00\x02VkAttachmentReference2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11attachment',b'\x00\x04\xE8\x11layout',b'\x00\x00\x1F\x11aspectMask'),(b'\x00\x00\x08\xB9\x00\x00\x00\x02VkAttachmentReferenceStencilLayout',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x04\xE8\x11stencilLayout'),(b'\x00\x00\x08\xBA\x00\x00\x00\x02VkAttachmentSampleCountInfoAMD',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11colorAttachmentCount',b'\x00\x0C\x2F\x11pColorAttachmentSamples',b'\x00\x08\x0A\x11depthStencilAttachmentSamples'),(b'\x00\x00\x08\xBC\x00\x00\x00\x02VkAttachmentSampleLocationsEXT',b'\x00\x00\x1F\x11attachmentIndex',b'\x00\x0C\x32\x11sampleLocationsInfo'),(b'\x00\x00\x08\xBF\x00\x00\x00\x02VkBaseInStructure',b'\x00\x0C\x6E\x11sType',b'\x00\x08\xBE\x11pNext'),(b'\x00\x00\x08\xC1\x00\x00\x00\x02VkBaseOutStructure',b'\x00\x0C\x6E\x11sType',b'\x00\x08\xC0\x11pNext'),(b'\x00\x00\x08\xC2\x00\x00\x00\x02VkBindAccelerationStructureMemoryInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x68\x11accelerationStructure',b'\x00\x01\x6F\x11memory',b'\x00\x00\xEB\x11memoryOffset',b'\x00\x00\x1F\x11deviceIndexCount',b'\x00\x04\x71\x11pDeviceIndices'),(b'\x00\x00\x08\xC3\x00\x00\x00\x02VkBindBufferMemoryDeviceGroupInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11deviceIndexCount',b'\x00\x04\x71\x11pDeviceIndices'),(b'\x00\x00\x08\xC4\x00\x00\x00\x02VkBindBufferMemoryInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6E\x11buffer',b'\x00\x01\x6F\x11memory',b'\x00\x00\xEB\x11memoryOffset'),(b'\x00\x00\x08\xC5\x00\x00\x00\x02VkBindImageMemoryDeviceGroupInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11deviceIndexCount',b'\x00\x04\x71\x11pDeviceIndices',b'\x00\x00\x1F\x11splitInstanceBindRegionCount',b'\x00\x05\xCB\x11pSplitInstanceBindRegions'),(b'\x00\x00\x08\xC6\x00\x00\x00\x02VkBindImageMemoryInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC8\x11image',b'\x00\x01\x6F\x11memory',b'\x00\x00\xEB\x11memoryOffset'),(b'\x00\x00\x08\xC7\x00\x00\x00\x02VkBindImageMemorySwapchainInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x29\x11swapchain',b'\x00\x00\x1F\x11imageIndex'),(b'\x00\x00\x08\xC8\x00\x00\x00\x02VkBindImagePlaneMemoryInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\xC7\x11planeAspect'),(b'\x00\x00\x08\xC9\x00\x00\x00\x02VkBindIndexBufferIndirectCommandNV',b'\x00\x00\xEB\x11bufferAddress',b'\x00\x00\x1F\x11size',b'\x00\x04\xF5\x11indexType'),(b'\x00\x00\x08\xCA\x00\x00\x00\x02VkBindShaderGroupIndirectCommandNV',b'\x00\x00\x1F\x11groupIndex'),(b'\x00\x00\x08\xCB\x00\x00\x00\x02VkBindSparseInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11waitSemaphoreCount',b'\x00\x0C\xF5\x11pWaitSemaphores',b'\x00\x00\x1F\x11bufferBindCount',b'\x00\x0C\x57\x11pBufferBinds',b'\x00\x00\x1F\x11imageOpaqueBindCount',b'\x00\x0C\x62\x11pImageOpaqueBinds',b'\x00\x00\x1F\x11imageBindCount',b'\x00\x0C\x5E\x11pImageBinds',b'\x00\x00\x1F\x11signalSemaphoreCount',b'\x00\x0C\xF5\x11pSignalSemaphores'),(b'\x00\x00\x08\xCC\x00\x00\x00\x02VkBindVertexBufferIndirectCommandNV',b'\x00\x00\xEB\x11bufferAddress',b'\x00\x00\x1F\x11size',b'\x00\x00\x1F\x11stride'),(b'\x00\x00\x08\xD0\x00\x00\x00\x02VkBlitImageInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC8\x11srcImage',b'\x00\x04\xE8\x11srcImageLayout',b'\x00\x01\xC8\x11dstImage',b'\x00\x04\xE8\x11dstImageLayout',b'\x00\x00\x1F\x11regionCount',b'\x00\x09\xC8\x11pRegions',b'\x00\x05\x61\x11filter'),(b'\x00\x00\x08\xD4\x00\x00\x00\x02VkBufferCopy',b'\x00\x00\xEB\x11srcOffset',b'\x00\x00\xEB\x11dstOffset',b'\x00\x00\xEB\x11size'),(b'\x00\x00\x08\xD3\x00\x00\x00\x02VkBufferCopy2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11srcOffset',b'\x00\x00\xEB\x11dstOffset',b'\x00\x00\xEB\x11size'),(b'\x00\x00\x08\xD6\x00\x00\x00\x02VkBufferCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\xEB\x11size',b'\x00\x00\x1F\x11usage',b'\x00\x0C\x56\x11sharingMode',b'\x00\x00\x1F\x11queueFamilyIndexCount',b'\x00\x04\x71\x11pQueueFamilyIndices'),(b'\x00\x00\x08\xD7\x00\x00\x00\x02VkBufferDeviceAddressCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11deviceAddress'),(b'\x00\x00\x08\xD8\x00\x00\x00\x02VkBufferDeviceAddressInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6E\x11buffer'),(b'\x00\x00\x08\xDB\x00\x00\x00\x02VkBufferImageCopy',b'\x00\x00\xEB\x11bufferOffset',b'\x00\x00\x1F\x11bufferRowLength',b'\x00\x00\x1F\x11bufferImageHeight',b'\x00\x09\xE1\x11imageSubresource',b'\x00\x0A\x26\x11imageOffset',b'\x00\x09\x8E\x11imageExtent'),(b'\x00\x00\x08\xDA\x00\x00\x00\x02VkBufferImageCopy2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11bufferOffset',b'\x00\x00\x1F\x11bufferRowLength',b'\x00\x00\x1F\x11bufferImageHeight',b'\x00\x09\xE1\x11imageSubresource',b'\x00\x0A\x26\x11imageOffset',b'\x00\x09\x8E\x11imageExtent'),(b'\x00\x00\x08\xDE\x00\x00\x00\x02VkBufferMemoryBarrier',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11srcAccessMask',b'\x00\x00\x1F\x11dstAccessMask',b'\x00\x00\x1F\x11srcQueueFamilyIndex',b'\x00\x00\x1F\x11dstQueueFamilyIndex',b'\x00\x01\x6E\x11buffer',b'\x00\x00\xEB\x11offset',b'\x00\x00\xEB\x11size'),(b'\x00\x00\x08\xDD\x00\x00\x00\x02VkBufferMemoryBarrier2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11srcStageMask',b'\x00\x00\xEB\x11srcAccessMask',b'\x00\x00\xEB\x11dstStageMask',b'\x00\x00\xEB\x11dstAccessMask',b'\x00\x00\x1F\x11srcQueueFamilyIndex',b'\x00\x00\x1F\x11dstQueueFamilyIndex',b'\x00\x01\x6E\x11buffer',b'\x00\x00\xEB\x11offset',b'\x00\x00\xEB\x11size'),(b'\x00\x00\x08\xDF\x00\x00\x00\x02VkBufferMemoryRequirementsInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6E\x11buffer'),(b'\x00\x00\x08\xE0\x00\x00\x00\x02VkBufferOpaqueCaptureAddressCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11opaqueCaptureAddress'),(b'\x00\x00\x08\xE2\x00\x00\x00\x02VkBufferViewCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x01\x6E\x11buffer',b'\x00\x02\xDA\x11format',b'\x00\x00\xEB\x11offset',b'\x00\x00\xEB\x11range'),(b'\x00\x00\x0C\xCB\x00\x00\x00\x10VkBufferView_T',),(b'\x00\x00\x0C\xCC\x00\x00\x00\x10VkBuffer_T',),(b'\x00\x00\x08\xE5\x00\x00\x00\x02VkCalibratedTimestampInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0C\x92\x11timeDomain'),(b'\x00\x00\x08\xE6\x00\x00\x00\x02VkCheckpointData2NV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11stage',b'\x00\x01\x6A\x11pCheckpointMarker'),(b'\x00\x00\x08\xE7\x00\x00\x00\x02VkCheckpointDataNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x04\x80\x11stage',b'\x00\x01\x6A\x11pCheckpointMarker'),(b'\x00\x00\x08\xE9\x00\x00\x00\x02VkClearAttachment',b'\x00\x00\x1F\x11aspectMask',b'\x00\x00\x1F\x11colorAttachment',b'\x00\x08\xEE\x11clearValue'),(b'\x00\x00\x08\xEA\x00\x00\x00\x03VkClearColorValue',b'\x00\x0C\xC1\x11float32',b'\x00\x0C\xC3\x11int32',b'\x00\x0D\x0B\x11uint32'),(b'\x00\x00\x08\xEB\x00\x00\x00\x02VkClearDepthStencilValue',b'\x00\x04\xCA\x11depth',b'\x00\x00\x1F\x11stencil'),(b'\x00\x00\x08\xEC\x00\x00\x00\x02VkClearRect',b'\x00\x0B\x6C\x11rect',b'\x00\x00\x1F\x11baseArrayLayer',b'\x00\x00\x1F\x11layerCount'),(b'\x00\x00\x08\xEE\x00\x00\x00\x03VkClearValue',b'\x00\x08\xEA\x11color',b'\x00\x08\xEB\x11depthStencil'),(b'\x00\x00\x08\xF0\x00\x00\x00\x02VkCoarseSampleLocationNV',b'\x00\x00\x1F\x11pixelX',b'\x00\x00\x1F\x11pixelY',b'\x00\x00\x1F\x11sample'),(b'\x00\x00\x08\xF1\x00\x00\x00\x02VkCoarseSampleOrderCustomNV',b'\x00\x0C\x53\x11shadingRate',b'\x00\x00\x1F\x11sampleCount',b'\x00\x00\x1F\x11sampleLocationCount',b'\x00\x08\xEF\x11pSampleLocations'),(b'\x00\x00\x08\xF4\x00\x00\x00\x02VkCommandBufferAllocateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x74\x11commandPool',b'\x00\x08\xFC\x11level',b'\x00\x00\x1F\x11commandBufferCount'),(b'\x00\x00\x08\xF5\x00\x00\x00\x02VkCommandBufferBeginInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x08\xF7\x11pInheritanceInfo'),(b'\x00\x00\x08\xF6\x00\x00\x00\x02VkCommandBufferInheritanceConditionalRenderingInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11conditionalRenderingEnable'),(b'\x00\x00\x08\xF8\x00\x00\x00\x02VkCommandBufferInheritanceInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x1A\x11renderPass',b'\x00\x00\x1F\x11subpass',b'\x00\x07\x50\x11framebuffer',b'\x00\x00\x1F\x11occlusionQueryEnable',b'\x00\x00\x1F\x11queryFlags',b'\x00\x00\x1F\x11pipelineStatistics'),(b'\x00\x00\x08\xF9\x00\x00\x00\x02VkCommandBufferInheritanceRenderPassTransformInfoQCOM',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0C\x8B\x11transform',b'\x00\x0B\x6C\x11renderArea'),(b'\x00\x00\x08\xFA\x00\x00\x00\x02VkCommandBufferInheritanceRenderingInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11viewMask',b'\x00\x00\x1F\x11colorAttachmentCount',b'\x00\x09\xA5\x11pColorAttachmentFormats',b'\x00\x02\xDA\x11depthAttachmentFormat',b'\x00\x02\xDA\x11stencilAttachmentFormat',b'\x00\x08\x0A\x11rasterizationSamples'),(b'\x00\x00\x08\xFB\x00\x00\x00\x02VkCommandBufferInheritanceViewportScissorInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11viewportScissor2D',b'\x00\x00\x1F\x11viewportDepthCount',b'\x00\x05\xDF\x11pViewportDepths'),(b'\x00\x00\x08\xFF\x00\x00\x00\x02VkCommandBufferSubmitInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x0B\x11commandBuffer',b'\x00\x00\x1F\x11deviceMask'),(b'\x00\x00\x0C\xCD\x00\x00\x00\x10VkCommandBuffer_T',),(b'\x00\x00\x09\x02\x00\x00\x00\x02VkCommandPoolCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11queueFamilyIndex'),(b'\x00\x00\x0C\xCE\x00\x00\x00\x10VkCommandPool_T',),(b'\x00\x00\x09\x04\x00\x00\x00\x02VkComponentMapping',b'\x00\x09\x05\x11r',b'\x00\x09\x05\x11g',b'\x00\x09\x05\x11b',b'\x00\x09\x05\x11a'),(b'\x00\x00\x09\x08\x00\x00\x00\x02VkComputePipelineCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x0B\x32\x11stage',b'\x00\x04\x64\x11layout',b'\x00\x01\xFB\x11basePipelineHandle',b'\x00\x03\x03\x11basePipelineIndex'),(b'\x00\x00\x09\x09\x00\x00\x00\x02VkConditionalRenderingBeginInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6E\x11buffer',b'\x00\x00\xEB\x11offset',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x09\x0B\x00\x00\x00\x02VkConformanceVersion',b'\x00\x0D\x14\x11major',b'\x00\x0D\x14\x11minor',b'\x00\x0D\x14\x11subminor',b'\x00\x0D\x14\x11patch'),(b'\x00\x00\x09\x0D\x00\x00\x00\x02VkCooperativeMatrixPropertiesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11MSize',b'\x00\x00\x1F\x11NSize',b'\x00\x00\x1F\x11KSize',b'\x00\x09\x06\x11AType',b'\x00\x09\x06\x11BType',b'\x00\x09\x06\x11CType',b'\x00\x09\x06\x11DType',b'\x00\x0C\x40\x11scope'),(b'\x00\x00\x09\x0E\x00\x00\x00\x02VkCopyAccelerationStructureInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x06\xE1\x11src',b'\x00\x06\xE1\x11dst',b'\x00\x04\xDB\x11mode'),(b'\x00\x00\x09\x0F\x00\x00\x00\x02VkCopyAccelerationStructureToMemoryInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x06\xE1\x11src',b'\x00\x09\x5E\x11dst',b'\x00\x04\xDB\x11mode'),(b'\x00\x00\x09\x10\x00\x00\x00\x02VkCopyBufferInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6E\x11srcBuffer',b'\x00\x01\x6E\x11dstBuffer',b'\x00\x00\x1F\x11regionCount',b'\x00\x08\xD2\x11pRegions'),(b'\x00\x00\x09\x11\x00\x00\x00\x02VkCopyBufferToImageInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6E\x11srcBuffer',b'\x00\x01\xC8\x11dstImage',b'\x00\x04\xE8\x11dstImageLayout',b'\x00\x00\x1F\x11regionCount',b'\x00\x08\xD9\x11pRegions'),(b'\x00\x00\x09\x12\x00\x00\x00\x02VkCopyCommandTransformInfoQCOM',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0C\x8B\x11transform'),(b'\x00\x00\x09\x13\x00\x00\x00\x02VkCopyDescriptorSet',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x07\x23\x11srcSet',b'\x00\x00\x1F\x11srcBinding',b'\x00\x00\x1F\x11srcArrayElement',b'\x00\x07\x23\x11dstSet',b'\x00\x00\x1F\x11dstBinding',b'\x00\x00\x1F\x11dstArrayElement',b'\x00\x00\x1F\x11descriptorCount'),(b'\x00\x00\x09\x14\x00\x00\x00\x02VkCopyImageInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC8\x11srcImage',b'\x00\x04\xE8\x11srcImageLayout',b'\x00\x01\xC8\x11dstImage',b'\x00\x04\xE8\x11dstImageLayout',b'\x00\x00\x1F\x11regionCount',b'\x00\x09\xCB\x11pRegions'),(b'\x00\x00\x09\x15\x00\x00\x00\x02VkCopyImageToBufferInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC8\x11srcImage',b'\x00\x04\xE8\x11srcImageLayout',b'\x00\x01\x6E\x11dstBuffer',b'\x00\x00\x1F\x11regionCount',b'\x00\x08\xD9\x11pRegions'),(b'\x00\x00\x09\x16\x00\x00\x00\x02VkCopyMemoryToAccelerationStructureInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\x5D\x11src',b'\x00\x06\xE1\x11dst',b'\x00\x04\xDB\x11mode'),(b'\x00\x00\x09\x19\x00\x00\x00\x02VkCuFunctionCreateInfoNVX',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x07\x0F\x11module',b'\x00\x00\x06\x11pName'),(b'\x00\x00\x0C\xCF\x00\x00\x00\x10VkCuFunctionNVX_T',),(b'\x00\x00\x09\x1A\x00\x00\x00\x02VkCuLaunchInfoNVX',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x07\x0A\x11function',b'\x00\x00\x1F\x11gridDimX',b'\x00\x00\x1F\x11gridDimY',b'\x00\x00\x1F\x11gridDimZ',b'\x00\x00\x1F\x11blockDimX',b'\x00\x00\x1F\x11blockDimY',b'\x00\x00\x1F\x11blockDimZ',b'\x00\x00\x1F\x11sharedMemBytes',b'\x00\x01\x69\x11paramCount',b'\x00\x0D\x1B\x11pParams',b'\x00\x01\x69\x11extraCount',b'\x00\x0D\x1B\x11pExtras'),(b'\x00\x00\x09\x1B\x00\x00\x00\x02VkCuModuleCreateInfoNVX',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x69\x11dataSize',b'\x00\x00\xA1\x11pData'),(b'\x00\x00\x0C\xD0\x00\x00\x00\x10VkCuModuleNVX_T',),(b'\x00\x00\x09\x1D\x00\x00\x00\x02VkDebugMarkerMarkerInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x06\x11pMarkerName',b'\x00\x0C\xC1\x11color'),(b'\x00\x00\x09\x1E\x00\x00\x00\x02VkDebugMarkerObjectNameInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x03\xD4\x11objectType',b'\x00\x00\xEB\x11object',b'\x00\x00\x06\x11pObjectName'),(b'\x00\x00\x09\x1F\x00\x00\x00\x02VkDebugMarkerObjectTagInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x03\xD4\x11objectType',b'\x00\x00\xEB\x11object',b'\x00\x00\xEB\x11tagName',b'\x00\x01\x69\x11tagSize',b'\x00\x00\xA1\x11pTag'),(b'\x00\x00\x09\x20\x00\x00\x00\x02VkDebugReportCallbackCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x0D\x04\x11pfnCallback',b'\x00\x01\x6A\x11pUserData'),(b'\x00\x00\x0C\xD1\x00\x00\x00\x10VkDebugReportCallbackEXT_T',),(b'\x00\x00\x09\x22\x00\x00\x00\x02VkDebugUtilsLabelEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x06\x11pLabelName',b'\x00\x0C\xC1\x11color'),(b'\x00\x00\x09\x24\x00\x00\x00\x02VkDebugUtilsMessengerCallbackDataEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x06\x11pMessageIdName',b'\x00\x03\x03\x11messageIdNumber',b'\x00\x00\x06\x11pMessage',b'\x00\x00\x1F\x11queueLabelCount',b'\x00\x04\x45\x11pQueueLabels',b'\x00\x00\x1F\x11cmdBufLabelCount',b'\x00\x04\x45\x11pCmdBufLabels',b'\x00\x00\x1F\x11objectCount',b'\x00\x00\x6B\x11pObjects'),(b'\x00\x00\x09\x25\x00\x00\x00\x02VkDebugUtilsMessengerCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11messageSeverity',b'\x00\x00\x1F\x11messageType',b'\x00\x0C\xFE\x11pfnUserCallback',b'\x00\x01\x6A\x11pUserData'),(b'\x00\x00\x0C\xD2\x00\x00\x00\x10VkDebugUtilsMessengerEXT_T',),(b'\x00\x00\x09\x26\x00\x00\x00\x02VkDebugUtilsObjectNameInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEA\x11objectType',b'\x00\x00\xEB\x11objectHandle',b'\x00\x00\x06\x11pObjectName'),(b'\x00\x00\x09\x27\x00\x00\x00\x02VkDebugUtilsObjectTagInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEA\x11objectType',b'\x00\x00\xEB\x11objectHandle',b'\x00\x00\xEB\x11tagName',b'\x00\x01\x69\x11tagSize',b'\x00\x00\xA1\x11pTag'),(b'\x00\x00\x09\x28\x00\x00\x00\x02VkDedicatedAllocationBufferCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11dedicatedAllocation'),(b'\x00\x00\x09\x29\x00\x00\x00\x02VkDedicatedAllocationImageCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11dedicatedAllocation'),(b'\x00\x00\x09\x2A\x00\x00\x00\x02VkDedicatedAllocationMemoryAllocateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC8\x11image',b'\x00\x01\x6E\x11buffer'),(b'\x00\x00\x0C\xD3\x00\x00\x00\x10VkDeferredOperationKHR_T',),(b'\x00\x00\x09\x2C\x00\x00\x00\x02VkDependencyInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11dependencyFlags',b'\x00\x00\x1F\x11memoryBarrierCount',b'\x00\x0A\x06\x11pMemoryBarriers',b'\x00\x00\x1F\x11bufferMemoryBarrierCount',b'\x00\x08\xDC\x11pBufferMemoryBarriers',b'\x00\x00\x1F\x11imageMemoryBarrierCount',b'\x00\x09\xD6\x11pImageMemoryBarriers'),(b'\x00\x00\x09\x2F\x00\x00\x00\x02VkDescriptorBufferInfo',b'\x00\x01\x6E\x11buffer',b'\x00\x00\xEB\x11offset',b'\x00\x00\xEB\x11range'),(b'\x00\x00\x09\x31\x00\x00\x00\x02VkDescriptorImageInfo',b'\x00\x07\xA3\x11sampler',b'\x00\x01\xC3\x11imageView',b'\x00\x04\xE8\x11imageLayout'),(b'\x00\x00\x09\x33\x00\x00\x00\x02VkDescriptorPoolCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11maxSets',b'\x00\x00\x1F\x11poolSizeCount',b'\x00\x09\x35\x11pPoolSizes'),(b'\x00\x00\x09\x34\x00\x00\x00\x02VkDescriptorPoolInlineUniformBlockCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11maxInlineUniformBlockBindings'),(b'\x00\x00\x09\x36\x00\x00\x00\x02VkDescriptorPoolSize',b'\x00\x09\x43\x11type',b'\x00\x00\x1F\x11descriptorCount'),(b'\x00\x00\x0C\xD4\x00\x00\x00\x10VkDescriptorPool_T',),(b'\x00\x00\x09\x37\x00\x00\x00\x02VkDescriptorSetAllocateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x9C\x11descriptorPool',b'\x00\x00\x1F\x11descriptorSetCount',b'\x00\x0C\xD5\x11pSetLayouts'),(b'\x00\x00\x09\x38\x00\x00\x00\x02VkDescriptorSetBindingReferenceVALVE',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x07\x1E\x11descriptorSetLayout',b'\x00\x00\x1F\x11binding'),(b'\x00\x00\x09\x3A\x00\x00\x00\x02VkDescriptorSetLayoutBinding',b'\x00\x00\x1F\x11binding',b'\x00\x09\x43\x11descriptorType',b'\x00\x00\x1F\x11descriptorCount',b'\x00\x00\x1F\x11stageFlags',b'\x00\x0C\xF3\x11pImmutableSamplers'),(b'\x00\x00\x09\x3B\x00\x00\x00\x02VkDescriptorSetLayoutBindingFlagsCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11bindingCount',b'\x00\x04\x71\x11pBindingFlags'),(b'\x00\x00\x09\x3D\x00\x00\x00\x02VkDescriptorSetLayoutCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11bindingCount',b'\x00\x09\x39\x11pBindings'),(b'\x00\x00\x09\x3E\x00\x00\x00\x02VkDescriptorSetLayoutHostMappingInfoVALVE',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x01\x69\x11descriptorOffset',b'\x00\x00\x1F\x11descriptorSize'),(b'\x00\x00\x09\x3F\x00\x00\x00\x02VkDescriptorSetLayoutSupport',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11supported'),(b'\x00\x00\x0C\xD6\x00\x00\x00\x10VkDescriptorSetLayout_T',),(b'\x00\x00\x09\x40\x00\x00\x00\x02VkDescriptorSetVariableDescriptorCountAllocateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11descriptorSetCount',b'\x00\x04\x71\x11pDescriptorCounts'),(b'\x00\x00\x09\x41\x00\x00\x00\x02VkDescriptorSetVariableDescriptorCountLayoutSupport',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxVariableDescriptorCount'),(b'\x00\x00\x0C\xD7\x00\x00\x00\x10VkDescriptorSet_T',),(b'\x00\x00\x09\x44\x00\x00\x00\x02VkDescriptorUpdateTemplateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11descriptorUpdateEntryCount',b'\x00\x09\x45\x11pDescriptorUpdateEntries',b'\x00\x09\x47\x11templateType',b'\x00\x07\x1E\x11descriptorSetLayout',b'\x00\x04\x63\x11pipelineBindPoint',b'\x00\x04\x64\x11pipelineLayout',b'\x00\x00\x1F\x11set'),(b'\x00\x00\x09\x46\x00\x00\x00\x02VkDescriptorUpdateTemplateEntry',b'\x00\x00\x1F\x11dstBinding',b'\x00\x00\x1F\x11dstArrayElement',b'\x00\x00\x1F\x11descriptorCount',b'\x00\x09\x43\x11descriptorType',b'\x00\x01\x69\x11offset',b'\x00\x01\x69\x11stride'),(b'\x00\x00\x0C\xD8\x00\x00\x00\x10VkDescriptorUpdateTemplate_T',),(b'\x00\x00\x09\x48\x00\x00\x00\x02VkDeviceBufferMemoryRequirements',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x40\x11pCreateInfo'),(b'\x00\x00\x09\x49\x00\x00\x00\x02VkDeviceCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11queueCreateInfoCount',b'\x00\x09\x61\x11pQueueCreateInfos',b'\x00\x00\x1F\x11enabledLayerCount',b'\x00\x0C\xB8\x11ppEnabledLayerNames',b'\x00\x00\x1F\x11enabledExtensionCount',b'\x00\x0C\xB8\x11ppEnabledExtensionNames',b'\x00\x0A\x6A\x11pEnabledFeatures'),(b'\x00\x00\x09\x4A\x00\x00\x00\x02VkDeviceDeviceMemoryReportCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x0D\x1E\x11pfnUserCallback',b'\x00\x01\x6A\x11pUserData'),(b'\x00\x00\x09\x4B\x00\x00\x00\x02VkDeviceDiagnosticsConfigCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x09\x4D\x00\x00\x00\x02VkDeviceEventInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\x4E\x11deviceEvent'),(b'\x00\x00\x09\x4F\x00\x00\x00\x02VkDeviceGroupBindSparseInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11resourceDeviceIndex',b'\x00\x00\x1F\x11memoryDeviceIndex'),(b'\x00\x00\x09\x50\x00\x00\x00\x02VkDeviceGroupCommandBufferBeginInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11deviceMask'),(b'\x00\x00\x09\x51\x00\x00\x00\x02VkDeviceGroupDeviceCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11physicalDeviceCount',b'\x00\x0C\xE6\x11pPhysicalDevices'),(b'\x00\x00\x09\x52\x00\x00\x00\x02VkDeviceGroupPresentCapabilitiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0D\x07\x11presentMask',b'\x00\x00\x1F\x11modes'),(b'\x00\x00\x09\x53\x00\x00\x00\x02VkDeviceGroupPresentInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11swapchainCount',b'\x00\x04\x71\x11pDeviceMasks',b'\x00\x09\x54\x11mode'),(b'\x00\x00\x09\x55\x00\x00\x00\x02VkDeviceGroupRenderPassBeginInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11deviceMask',b'\x00\x00\x1F\x11deviceRenderAreaCount',b'\x00\x05\xCB\x11pDeviceRenderAreas'),(b'\x00\x00\x09\x56\x00\x00\x00\x02VkDeviceGroupSubmitInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11waitSemaphoreCount',b'\x00\x04\x71\x11pWaitSemaphoreDeviceIndices',b'\x00\x00\x1F\x11commandBufferCount',b'\x00\x04\x71\x11pCommandBufferDeviceMasks',b'\x00\x00\x1F\x11signalSemaphoreCount',b'\x00\x04\x71\x11pSignalSemaphoreDeviceIndices'),(b'\x00\x00\x09\x57\x00\x00\x00\x02VkDeviceGroupSwapchainCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11modes'),(b'\x00\x00\x09\x58\x00\x00\x00\x02VkDeviceImageMemoryRequirements',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xB7\x11pCreateInfo',b'\x00\x09\xC7\x11planeAspect'),(b'\x00\x00\x09\x59\x00\x00\x00\x02VkDeviceMemoryOpaqueCaptureAddressInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6F\x11memory'),(b'\x00\x00\x09\x5A\x00\x00\x00\x02VkDeviceMemoryOverallocationCreateInfoAMD',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0A\x15\x11overallocationBehavior'),(b'\x00\x00\x09\x5B\x00\x00\x00\x02VkDeviceMemoryReportCallbackDataEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x09\x5C\x11type',b'\x00\x00\xEB\x11memoryObjectId',b'\x00\x00\xEB\x11size',b'\x00\x00\xEA\x11objectType',b'\x00\x00\xEB\x11objectHandle',b'\x00\x00\x1F\x11heapIndex'),(b'\x00\x00\x0C\xD9\x00\x00\x00\x10VkDeviceMemory_T',),(b'\x00\x00\x09\x5D\x00\x00\x00\x03VkDeviceOrHostAddressConstKHR',b'\x00\x00\xEB\x11deviceAddress',b'\x00\x00\xA1\x11hostAddress'),(b'\x00\x00\x09\x5E\x00\x00\x00\x03VkDeviceOrHostAddressKHR',b'\x00\x00\xEB\x11deviceAddress',b'\x00\x01\x6A\x11hostAddress'),(b'\x00\x00\x09\x5F\x00\x00\x00\x02VkDevicePrivateDataCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11privateDataSlotRequestCount'),(b'\x00\x00\x09\x62\x00\x00\x00\x02VkDeviceQueueCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11queueFamilyIndex',b'\x00\x00\x1F\x11queueCount',b'\x00\x04\xC6\x11pQueuePriorities'),(b'\x00\x00\x09\x63\x00\x00\x00\x02VkDeviceQueueGlobalPriorityCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0B\x5F\x11globalPriority'),(b'\x00\x00\x09\x64\x00\x00\x00\x02VkDeviceQueueInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11queueFamilyIndex',b'\x00\x00\x1F\x11queueIndex'),(b'\x00\x00\x0C\xDA\x00\x00\x00\x10VkDevice_T',),(b'\x00\x00\x09\x66\x00\x00\x00\x02VkDispatchIndirectCommand',b'\x00\x00\x1F\x11x',b'\x00\x00\x1F\x11y',b'\x00\x00\x1F\x11z'),(b'\x00\x00\x09\x67\x00\x00\x00\x02VkDisplayEventInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\x68\x11displayEvent'),(b'\x00\x00\x0C\xDB\x00\x00\x00\x10VkDisplayKHR_T',),(b'\x00\x00\x09\x69\x00\x00\x00\x02VkDisplayModeCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x09\x6A\x11parameters'),(b'\x00\x00\x0C\xDC\x00\x00\x00\x10VkDisplayModeKHR_T',),(b'\x00\x00\x09\x6A\x00\x00\x00\x02VkDisplayModeParametersKHR',b'\x00\x09\x8D\x11visibleRegion',b'\x00\x00\x1F\x11refreshRate'),(b'\x00\x00\x09\x6B\x00\x00\x00\x02VkDisplayModeProperties2KHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x6C\x11displayModeProperties'),(b'\x00\x00\x09\x6C\x00\x00\x00\x02VkDisplayModePropertiesKHR',b'\x00\x03\x25\x11displayMode',b'\x00\x09\x6A\x11parameters'),(b'\x00\x00\x09\x6D\x00\x00\x00\x02VkDisplayNativeHdrSurfaceCapabilitiesAMD',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11localDimmingSupport'),(b'\x00\x00\x09\x6F\x00\x00\x00\x02VkDisplayPlaneCapabilities2KHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x70\x11capabilities'),(b'\x00\x00\x09\x70\x00\x00\x00\x02VkDisplayPlaneCapabilitiesKHR',b'\x00\x00\x1F\x11supportedAlpha',b'\x00\x0A\x25\x11minSrcPosition',b'\x00\x0A\x25\x11maxSrcPosition',b'\x00\x09\x8D\x11minSrcExtent',b'\x00\x09\x8D\x11maxSrcExtent',b'\x00\x0A\x25\x11minDstPosition',b'\x00\x0A\x25\x11maxDstPosition',b'\x00\x09\x8D\x11minDstExtent',b'\x00\x09\x8D\x11maxDstExtent'),(b'\x00\x00\x09\x71\x00\x00\x00\x02VkDisplayPlaneInfo2KHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x03\x25\x11mode',b'\x00\x00\x1F\x11planeIndex'),(b'\x00\x00\x09\x72\x00\x00\x00\x02VkDisplayPlaneProperties2KHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x73\x11displayPlaneProperties'),(b'\x00\x00\x09\x73\x00\x00\x00\x02VkDisplayPlanePropertiesKHR',b'\x00\x01\xAF\x11currentDisplay',b'\x00\x00\x1F\x11currentStackIndex'),(b'\x00\x00\x09\x74\x00\x00\x00\x02VkDisplayPowerInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\x75\x11powerState'),(b'\x00\x00\x09\x76\x00\x00\x00\x02VkDisplayPresentInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0B\x6C\x11srcRect',b'\x00\x0B\x6C\x11dstRect',b'\x00\x00\x1F\x11persistent'),(b'\x00\x00\x09\x77\x00\x00\x00\x02VkDisplayProperties2KHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x78\x11displayProperties'),(b'\x00\x00\x09\x78\x00\x00\x00\x02VkDisplayPropertiesKHR',b'\x00\x01\xAF\x11display',b'\x00\x00\x06\x11displayName',b'\x00\x09\x8D\x11physicalDimensions',b'\x00\x09\x8D\x11physicalResolution',b'\x00\x00\x1F\x11supportedTransforms',b'\x00\x00\x1F\x11planeReorderPossible',b'\x00\x00\x1F\x11persistentContent'),(b'\x00\x00\x09\x79\x00\x00\x00\x02VkDisplaySurfaceCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x03\x25\x11displayMode',b'\x00\x00\x1F\x11planeIndex',b'\x00\x00\x1F\x11planeStackIndex',b'\x00\x0C\x8B\x11transform',b'\x00\x04\xCA\x11globalAlpha',b'\x00\x09\x6E\x11alphaMode',b'\x00\x09\x8D\x11imageExtent'),(b'\x00\x00\x09\x7A\x00\x00\x00\x02VkDrawIndexedIndirectCommand',b'\x00\x00\x1F\x11indexCount',b'\x00\x00\x1F\x11instanceCount',b'\x00\x00\x1F\x11firstIndex',b'\x00\x03\x03\x11vertexOffset',b'\x00\x00\x1F\x11firstInstance'),(b'\x00\x00\x09\x7B\x00\x00\x00\x02VkDrawIndirectCommand',b'\x00\x00\x1F\x11vertexCount',b'\x00\x00\x1F\x11instanceCount',b'\x00\x00\x1F\x11firstVertex',b'\x00\x00\x1F\x11firstInstance'),(b'\x00\x00\x09\x7C\x00\x00\x00\x02VkDrawMeshTasksIndirectCommandNV',b'\x00\x00\x1F\x11taskCount',b'\x00\x00\x1F\x11firstTask'),(b'\x00\x00\x09\x7F\x00\x00\x00\x02VkDrmFormatModifierProperties2EXT',b'\x00\x00\xEB\x11drmFormatModifier',b'\x00\x00\x1F\x11drmFormatModifierPlaneCount',b'\x00\x00\xEB\x11drmFormatModifierTilingFeatures'),(b'\x00\x00\x09\x81\x00\x00\x00\x02VkDrmFormatModifierPropertiesEXT',b'\x00\x00\xEB\x11drmFormatModifier',b'\x00\x00\x1F\x11drmFormatModifierPlaneCount',b'\x00\x00\x1F\x11drmFormatModifierTilingFeatures'),(b'\x00\x00\x09\x82\x00\x00\x00\x02VkDrmFormatModifierPropertiesList2EXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11drmFormatModifierCount',b'\x00\x09\x7E\x11pDrmFormatModifierProperties'),(b'\x00\x00\x09\x83\x00\x00\x00\x02VkDrmFormatModifierPropertiesListEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11drmFormatModifierCount',b'\x00\x09\x80\x11pDrmFormatModifierProperties'),(b'\x00\x00\x09\x87\x00\x00\x00\x02VkEventCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x0C\xDD\x00\x00\x00\x10VkEvent_T',),(b'\x00\x00\x09\x88\x00\x00\x00\x02VkExportFenceCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11handleTypes'),(b'\x00\x00\x09\x89\x00\x00\x00\x02VkExportMemoryAllocateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11handleTypes'),(b'\x00\x00\x09\x8A\x00\x00\x00\x02VkExportMemoryAllocateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11handleTypes'),(b'\x00\x00\x09\x8B\x00\x00\x00\x02VkExportSemaphoreCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11handleTypes'),(b'\x00\x00\x09\x8C\x00\x00\x00\x02VkExtensionProperties',b'\x00\x0C\xBA\x11extensionName',b'\x00\x00\x1F\x11specVersion'),(b'\x00\x00\x09\x8D\x00\x00\x00\x02VkExtent2D',b'\x00\x00\x1F\x11width',b'\x00\x00\x1F\x11height'),(b'\x00\x00\x09\x8E\x00\x00\x00\x02VkExtent3D',b'\x00\x00\x1F\x11width',b'\x00\x00\x1F\x11height',b'\x00\x00\x1F\x11depth'),(b'\x00\x00\x09\x8F\x00\x00\x00\x02VkExternalBufferProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x9C\x11externalMemoryProperties'),(b'\x00\x00\x09\x92\x00\x00\x00\x02VkExternalFenceProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11exportFromImportedHandleTypes',b'\x00\x00\x1F\x11compatibleHandleTypes',b'\x00\x00\x1F\x11externalFenceFeatures'),(b'\x00\x00\x09\x93\x00\x00\x00\x02VkExternalFormatANDROID',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11externalFormat'),(b'\x00\x00\x09\x94\x00\x00\x00\x02VkExternalImageFormatProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x9C\x11externalMemoryProperties'),(b'\x00\x00\x09\x95\x00\x00\x00\x02VkExternalImageFormatPropertiesNV',b'\x00\x09\xD5\x11imageFormatProperties',b'\x00\x00\x1F\x11externalMemoryFeatures',b'\x00\x00\x1F\x11exportFromImportedHandleTypes',b'\x00\x00\x1F\x11compatibleHandleTypes'),(b'\x00\x00\x09\x96\x00\x00\x00\x02VkExternalMemoryBufferCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11handleTypes'),(b'\x00\x00\x09\x9A\x00\x00\x00\x02VkExternalMemoryImageCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11handleTypes'),(b'\x00\x00\x09\x9B\x00\x00\x00\x02VkExternalMemoryImageCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11handleTypes'),(b'\x00\x00\x09\x9C\x00\x00\x00\x02VkExternalMemoryProperties',b'\x00\x00\x1F\x11externalMemoryFeatures',b'\x00\x00\x1F\x11exportFromImportedHandleTypes',b'\x00\x00\x1F\x11compatibleHandleTypes'),(b'\x00\x00\x09\x9F\x00\x00\x00\x02VkExternalSemaphoreProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11exportFromImportedHandleTypes',b'\x00\x00\x1F\x11compatibleHandleTypes',b'\x00\x00\x1F\x11externalSemaphoreFeatures'),(b'\x00\x00\x09\xA1\x00\x00\x00\x02VkFenceCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x09\xA2\x00\x00\x00\x02VkFenceGetFdInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xBF\x11fence',b'\x00\x09\x91\x11handleType'),(b'\x00\x00\x0C\xDE\x00\x00\x00\x10VkFence_T',),(b'\x00\x00\x09\xA4\x00\x00\x00\x02VkFilterCubicImageViewImageFormatPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11filterCubic',b'\x00\x00\x1F\x11filterCubicMinmax'),(b'\x00\x00\x09\xA9\x00\x00\x00\x02VkFormatProperties',b'\x00\x00\x1F\x11linearTilingFeatures',b'\x00\x00\x1F\x11optimalTilingFeatures',b'\x00\x00\x1F\x11bufferFeatures'),(b'\x00\x00\x09\xA7\x00\x00\x00\x02VkFormatProperties2',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\xA9\x11formatProperties'),(b'\x00\x00\x09\xA8\x00\x00\x00\x02VkFormatProperties3',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11linearTilingFeatures',b'\x00\x00\xEB\x11optimalTilingFeatures',b'\x00\x00\xEB\x11bufferFeatures'),(b'\x00\x00\x09\xAA\x00\x00\x00\x02VkFragmentShadingRateAttachmentInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x08\xB6\x11pFragmentShadingRateAttachment',b'\x00\x09\x8D\x11shadingRateAttachmentTexelSize'),(b'\x00\x00\x09\xB0\x00\x00\x00\x02VkFramebufferAttachmentImageInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11usage',b'\x00\x00\x1F\x11width',b'\x00\x00\x1F\x11height',b'\x00\x00\x1F\x11layerCount',b'\x00\x00\x1F\x11viewFormatCount',b'\x00\x09\xA5\x11pViewFormats'),(b'\x00\x00\x09\xB1\x00\x00\x00\x02VkFramebufferAttachmentsCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11attachmentImageInfoCount',b'\x00\x09\xAF\x11pAttachmentImageInfos'),(b'\x00\x00\x09\xB3\x00\x00\x00\x02VkFramebufferCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x02\x1A\x11renderPass',b'\x00\x00\x1F\x11attachmentCount',b'\x00\x0C\xE0\x11pAttachments',b'\x00\x00\x1F\x11width',b'\x00\x00\x1F\x11height',b'\x00\x00\x1F\x11layers'),(b'\x00\x00\x09\xB4\x00\x00\x00\x02VkFramebufferMixedSamplesCombinationNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x18\x11coverageReductionMode',b'\x00\x08\x0A\x11rasterizationSamples',b'\x00\x00\x1F\x11depthStencilSamples',b'\x00\x00\x1F\x11colorSamples'),(b'\x00\x00\x0C\xDF\x00\x00\x00\x10VkFramebuffer_T',),(b'\x00\x00\x09\xB5\x00\x00\x00\x02VkGeneratedCommandsInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x04\x63\x11pipelineBindPoint',b'\x00\x01\xFB\x11pipeline',b'\x00\x07\x70\x11indirectCommandsLayout',b'\x00\x00\x1F\x11streamCount',b'\x00\x09\xF7\x11pStreams',b'\x00\x00\x1F\x11sequencesCount',b'\x00\x01\x6E\x11preprocessBuffer',b'\x00\x00\xEB\x11preprocessOffset',b'\x00\x00\xEB\x11preprocessSize',b'\x00\x01\x6E\x11sequencesCountBuffer',b'\x00\x00\xEB\x11sequencesCountOffset',b'\x00\x01\x6E\x11sequencesIndexBuffer',b'\x00\x00\xEB\x11sequencesIndexOffset'),(b'\x00\x00\x09\xB6\x00\x00\x00\x02VkGeneratedCommandsMemoryRequirementsInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x04\x63\x11pipelineBindPoint',b'\x00\x01\xFB\x11pipeline',b'\x00\x07\x70\x11indirectCommandsLayout',b'\x00\x00\x1F\x11maxSequencesCount'),(b'\x00\x00\x09\xB7\x00\x00\x00\x02VkGeometryAABBNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6E\x11aabbData',b'\x00\x00\x1F\x11numAABBs',b'\x00\x00\x1F\x11stride',b'\x00\x00\xEB\x11offset'),(b'\x00\x00\x09\xB8\x00\x00\x00\x02VkGeometryDataNV',b'\x00\x09\xBD\x11triangles',b'\x00\x09\xB7\x11aabbs'),(b'\x00\x00\x09\xBC\x00\x00\x00\x02VkGeometryNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\xBE\x11geometryType',b'\x00\x09\xB8\x11geometry',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x09\xBD\x00\x00\x00\x02VkGeometryTrianglesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6E\x11vertexData',b'\x00\x00\xEB\x11vertexOffset',b'\x00\x00\x1F\x11vertexCount',b'\x00\x00\xEB\x11vertexStride',b'\x00\x02\xDA\x11vertexFormat',b'\x00\x01\x6E\x11indexData',b'\x00\x00\xEB\x11indexOffset',b'\x00\x00\x1F\x11indexCount',b'\x00\x04\xF5\x11indexType',b'\x00\x01\x6E\x11transformData',b'\x00\x00\xEB\x11transformOffset'),(b'\x00\x00\x09\xBF\x00\x00\x00\x02VkGraphicsPipelineCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11stageCount',b'\x00\x0B\x31\x11pStages',b'\x00\x0B\x38\x11pVertexInputState',b'\x00\x0B\x1D\x11pInputAssemblyState',b'\x00\x0B\x35\x11pTessellationState',b'\x00\x0B\x3E\x11pViewportState',b'\x00\x0B\x29\x11pRasterizationState',b'\x00\x0B\x23\x11pMultisampleState',b'\x00\x0B\x0F\x11pDepthStencilState',b'\x00\x0B\x01\x11pColorBlendState',b'\x00\x0B\x12\x11pDynamicState',b'\x00\x04\x64\x11layout',b'\x00\x02\x1A\x11renderPass',b'\x00\x00\x1F\x11subpass',b'\x00\x01\xFB\x11basePipelineHandle',b'\x00\x03\x03\x11basePipelineIndex'),(b'\x00\x00\x09\xC0\x00\x00\x00\x02VkGraphicsPipelineLibraryCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x09\xC2\x00\x00\x00\x02VkGraphicsPipelineShaderGroupsCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11groupCount',b'\x00\x09\xC3\x11pGroups',b'\x00\x00\x1F\x11pipelineCount',b'\x00\x0C\xEC\x11pPipelines'),(b'\x00\x00\x09\xC4\x00\x00\x00\x02VkGraphicsShaderGroupCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11stageCount',b'\x00\x0B\x31\x11pStages',b'\x00\x0B\x38\x11pVertexInputState',b'\x00\x0B\x35\x11pTessellationState'),(b'\x00\x00\x09\xC5\x00\x00\x00\x02VkHdrMetadataEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0C\xB5\x11displayPrimaryRed',b'\x00\x0C\xB5\x11displayPrimaryGreen',b'\x00\x0C\xB5\x11displayPrimaryBlue',b'\x00\x0C\xB5\x11whitePoint',b'\x00\x04\xCA\x11maxLuminance',b'\x00\x04\xCA\x11minLuminance',b'\x00\x04\xCA\x11maxContentLightLevel',b'\x00\x04\xCA\x11maxFrameAverageLightLevel'),(b'\x00\x00\x09\xC6\x00\x00\x00\x02VkHeadlessSurfaceCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x09\xCA\x00\x00\x00\x02VkImageBlit',b'\x00\x09\xE1\x11srcSubresource',b'\x00\x0A\x27\x11srcOffsets',b'\x00\x09\xE1\x11dstSubresource',b'\x00\x0A\x27\x11dstOffsets'),(b'\x00\x00\x09\xC9\x00\x00\x00\x02VkImageBlit2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\xE1\x11srcSubresource',b'\x00\x0A\x27\x11srcOffsets',b'\x00\x09\xE1\x11dstSubresource',b'\x00\x0A\x27\x11dstOffsets'),(b'\x00\x00\x09\xCD\x00\x00\x00\x02VkImageCopy',b'\x00\x09\xE1\x11srcSubresource',b'\x00\x0A\x26\x11srcOffset',b'\x00\x09\xE1\x11dstSubresource',b'\x00\x0A\x26\x11dstOffset',b'\x00\x09\x8E\x11extent'),(b'\x00\x00\x09\xCC\x00\x00\x00\x02VkImageCopy2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\xE1\x11srcSubresource',b'\x00\x0A\x26\x11srcOffset',b'\x00\x09\xE1\x11dstSubresource',b'\x00\x0A\x26\x11dstOffset',b'\x00\x09\x8E\x11extent'),(b'\x00\x00\x09\xCF\x00\x00\x00\x02VkImageCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x02\xDB\x11imageType',b'\x00\x02\xDA\x11format',b'\x00\x09\x8E\x11extent',b'\x00\x00\x1F\x11mipLevels',b'\x00\x00\x1F\x11arrayLayers',b'\x00\x08\x0A\x11samples',b'\x00\x02\xDC\x11tiling',b'\x00\x00\x1F\x11usage',b'\x00\x0C\x56\x11sharingMode',b'\x00\x00\x1F\x11queueFamilyIndexCount',b'\x00\x04\x71\x11pQueueFamilyIndices',b'\x00\x04\xE8\x11initialLayout'),(b'\x00\x00\x09\xD0\x00\x00\x00\x02VkImageDrmFormatModifierExplicitCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11drmFormatModifier',b'\x00\x00\x1F\x11drmFormatModifierPlaneCount',b'\x00\x0C\x83\x11pPlaneLayouts'),(b'\x00\x00\x09\xD1\x00\x00\x00\x02VkImageDrmFormatModifierListCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11drmFormatModifierCount',b'\x00\x05\xA7\x11pDrmFormatModifiers'),(b'\x00\x00\x09\xD2\x00\x00\x00\x02VkImageDrmFormatModifierPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11drmFormatModifier'),(b'\x00\x00\x09\xD3\x00\x00\x00\x02VkImageFormatListCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11viewFormatCount',b'\x00\x09\xA5\x11pViewFormats'),(b'\x00\x00\x09\xD5\x00\x00\x00\x02VkImageFormatProperties',b'\x00\x09\x8E\x11maxExtent',b'\x00\x00\x1F\x11maxMipLevels',b'\x00\x00\x1F\x11maxArrayLayers',b'\x00\x00\x1F\x11sampleCounts',b'\x00\x00\xEB\x11maxResourceSize'),(b'\x00\x00\x09\xD4\x00\x00\x00\x02VkImageFormatProperties2',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\xD5\x11imageFormatProperties'),(b'\x00\x00\x09\xD8\x00\x00\x00\x02VkImageMemoryBarrier',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11srcAccessMask',b'\x00\x00\x1F\x11dstAccessMask',b'\x00\x04\xE8\x11oldLayout',b'\x00\x04\xE8\x11newLayout',b'\x00\x00\x1F\x11srcQueueFamilyIndex',b'\x00\x00\x1F\x11dstQueueFamilyIndex',b'\x00\x01\xC8\x11image',b'\x00\x09\xE2\x11subresourceRange'),(b'\x00\x00\x09\xD7\x00\x00\x00\x02VkImageMemoryBarrier2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11srcStageMask',b'\x00\x00\xEB\x11srcAccessMask',b'\x00\x00\xEB\x11dstStageMask',b'\x00\x00\xEB\x11dstAccessMask',b'\x00\x04\xE8\x11oldLayout',b'\x00\x04\xE8\x11newLayout',b'\x00\x00\x1F\x11srcQueueFamilyIndex',b'\x00\x00\x1F\x11dstQueueFamilyIndex',b'\x00\x01\xC8\x11image',b'\x00\x09\xE2\x11subresourceRange'),(b'\x00\x00\x09\xD9\x00\x00\x00\x02VkImageMemoryRequirementsInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC8\x11image'),(b'\x00\x00\x09\xDA\x00\x00\x00\x02VkImagePlaneMemoryRequirementsInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\xC7\x11planeAspect'),(b'\x00\x00\x09\xDD\x00\x00\x00\x02VkImageResolve',b'\x00\x09\xE1\x11srcSubresource',b'\x00\x0A\x26\x11srcOffset',b'\x00\x09\xE1\x11dstSubresource',b'\x00\x0A\x26\x11dstOffset',b'\x00\x09\x8E\x11extent'),(b'\x00\x00\x09\xDC\x00\x00\x00\x02VkImageResolve2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\xE1\x11srcSubresource',b'\x00\x0A\x26\x11srcOffset',b'\x00\x09\xE1\x11dstSubresource',b'\x00\x0A\x26\x11dstOffset',b'\x00\x09\x8E\x11extent'),(b'\x00\x00\x09\xDE\x00\x00\x00\x02VkImageSparseMemoryRequirementsInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC8\x11image'),(b'\x00\x00\x09\xDF\x00\x00\x00\x02VkImageStencilUsageCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11stencilUsage'),(b'\x00\x00\x09\xE0\x00\x00\x00\x02VkImageSubresource',b'\x00\x00\x1F\x11aspectMask',b'\x00\x00\x1F\x11mipLevel',b'\x00\x00\x1F\x11arrayLayer'),(b'\x00\x00\x09\xE1\x00\x00\x00\x02VkImageSubresourceLayers',b'\x00\x00\x1F\x11aspectMask',b'\x00\x00\x1F\x11mipLevel',b'\x00\x00\x1F\x11baseArrayLayer',b'\x00\x00\x1F\x11layerCount'),(b'\x00\x00\x09\xE2\x00\x00\x00\x02VkImageSubresourceRange',b'\x00\x00\x1F\x11aspectMask',b'\x00\x00\x1F\x11baseMipLevel',b'\x00\x00\x1F\x11levelCount',b'\x00\x00\x1F\x11baseArrayLayer',b'\x00\x00\x1F\x11layerCount'),(b'\x00\x00\x09\xE3\x00\x00\x00\x02VkImageSwapchainCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x29\x11swapchain'),(b'\x00\x00\x09\xE5\x00\x00\x00\x02VkImageViewASTCDecodeModeEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\xDA\x11decodeMode'),(b'\x00\x00\x09\xE6\x00\x00\x00\x02VkImageViewAddressPropertiesNVX',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11deviceAddress',b'\x00\x00\xEB\x11size'),(b'\x00\x00\x09\xE8\x00\x00\x00\x02VkImageViewCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x01\xC8\x11image',b'\x00\x09\xEB\x11viewType',b'\x00\x02\xDA\x11format',b'\x00\x09\x04\x11components',b'\x00\x09\xE2\x11subresourceRange'),(b'\x00\x00\x09\xE9\x00\x00\x00\x02VkImageViewHandleInfoNVX',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC3\x11imageView',b'\x00\x09\x43\x11descriptorType',b'\x00\x07\xA3\x11sampler'),(b'\x00\x00\x09\xEA\x00\x00\x00\x02VkImageViewMinLodCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x04\xCA\x11minLod'),(b'\x00\x00\x09\xEC\x00\x00\x00\x02VkImageViewUsageCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11usage'),(b'\x00\x00\x0C\xE1\x00\x00\x00\x10VkImageView_T',),(b'\x00\x00\x0C\xE2\x00\x00\x00\x10VkImage_T',),(b'\x00\x00\x09\xED\x00\x00\x00\x02VkImportAndroidHardwareBufferInfoANDROID',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0C\xC6\x11buffer'),(b'\x00\x00\x09\xEE\x00\x00\x00\x02VkImportFenceFdInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xBF\x11fence',b'\x00\x00\x1F\x11flags',b'\x00\x09\x91\x11handleType',b'\x00\x00\x9B\x11fd'),(b'\x00\x00\x09\xEF\x00\x00\x00\x02VkImportMemoryFdInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x9A\x11handleType',b'\x00\x00\x9B\x11fd'),(b'\x00\x00\x09\xF0\x00\x00\x00\x02VkImportMemoryHostPointerInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x9A\x11handleType',b'\x00\x01\x6A\x11pHostPointer'),(b'\x00\x00\x09\xF1\x00\x00\x00\x02VkImportSemaphoreFdInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x1F\x11semaphore',b'\x00\x00\x1F\x11flags',b'\x00\x09\x9E\x11handleType',b'\x00\x00\x9B\x11fd'),(b'\x00\x00\x09\xF3\x00\x00\x00\x02VkIndirectCommandsLayoutCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x04\x63\x11pipelineBindPoint',b'\x00\x00\x1F\x11tokenCount',b'\x00\x09\xF4\x11pTokens',b'\x00\x00\x1F\x11streamCount',b'\x00\x04\x71\x11pStreamStrides'),(b'\x00\x00\x0C\xE3\x00\x00\x00\x10VkIndirectCommandsLayoutNV_T',),(b'\x00\x00\x09\xF5\x00\x00\x00\x02VkIndirectCommandsLayoutTokenNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\xF9\x11tokenType',b'\x00\x00\x1F\x11stream',b'\x00\x00\x1F\x11offset',b'\x00\x00\x1F\x11vertexBindingUnit',b'\x00\x00\x1F\x11vertexDynamicStride',b'\x00\x04\x64\x11pushconstantPipelineLayout',b'\x00\x00\x1F\x11pushconstantShaderStageFlags',b'\x00\x00\x1F\x11pushconstantOffset',b'\x00\x00\x1F\x11pushconstantSize',b'\x00\x00\x1F\x11indirectStateFlags',b'\x00\x00\x1F\x11indexTypeCount',b'\x00\x09\xF2\x11pIndexTypes',b'\x00\x04\x71\x11pIndexTypeValues'),(b'\x00\x00\x09\xF8\x00\x00\x00\x02VkIndirectCommandsStreamNV',b'\x00\x01\x6E\x11buffer',b'\x00\x00\xEB\x11offset'),(b'\x00\x00\x09\xFB\x00\x00\x00\x02VkInitializePerformanceApiInfoINTEL',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6A\x11pUserData'),(b'\x00\x00\x09\xFD\x00\x00\x00\x02VkInputAttachmentAspectReference',b'\x00\x00\x1F\x11subpass',b'\x00\x00\x1F\x11inputAttachmentIndex',b'\x00\x00\x1F\x11aspectMask'),(b'\x00\x00\x09\xFF\x00\x00\x00\x02VkInstanceCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x08\xAC\x11pApplicationInfo',b'\x00\x00\x1F\x11enabledLayerCount',b'\x00\x0C\xB8\x11ppEnabledLayerNames',b'\x00\x00\x1F\x11enabledExtensionCount',b'\x00\x0C\xB8\x11ppEnabledExtensionNames'),(b'\x00\x00\x0C\xE4\x00\x00\x00\x10VkInstance_T',),(b'\x00\x00\x0A\x00\x00\x00\x00\x02VkLayerProperties',b'\x00\x0C\xBA\x11layerName',b'\x00\x00\x1F\x11specVersion',b'\x00\x00\x1F\x11implementationVersion',b'\x00\x0C\xBA\x11description'),(b'\x00\x00\x0A\x02\x00\x00\x00\x02VkMappedMemoryRange',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6F\x11memory',b'\x00\x00\xEB\x11offset',b'\x00\x00\xEB\x11size'),(b'\x00\x00\x0A\x04\x00\x00\x00\x02VkMemoryAllocateFlagsInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11deviceMask'),(b'\x00\x00\x0A\x05\x00\x00\x00\x02VkMemoryAllocateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11allocationSize',b'\x00\x00\x1F\x11memoryTypeIndex'),(b'\x00\x00\x0A\x08\x00\x00\x00\x02VkMemoryBarrier',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11srcAccessMask',b'\x00\x00\x1F\x11dstAccessMask'),(b'\x00\x00\x0A\x07\x00\x00\x00\x02VkMemoryBarrier2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11srcStageMask',b'\x00\x00\xEB\x11srcAccessMask',b'\x00\x00\xEB\x11dstStageMask',b'\x00\x00\xEB\x11dstAccessMask'),(b'\x00\x00\x0A\x09\x00\x00\x00\x02VkMemoryDedicatedAllocateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC8\x11image',b'\x00\x01\x6E\x11buffer'),(b'\x00\x00\x0A\x0A\x00\x00\x00\x02VkMemoryDedicatedRequirements',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11prefersDedicatedAllocation',b'\x00\x00\x1F\x11requiresDedicatedAllocation'),(b'\x00\x00\x0A\x0B\x00\x00\x00\x02VkMemoryFdPropertiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11memoryTypeBits'),(b'\x00\x00\x0A\x0C\x00\x00\x00\x02VkMemoryGetAndroidHardwareBufferInfoANDROID',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6F\x11memory'),(b'\x00\x00\x0A\x0D\x00\x00\x00\x02VkMemoryGetFdInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6F\x11memory',b'\x00\x00\x9A\x11handleType'),(b'\x00\x00\x0A\x0E\x00\x00\x00\x02VkMemoryGetRemoteAddressInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\x6F\x11memory',b'\x00\x00\x9A\x11handleType'),(b'\x00\x00\x0A\x0F\x00\x00\x00\x02VkMemoryHeap',b'\x00\x00\xEB\x11size',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x0A\x13\x00\x00\x00\x02VkMemoryHostPointerPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11memoryTypeBits'),(b'\x00\x00\x0A\x14\x00\x00\x00\x02VkMemoryOpaqueCaptureAddressAllocateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11opaqueCaptureAddress'),(b'\x00\x00\x0A\x16\x00\x00\x00\x02VkMemoryPriorityAllocateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x04\xCA\x11priority'),(b'\x00\x00\x0A\x19\x00\x00\x00\x02VkMemoryRequirements',b'\x00\x00\xEB\x11size',b'\x00\x00\xEB\x11alignment',b'\x00\x00\x1F\x11memoryTypeBits'),(b'\x00\x00\x0A\x18\x00\x00\x00\x02VkMemoryRequirements2',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0A\x19\x11memoryRequirements'),(b'\x00\x00\x0A\x1A\x00\x00\x00\x02VkMemoryType',b'\x00\x00\x1F\x11propertyFlags',b'\x00\x00\x1F\x11heapIndex'),(b'\x00\x00\x0A\x1D\x00\x00\x00\x02VkMultiDrawIndexedInfoEXT',b'\x00\x00\x1F\x11firstIndex',b'\x00\x00\x1F\x11indexCount',b'\x00\x03\x03\x11vertexOffset'),(b'\x00\x00\x0A\x1E\x00\x00\x00\x02VkMultiDrawInfoEXT',b'\x00\x00\x1F\x11firstVertex',b'\x00\x00\x1F\x11vertexCount'),(b'\x00\x00\x0A\x1F\x00\x00\x00\x02VkMultisamplePropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x8D\x11maxSampleLocationGridSize'),(b'\x00\x00\x0A\x20\x00\x00\x00\x02VkMultiviewPerViewAttributesInfoNVX',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11perViewAttributes',b'\x00\x00\x1F\x11perViewAttributesPositionXOnly'),(b'\x00\x00\x0A\x21\x00\x00\x00\x02VkMutableDescriptorTypeCreateInfoVALVE',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11mutableDescriptorTypeListCount',b'\x00\x0A\x22\x11pMutableDescriptorTypeLists'),(b'\x00\x00\x0A\x23\x00\x00\x00\x02VkMutableDescriptorTypeListVALVE',b'\x00\x00\x1F\x11descriptorTypeCount',b'\x00\x09\x42\x11pDescriptorTypes'),(b'\x00\x00\x0A\x25\x00\x00\x00\x02VkOffset2D',b'\x00\x03\x03\x11x',b'\x00\x03\x03\x11y'),(b'\x00\x00\x0A\x26\x00\x00\x00\x02VkOffset3D',b'\x00\x03\x03\x11x',b'\x00\x03\x03\x11y',b'\x00\x03\x03\x11z'),(b'\x00\x00\x0A\x29\x00\x00\x00\x02VkPastPresentationTimingGOOGLE',b'\x00\x00\x1F\x11presentID',b'\x00\x00\xEB\x11desiredPresentTime',b'\x00\x00\xEB\x11actualPresentTime',b'\x00\x00\xEB\x11earliestPresentTime',b'\x00\x00\xEB\x11presentMargin'),(b'\x00\x00\x0A\x2B\x00\x00\x00\x02VkPerformanceConfigurationAcquireInfoINTEL',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0A\x2C\x11type'),(b'\x00\x00\x0C\xE5\x00\x00\x00\x10VkPerformanceConfigurationINTEL_T',),(b'\x00\x00\x0A\x2E\x00\x00\x00\x02VkPerformanceCounterDescriptionKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x0C\xBA\x11name',b'\x00\x0C\xBA\x11category',b'\x00\x0C\xBA\x11description'),(b'\x00\x00\x0A\x2F\x00\x00\x00\x02VkPerformanceCounterKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0A\x33\x11unit',b'\x00\x0A\x31\x11scope',b'\x00\x0A\x32\x11storage',b'\x00\x0D\x15\x11uuid'),(b'\x00\x00\x0A\x30\x00\x00\x00\x03VkPerformanceCounterResultKHR',b'\x00\x03\x03\x11int32',b'\x00\x0C\xC5\x11int64',b'\x00\x00\x1F\x11uint32',b'\x00\x00\xEB\x11uint64',b'\x00\x04\xCA\x11float32',b'\x00\x0C\xBC\x11float64'),(b'\x00\x00\x0A\x34\x00\x00\x00\x02VkPerformanceMarkerInfoINTEL',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11marker'),(b'\x00\x00\x0A\x35\x00\x00\x00\x02VkPerformanceOverrideInfoINTEL',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0A\x36\x11type',b'\x00\x00\x1F\x11enable',b'\x00\x00\xEB\x11parameter'),(b'\x00\x00\x0A\x37\x00\x00\x00\x02VkPerformanceQuerySubmitInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11counterPassIndex'),(b'\x00\x00\x0A\x38\x00\x00\x00\x02VkPerformanceStreamMarkerInfoINTEL',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11marker'),(b'\x00\x00\x0A\x39\x00\x00\x00\x03VkPerformanceValueDataINTEL',b'\x00\x00\x1F\x11value32',b'\x00\x00\xEB\x11value64',b'\x00\x04\xCA\x11valueFloat',b'\x00\x00\x1F\x11valueBool',b'\x00\x00\x06\x11valueString'),(b'\x00\x00\x0A\x3A\x00\x00\x00\x02VkPerformanceValueINTEL',b'\x00\x0A\x3B\x11type',b'\x00\x0A\x39\x11data'),(b'\x00\x00\x0A\x3C\x00\x00\x00\x02VkPhysicalDevice16BitStorageFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11storageBuffer16BitAccess',b'\x00\x00\x1F\x11uniformAndStorageBuffer16BitAccess',b'\x00\x00\x1F\x11storagePushConstant16',b'\x00\x00\x1F\x11storageInputOutput16'),(b'\x00\x00\x0A\x3D\x00\x00\x00\x02VkPhysicalDevice4444FormatsFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11formatA4R4G4B4',b'\x00\x00\x1F\x11formatA4B4G4R4'),(b'\x00\x00\x0A\x3E\x00\x00\x00\x02VkPhysicalDevice8BitStorageFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11storageBuffer8BitAccess',b'\x00\x00\x1F\x11uniformAndStorageBuffer8BitAccess',b'\x00\x00\x1F\x11storagePushConstant8'),(b'\x00\x00\x0A\x3F\x00\x00\x00\x02VkPhysicalDeviceASTCDecodeFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11decodeModeSharedExponent'),(b'\x00\x00\x0A\x40\x00\x00\x00\x02VkPhysicalDeviceAccelerationStructureFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11accelerationStructure',b'\x00\x00\x1F\x11accelerationStructureCaptureReplay',b'\x00\x00\x1F\x11accelerationStructureIndirectBuild',b'\x00\x00\x1F\x11accelerationStructureHostCommands',b'\x00\x00\x1F\x11descriptorBindingAccelerationStructureUpdateAfterBind'),(b'\x00\x00\x0A\x41\x00\x00\x00\x02VkPhysicalDeviceAccelerationStructurePropertiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11maxGeometryCount',b'\x00\x00\xEB\x11maxInstanceCount',b'\x00\x00\xEB\x11maxPrimitiveCount',b'\x00\x00\x1F\x11maxPerStageDescriptorAccelerationStructures',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindAccelerationStructures',b'\x00\x00\x1F\x11maxDescriptorSetAccelerationStructures',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindAccelerationStructures',b'\x00\x00\x1F\x11minAccelerationStructureScratchOffsetAlignment'),(b'\x00\x00\x0A\x42\x00\x00\x00\x02VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11advancedBlendCoherentOperations'),(b'\x00\x00\x0A\x43\x00\x00\x00\x02VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11advancedBlendMaxColorAttachments',b'\x00\x00\x1F\x11advancedBlendIndependentBlend',b'\x00\x00\x1F\x11advancedBlendNonPremultipliedSrcColor',b'\x00\x00\x1F\x11advancedBlendNonPremultipliedDstColor',b'\x00\x00\x1F\x11advancedBlendCorrelatedOverlap',b'\x00\x00\x1F\x11advancedBlendAllOperations'),(b'\x00\x00\x0A\x44\x00\x00\x00\x02VkPhysicalDeviceBorderColorSwizzleFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11borderColorSwizzle',b'\x00\x00\x1F\x11borderColorSwizzleFromImage'),(b'\x00\x00\x0A\x45\x00\x00\x00\x02VkPhysicalDeviceBufferDeviceAddressFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11bufferDeviceAddress',b'\x00\x00\x1F\x11bufferDeviceAddressCaptureReplay',b'\x00\x00\x1F\x11bufferDeviceAddressMultiDevice'),(b'\x00\x00\x0A\x46\x00\x00\x00\x02VkPhysicalDeviceBufferDeviceAddressFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11bufferDeviceAddress',b'\x00\x00\x1F\x11bufferDeviceAddressCaptureReplay',b'\x00\x00\x1F\x11bufferDeviceAddressMultiDevice'),(b'\x00\x00\x0A\x47\x00\x00\x00\x02VkPhysicalDeviceCoherentMemoryFeaturesAMD',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11deviceCoherentMemory'),(b'\x00\x00\x0A\x48\x00\x00\x00\x02VkPhysicalDeviceColorWriteEnableFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11colorWriteEnable'),(b'\x00\x00\x0A\x49\x00\x00\x00\x02VkPhysicalDeviceComputeShaderDerivativesFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11computeDerivativeGroupQuads',b'\x00\x00\x1F\x11computeDerivativeGroupLinear'),(b'\x00\x00\x0A\x4A\x00\x00\x00\x02VkPhysicalDeviceConditionalRenderingFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11conditionalRendering',b'\x00\x00\x1F\x11inheritedConditionalRendering'),(b'\x00\x00\x0A\x4B\x00\x00\x00\x02VkPhysicalDeviceConservativeRasterizationPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x04\xCA\x11primitiveOverestimationSize',b'\x00\x04\xCA\x11maxExtraPrimitiveOverestimationSize',b'\x00\x04\xCA\x11extraPrimitiveOverestimationSizeGranularity',b'\x00\x00\x1F\x11primitiveUnderestimation',b'\x00\x00\x1F\x11conservativePointAndLineRasterization',b'\x00\x00\x1F\x11degenerateTrianglesRasterized',b'\x00\x00\x1F\x11degenerateLinesRasterized',b'\x00\x00\x1F\x11fullyCoveredFragmentShaderInputVariable',b'\x00\x00\x1F\x11conservativeRasterizationPostDepthCoverage'),(b'\x00\x00\x0A\x4C\x00\x00\x00\x02VkPhysicalDeviceCooperativeMatrixFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11cooperativeMatrix',b'\x00\x00\x1F\x11cooperativeMatrixRobustBufferAccess'),(b'\x00\x00\x0A\x4D\x00\x00\x00\x02VkPhysicalDeviceCooperativeMatrixPropertiesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11cooperativeMatrixSupportedStages'),(b'\x00\x00\x0A\x4E\x00\x00\x00\x02VkPhysicalDeviceCornerSampledImageFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11cornerSampledImage'),(b'\x00\x00\x0A\x4F\x00\x00\x00\x02VkPhysicalDeviceCoverageReductionModeFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11coverageReductionMode'),(b'\x00\x00\x0A\x50\x00\x00\x00\x02VkPhysicalDeviceCustomBorderColorFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11customBorderColors',b'\x00\x00\x1F\x11customBorderColorWithoutFormat'),(b'\x00\x00\x0A\x51\x00\x00\x00\x02VkPhysicalDeviceCustomBorderColorPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxCustomBorderColorSamplers'),(b'\x00\x00\x0A\x52\x00\x00\x00\x02VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11dedicatedAllocationImageAliasing'),(b'\x00\x00\x0A\x53\x00\x00\x00\x02VkPhysicalDeviceDepthClipControlFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11depthClipControl'),(b'\x00\x00\x0A\x54\x00\x00\x00\x02VkPhysicalDeviceDepthClipEnableFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11depthClipEnable'),(b'\x00\x00\x0A\x55\x00\x00\x00\x02VkPhysicalDeviceDepthStencilResolveProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11supportedDepthResolveModes',b'\x00\x00\x1F\x11supportedStencilResolveModes',b'\x00\x00\x1F\x11independentResolveNone',b'\x00\x00\x1F\x11independentResolve'),(b'\x00\x00\x0A\x56\x00\x00\x00\x02VkPhysicalDeviceDescriptorIndexingFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderInputAttachmentArrayDynamicIndexing',b'\x00\x00\x1F\x11shaderUniformTexelBufferArrayDynamicIndexing',b'\x00\x00\x1F\x11shaderStorageTexelBufferArrayDynamicIndexing',b'\x00\x00\x1F\x11shaderUniformBufferArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderSampledImageArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderStorageBufferArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderStorageImageArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderInputAttachmentArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderUniformTexelBufferArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderStorageTexelBufferArrayNonUniformIndexing',b'\x00\x00\x1F\x11descriptorBindingUniformBufferUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingSampledImageUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingStorageImageUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingStorageBufferUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingUniformTexelBufferUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingStorageTexelBufferUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingUpdateUnusedWhilePending',b'\x00\x00\x1F\x11descriptorBindingPartiallyBound',b'\x00\x00\x1F\x11descriptorBindingVariableDescriptorCount',b'\x00\x00\x1F\x11runtimeDescriptorArray'),(b'\x00\x00\x0A\x57\x00\x00\x00\x02VkPhysicalDeviceDescriptorIndexingProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxUpdateAfterBindDescriptorsInAllPools',b'\x00\x00\x1F\x11shaderUniformBufferArrayNonUniformIndexingNative',b'\x00\x00\x1F\x11shaderSampledImageArrayNonUniformIndexingNative',b'\x00\x00\x1F\x11shaderStorageBufferArrayNonUniformIndexingNative',b'\x00\x00\x1F\x11shaderStorageImageArrayNonUniformIndexingNative',b'\x00\x00\x1F\x11shaderInputAttachmentArrayNonUniformIndexingNative',b'\x00\x00\x1F\x11robustBufferAccessUpdateAfterBind',b'\x00\x00\x1F\x11quadDivergentImplicitLod',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindSamplers',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindUniformBuffers',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindStorageBuffers',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindSampledImages',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindStorageImages',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindInputAttachments',b'\x00\x00\x1F\x11maxPerStageUpdateAfterBindResources',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindSamplers',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindUniformBuffers',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindUniformBuffersDynamic',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindStorageBuffers',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindStorageBuffersDynamic',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindSampledImages',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindStorageImages',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindInputAttachments'),(b'\x00\x00\x0A\x58\x00\x00\x00\x02VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11descriptorSetHostMapping'),(b'\x00\x00\x0A\x59\x00\x00\x00\x02VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11deviceGeneratedCommands'),(b'\x00\x00\x0A\x5A\x00\x00\x00\x02VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxGraphicsShaderGroupCount',b'\x00\x00\x1F\x11maxIndirectSequenceCount',b'\x00\x00\x1F\x11maxIndirectCommandsTokenCount',b'\x00\x00\x1F\x11maxIndirectCommandsStreamCount',b'\x00\x00\x1F\x11maxIndirectCommandsTokenOffset',b'\x00\x00\x1F\x11maxIndirectCommandsStreamStride',b'\x00\x00\x1F\x11minSequencesCountBufferOffsetAlignment',b'\x00\x00\x1F\x11minSequencesIndexBufferOffsetAlignment',b'\x00\x00\x1F\x11minIndirectCommandsBufferOffsetAlignment'),(b'\x00\x00\x0A\x5B\x00\x00\x00\x02VkPhysicalDeviceDeviceMemoryReportFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11deviceMemoryReport'),(b'\x00\x00\x0A\x5C\x00\x00\x00\x02VkPhysicalDeviceDiagnosticsConfigFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11diagnosticsConfig'),(b'\x00\x00\x0A\x5D\x00\x00\x00\x02VkPhysicalDeviceDiscardRectanglePropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxDiscardRectangles'),(b'\x00\x00\x0A\x5E\x00\x00\x00\x02VkPhysicalDeviceDriverProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x7D\x11driverID',b'\x00\x0C\xBA\x11driverName',b'\x00\x0C\xBA\x11driverInfo',b'\x00\x09\x0B\x11conformanceVersion'),(b'\x00\x00\x0A\x5F\x00\x00\x00\x02VkPhysicalDeviceDrmPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11hasPrimary',b'\x00\x00\x1F\x11hasRender',b'\x00\x0C\xC5\x11primaryMajor',b'\x00\x0C\xC5\x11primaryMinor',b'\x00\x0C\xC5\x11renderMajor',b'\x00\x0C\xC5\x11renderMinor'),(b'\x00\x00\x0A\x60\x00\x00\x00\x02VkPhysicalDeviceDynamicRenderingFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11dynamicRendering'),(b'\x00\x00\x0A\x61\x00\x00\x00\x02VkPhysicalDeviceExclusiveScissorFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11exclusiveScissor'),(b'\x00\x00\x0A\x62\x00\x00\x00\x02VkPhysicalDeviceExtendedDynamicState2FeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11extendedDynamicState2',b'\x00\x00\x1F\x11extendedDynamicState2LogicOp',b'\x00\x00\x1F\x11extendedDynamicState2PatchControlPoints'),(b'\x00\x00\x0A\x63\x00\x00\x00\x02VkPhysicalDeviceExtendedDynamicStateFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11extendedDynamicState'),(b'\x00\x00\x0A\x64\x00\x00\x00\x02VkPhysicalDeviceExternalBufferInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11usage',b'\x00\x00\x9A\x11handleType'),(b'\x00\x00\x0A\x65\x00\x00\x00\x02VkPhysicalDeviceExternalFenceInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\x91\x11handleType'),(b'\x00\x00\x0A\x66\x00\x00\x00\x02VkPhysicalDeviceExternalImageFormatInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x9A\x11handleType'),(b'\x00\x00\x0A\x67\x00\x00\x00\x02VkPhysicalDeviceExternalMemoryHostPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11minImportedHostPointerAlignment'),(b'\x00\x00\x0A\x68\x00\x00\x00\x02VkPhysicalDeviceExternalMemoryRDMAFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11externalMemoryRDMA'),(b'\x00\x00\x0A\x69\x00\x00\x00\x02VkPhysicalDeviceExternalSemaphoreInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\x9E\x11handleType'),(b'\x00\x00\x0A\x6C\x00\x00\x00\x02VkPhysicalDeviceFeatures',b'\x00\x00\x1F\x11robustBufferAccess',b'\x00\x00\x1F\x11fullDrawIndexUint32',b'\x00\x00\x1F\x11imageCubeArray',b'\x00\x00\x1F\x11independentBlend',b'\x00\x00\x1F\x11geometryShader',b'\x00\x00\x1F\x11tessellationShader',b'\x00\x00\x1F\x11sampleRateShading',b'\x00\x00\x1F\x11dualSrcBlend',b'\x00\x00\x1F\x11logicOp',b'\x00\x00\x1F\x11multiDrawIndirect',b'\x00\x00\x1F\x11drawIndirectFirstInstance',b'\x00\x00\x1F\x11depthClamp',b'\x00\x00\x1F\x11depthBiasClamp',b'\x00\x00\x1F\x11fillModeNonSolid',b'\x00\x00\x1F\x11depthBounds',b'\x00\x00\x1F\x11wideLines',b'\x00\x00\x1F\x11largePoints',b'\x00\x00\x1F\x11alphaToOne',b'\x00\x00\x1F\x11multiViewport',b'\x00\x00\x1F\x11samplerAnisotropy',b'\x00\x00\x1F\x11textureCompressionETC2',b'\x00\x00\x1F\x11textureCompressionASTC_LDR',b'\x00\x00\x1F\x11textureCompressionBC',b'\x00\x00\x1F\x11occlusionQueryPrecise',b'\x00\x00\x1F\x11pipelineStatisticsQuery',b'\x00\x00\x1F\x11vertexPipelineStoresAndAtomics',b'\x00\x00\x1F\x11fragmentStoresAndAtomics',b'\x00\x00\x1F\x11shaderTessellationAndGeometryPointSize',b'\x00\x00\x1F\x11shaderImageGatherExtended',b'\x00\x00\x1F\x11shaderStorageImageExtendedFormats',b'\x00\x00\x1F\x11shaderStorageImageMultisample',b'\x00\x00\x1F\x11shaderStorageImageReadWithoutFormat',b'\x00\x00\x1F\x11shaderStorageImageWriteWithoutFormat',b'\x00\x00\x1F\x11shaderUniformBufferArrayDynamicIndexing',b'\x00\x00\x1F\x11shaderSampledImageArrayDynamicIndexing',b'\x00\x00\x1F\x11shaderStorageBufferArrayDynamicIndexing',b'\x00\x00\x1F\x11shaderStorageImageArrayDynamicIndexing',b'\x00\x00\x1F\x11shaderClipDistance',b'\x00\x00\x1F\x11shaderCullDistance',b'\x00\x00\x1F\x11shaderFloat64',b'\x00\x00\x1F\x11shaderInt64',b'\x00\x00\x1F\x11shaderInt16',b'\x00\x00\x1F\x11shaderResourceResidency',b'\x00\x00\x1F\x11shaderResourceMinLod',b'\x00\x00\x1F\x11sparseBinding',b'\x00\x00\x1F\x11sparseResidencyBuffer',b'\x00\x00\x1F\x11sparseResidencyImage2D',b'\x00\x00\x1F\x11sparseResidencyImage3D',b'\x00\x00\x1F\x11sparseResidency2Samples',b'\x00\x00\x1F\x11sparseResidency4Samples',b'\x00\x00\x1F\x11sparseResidency8Samples',b'\x00\x00\x1F\x11sparseResidency16Samples',b'\x00\x00\x1F\x11sparseResidencyAliased',b'\x00\x00\x1F\x11variableMultisampleRate',b'\x00\x00\x1F\x11inheritedQueries'),(b'\x00\x00\x0A\x6B\x00\x00\x00\x02VkPhysicalDeviceFeatures2',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0A\x6C\x11features'),(b'\x00\x00\x0A\x6D\x00\x00\x00\x02VkPhysicalDeviceFloatControlsProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0C\x4D\x11denormBehaviorIndependence',b'\x00\x0C\x4D\x11roundingModeIndependence',b'\x00\x00\x1F\x11shaderSignedZeroInfNanPreserveFloat16',b'\x00\x00\x1F\x11shaderSignedZeroInfNanPreserveFloat32',b'\x00\x00\x1F\x11shaderSignedZeroInfNanPreserveFloat64',b'\x00\x00\x1F\x11shaderDenormPreserveFloat16',b'\x00\x00\x1F\x11shaderDenormPreserveFloat32',b'\x00\x00\x1F\x11shaderDenormPreserveFloat64',b'\x00\x00\x1F\x11shaderDenormFlushToZeroFloat16',b'\x00\x00\x1F\x11shaderDenormFlushToZeroFloat32',b'\x00\x00\x1F\x11shaderDenormFlushToZeroFloat64',b'\x00\x00\x1F\x11shaderRoundingModeRTEFloat16',b'\x00\x00\x1F\x11shaderRoundingModeRTEFloat32',b'\x00\x00\x1F\x11shaderRoundingModeRTEFloat64',b'\x00\x00\x1F\x11shaderRoundingModeRTZFloat16',b'\x00\x00\x1F\x11shaderRoundingModeRTZFloat32',b'\x00\x00\x1F\x11shaderRoundingModeRTZFloat64'),(b'\x00\x00\x0A\x6E\x00\x00\x00\x02VkPhysicalDeviceFragmentDensityMap2FeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11fragmentDensityMapDeferred'),(b'\x00\x00\x0A\x6F\x00\x00\x00\x02VkPhysicalDeviceFragmentDensityMap2PropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11subsampledLoads',b'\x00\x00\x1F\x11subsampledCoarseReconstructionEarlyAccess',b'\x00\x00\x1F\x11maxSubsampledArrayLayers',b'\x00\x00\x1F\x11maxDescriptorSetSubsampledSamplers'),(b'\x00\x00\x0A\x70\x00\x00\x00\x02VkPhysicalDeviceFragmentDensityMapFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11fragmentDensityMap',b'\x00\x00\x1F\x11fragmentDensityMapDynamic',b'\x00\x00\x1F\x11fragmentDensityMapNonSubsampledImages'),(b'\x00\x00\x0A\x71\x00\x00\x00\x02VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11fragmentDensityMapOffset'),(b'\x00\x00\x0A\x72\x00\x00\x00\x02VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x8D\x11fragmentDensityOffsetGranularity'),(b'\x00\x00\x0A\x73\x00\x00\x00\x02VkPhysicalDeviceFragmentDensityMapPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x8D\x11minFragmentDensityTexelSize',b'\x00\x09\x8D\x11maxFragmentDensityTexelSize',b'\x00\x00\x1F\x11fragmentDensityInvocations'),(b'\x00\x00\x0A\x74\x00\x00\x00\x02VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11fragmentShaderBarycentric'),(b'\x00\x00\x0A\x75\x00\x00\x00\x02VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11fragmentShaderSampleInterlock',b'\x00\x00\x1F\x11fragmentShaderPixelInterlock',b'\x00\x00\x1F\x11fragmentShaderShadingRateInterlock'),(b'\x00\x00\x0A\x76\x00\x00\x00\x02VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11fragmentShadingRateEnums',b'\x00\x00\x1F\x11supersampleFragmentShadingRates',b'\x00\x00\x1F\x11noInvocationFragmentShadingRates'),(b'\x00\x00\x0A\x77\x00\x00\x00\x02VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x08\x0A\x11maxFragmentShadingRateInvocationCount'),(b'\x00\x00\x0A\x78\x00\x00\x00\x02VkPhysicalDeviceFragmentShadingRateFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11pipelineFragmentShadingRate',b'\x00\x00\x1F\x11primitiveFragmentShadingRate',b'\x00\x00\x1F\x11attachmentFragmentShadingRate'),(b'\x00\x00\x0A\x79\x00\x00\x00\x02VkPhysicalDeviceFragmentShadingRateKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11sampleCounts',b'\x00\x09\x8D\x11fragmentSize'),(b'\x00\x00\x0A\x7A\x00\x00\x00\x02VkPhysicalDeviceFragmentShadingRatePropertiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x8D\x11minFragmentShadingRateAttachmentTexelSize',b'\x00\x09\x8D\x11maxFragmentShadingRateAttachmentTexelSize',b'\x00\x00\x1F\x11maxFragmentShadingRateAttachmentTexelSizeAspectRatio',b'\x00\x00\x1F\x11primitiveFragmentShadingRateWithMultipleViewports',b'\x00\x00\x1F\x11layeredShadingRateAttachments',b'\x00\x00\x1F\x11fragmentShadingRateNonTrivialCombinerOps',b'\x00\x09\x8D\x11maxFragmentSize',b'\x00\x00\x1F\x11maxFragmentSizeAspectRatio',b'\x00\x00\x1F\x11maxFragmentShadingRateCoverageSamples',b'\x00\x08\x0A\x11maxFragmentShadingRateRasterizationSamples',b'\x00\x00\x1F\x11fragmentShadingRateWithShaderDepthStencilWrites',b'\x00\x00\x1F\x11fragmentShadingRateWithSampleMask',b'\x00\x00\x1F\x11fragmentShadingRateWithShaderSampleMask',b'\x00\x00\x1F\x11fragmentShadingRateWithConservativeRasterization',b'\x00\x00\x1F\x11fragmentShadingRateWithFragmentShaderInterlock',b'\x00\x00\x1F\x11fragmentShadingRateWithCustomSampleLocations',b'\x00\x00\x1F\x11fragmentShadingRateStrictMultiplyCombiner'),(b'\x00\x00\x0A\x7B\x00\x00\x00\x02VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11globalPriorityQuery'),(b'\x00\x00\x0A\x7C\x00\x00\x00\x02VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11graphicsPipelineLibrary'),(b'\x00\x00\x0A\x7D\x00\x00\x00\x02VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11graphicsPipelineLibraryFastLinking',b'\x00\x00\x1F\x11graphicsPipelineLibraryIndependentInterpolationDecoration'),(b'\x00\x00\x0A\x7E\x00\x00\x00\x02VkPhysicalDeviceGroupProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11physicalDeviceCount',b'\x00\x0C\xE7\x11physicalDevices',b'\x00\x00\x1F\x11subsetAllocation'),(b'\x00\x00\x0A\x7F\x00\x00\x00\x02VkPhysicalDeviceHostQueryResetFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11hostQueryReset'),(b'\x00\x00\x0A\x80\x00\x00\x00\x02VkPhysicalDeviceIDProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0D\x15\x11deviceUUID',b'\x00\x0D\x15\x11driverUUID',b'\x00\x0D\x17\x11deviceLUID',b'\x00\x00\x1F\x11deviceNodeMask',b'\x00\x00\x1F\x11deviceLUIDValid'),(b'\x00\x00\x0A\x81\x00\x00\x00\x02VkPhysicalDeviceImage2DViewOf3DFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11image2DViewOf3D',b'\x00\x00\x1F\x11sampler2DViewOf3D'),(b'\x00\x00\x0A\x82\x00\x00\x00\x02VkPhysicalDeviceImageDrmFormatModifierInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\xEB\x11drmFormatModifier',b'\x00\x0C\x56\x11sharingMode',b'\x00\x00\x1F\x11queueFamilyIndexCount',b'\x00\x04\x71\x11pQueueFamilyIndices'),(b'\x00\x00\x0A\x83\x00\x00\x00\x02VkPhysicalDeviceImageFormatInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\xDA\x11format',b'\x00\x02\xDB\x11type',b'\x00\x02\xDC\x11tiling',b'\x00\x00\x1F\x11usage',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x0A\x84\x00\x00\x00\x02VkPhysicalDeviceImageRobustnessFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11robustImageAccess'),(b'\x00\x00\x0A\x85\x00\x00\x00\x02VkPhysicalDeviceImageViewImageFormatInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\xEB\x11imageViewType'),(b'\x00\x00\x0A\x86\x00\x00\x00\x02VkPhysicalDeviceImageViewMinLodFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11minLod'),(b'\x00\x00\x0A\x87\x00\x00\x00\x02VkPhysicalDeviceImagelessFramebufferFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11imagelessFramebuffer'),(b'\x00\x00\x0A\x88\x00\x00\x00\x02VkPhysicalDeviceIndexTypeUint8FeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11indexTypeUint8'),(b'\x00\x00\x0A\x89\x00\x00\x00\x02VkPhysicalDeviceInheritedViewportScissorFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11inheritedViewportScissor2D'),(b'\x00\x00\x0A\x8A\x00\x00\x00\x02VkPhysicalDeviceInlineUniformBlockFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11inlineUniformBlock',b'\x00\x00\x1F\x11descriptorBindingInlineUniformBlockUpdateAfterBind'),(b'\x00\x00\x0A\x8B\x00\x00\x00\x02VkPhysicalDeviceInlineUniformBlockProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxInlineUniformBlockSize',b'\x00\x00\x1F\x11maxPerStageDescriptorInlineUniformBlocks',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks',b'\x00\x00\x1F\x11maxDescriptorSetInlineUniformBlocks',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindInlineUniformBlocks'),(b'\x00\x00\x0A\x8C\x00\x00\x00\x02VkPhysicalDeviceInvocationMaskFeaturesHUAWEI',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11invocationMask'),(b'\x00\x00\x0A\x8D\x00\x00\x00\x02VkPhysicalDeviceLimits',b'\x00\x00\x1F\x11maxImageDimension1D',b'\x00\x00\x1F\x11maxImageDimension2D',b'\x00\x00\x1F\x11maxImageDimension3D',b'\x00\x00\x1F\x11maxImageDimensionCube',b'\x00\x00\x1F\x11maxImageArrayLayers',b'\x00\x00\x1F\x11maxTexelBufferElements',b'\x00\x00\x1F\x11maxUniformBufferRange',b'\x00\x00\x1F\x11maxStorageBufferRange',b'\x00\x00\x1F\x11maxPushConstantsSize',b'\x00\x00\x1F\x11maxMemoryAllocationCount',b'\x00\x00\x1F\x11maxSamplerAllocationCount',b'\x00\x00\xEB\x11bufferImageGranularity',b'\x00\x00\xEB\x11sparseAddressSpaceSize',b'\x00\x00\x1F\x11maxBoundDescriptorSets',b'\x00\x00\x1F\x11maxPerStageDescriptorSamplers',b'\x00\x00\x1F\x11maxPerStageDescriptorUniformBuffers',b'\x00\x00\x1F\x11maxPerStageDescriptorStorageBuffers',b'\x00\x00\x1F\x11maxPerStageDescriptorSampledImages',b'\x00\x00\x1F\x11maxPerStageDescriptorStorageImages',b'\x00\x00\x1F\x11maxPerStageDescriptorInputAttachments',b'\x00\x00\x1F\x11maxPerStageResources',b'\x00\x00\x1F\x11maxDescriptorSetSamplers',b'\x00\x00\x1F\x11maxDescriptorSetUniformBuffers',b'\x00\x00\x1F\x11maxDescriptorSetUniformBuffersDynamic',b'\x00\x00\x1F\x11maxDescriptorSetStorageBuffers',b'\x00\x00\x1F\x11maxDescriptorSetStorageBuffersDynamic',b'\x00\x00\x1F\x11maxDescriptorSetSampledImages',b'\x00\x00\x1F\x11maxDescriptorSetStorageImages',b'\x00\x00\x1F\x11maxDescriptorSetInputAttachments',b'\x00\x00\x1F\x11maxVertexInputAttributes',b'\x00\x00\x1F\x11maxVertexInputBindings',b'\x00\x00\x1F\x11maxVertexInputAttributeOffset',b'\x00\x00\x1F\x11maxVertexInputBindingStride',b'\x00\x00\x1F\x11maxVertexOutputComponents',b'\x00\x00\x1F\x11maxTessellationGenerationLevel',b'\x00\x00\x1F\x11maxTessellationPatchSize',b'\x00\x00\x1F\x11maxTessellationControlPerVertexInputComponents',b'\x00\x00\x1F\x11maxTessellationControlPerVertexOutputComponents',b'\x00\x00\x1F\x11maxTessellationControlPerPatchOutputComponents',b'\x00\x00\x1F\x11maxTessellationControlTotalOutputComponents',b'\x00\x00\x1F\x11maxTessellationEvaluationInputComponents',b'\x00\x00\x1F\x11maxTessellationEvaluationOutputComponents',b'\x00\x00\x1F\x11maxGeometryShaderInvocations',b'\x00\x00\x1F\x11maxGeometryInputComponents',b'\x00\x00\x1F\x11maxGeometryOutputComponents',b'\x00\x00\x1F\x11maxGeometryOutputVertices',b'\x00\x00\x1F\x11maxGeometryTotalOutputComponents',b'\x00\x00\x1F\x11maxFragmentInputComponents',b'\x00\x00\x1F\x11maxFragmentOutputAttachments',b'\x00\x00\x1F\x11maxFragmentDualSrcAttachments',b'\x00\x00\x1F\x11maxFragmentCombinedOutputResources',b'\x00\x00\x1F\x11maxComputeSharedMemorySize',b'\x00\x0D\x09\x11maxComputeWorkGroupCount',b'\x00\x00\x1F\x11maxComputeWorkGroupInvocations',b'\x00\x0D\x09\x11maxComputeWorkGroupSize',b'\x00\x00\x1F\x11subPixelPrecisionBits',b'\x00\x00\x1F\x11subTexelPrecisionBits',b'\x00\x00\x1F\x11mipmapPrecisionBits',b'\x00\x00\x1F\x11maxDrawIndexedIndexValue',b'\x00\x00\x1F\x11maxDrawIndirectCount',b'\x00\x04\xCA\x11maxSamplerLodBias',b'\x00\x04\xCA\x11maxSamplerAnisotropy',b'\x00\x00\x1F\x11maxViewports',b'\x00\x0D\x05\x11maxViewportDimensions',b'\x00\x0C\xBD\x11viewportBoundsRange',b'\x00\x00\x1F\x11viewportSubPixelBits',b'\x00\x01\x69\x11minMemoryMapAlignment',b'\x00\x00\xEB\x11minTexelBufferOffsetAlignment',b'\x00\x00\xEB\x11minUniformBufferOffsetAlignment',b'\x00\x00\xEB\x11minStorageBufferOffsetAlignment',b'\x00\x03\x03\x11minTexelOffset',b'\x00\x00\x1F\x11maxTexelOffset',b'\x00\x03\x03\x11minTexelGatherOffset',b'\x00\x00\x1F\x11maxTexelGatherOffset',b'\x00\x04\xCA\x11minInterpolationOffset',b'\x00\x04\xCA\x11maxInterpolationOffset',b'\x00\x00\x1F\x11subPixelInterpolationOffsetBits',b'\x00\x00\x1F\x11maxFramebufferWidth',b'\x00\x00\x1F\x11maxFramebufferHeight',b'\x00\x00\x1F\x11maxFramebufferLayers',b'\x00\x00\x1F\x11framebufferColorSampleCounts',b'\x00\x00\x1F\x11framebufferDepthSampleCounts',b'\x00\x00\x1F\x11framebufferStencilSampleCounts',b'\x00\x00\x1F\x11framebufferNoAttachmentsSampleCounts',b'\x00\x00\x1F\x11maxColorAttachments',b'\x00\x00\x1F\x11sampledImageColorSampleCounts',b'\x00\x00\x1F\x11sampledImageIntegerSampleCounts',b'\x00\x00\x1F\x11sampledImageDepthSampleCounts',b'\x00\x00\x1F\x11sampledImageStencilSampleCounts',b'\x00\x00\x1F\x11storageImageSampleCounts',b'\x00\x00\x1F\x11maxSampleMaskWords',b'\x00\x00\x1F\x11timestampComputeAndGraphics',b'\x00\x04\xCA\x11timestampPeriod',b'\x00\x00\x1F\x11maxClipDistances',b'\x00\x00\x1F\x11maxCullDistances',b'\x00\x00\x1F\x11maxCombinedClipAndCullDistances',b'\x00\x00\x1F\x11discreteQueuePriorities',b'\x00\x0C\xBD\x11pointSizeRange',b'\x00\x0C\xBD\x11lineWidthRange',b'\x00\x04\xCA\x11pointSizeGranularity',b'\x00\x04\xCA\x11lineWidthGranularity',b'\x00\x00\x1F\x11strictLines',b'\x00\x00\x1F\x11standardSampleLocations',b'\x00\x00\xEB\x11optimalBufferCopyOffsetAlignment',b'\x00\x00\xEB\x11optimalBufferCopyRowPitchAlignment',b'\x00\x00\xEB\x11nonCoherentAtomSize'),(b'\x00\x00\x0A\x8E\x00\x00\x00\x02VkPhysicalDeviceLineRasterizationFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11rectangularLines',b'\x00\x00\x1F\x11bresenhamLines',b'\x00\x00\x1F\x11smoothLines',b'\x00\x00\x1F\x11stippledRectangularLines',b'\x00\x00\x1F\x11stippledBresenhamLines',b'\x00\x00\x1F\x11stippledSmoothLines'),(b'\x00\x00\x0A\x8F\x00\x00\x00\x02VkPhysicalDeviceLineRasterizationPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11lineSubPixelPrecisionBits'),(b'\x00\x00\x0A\x90\x00\x00\x00\x02VkPhysicalDeviceLinearColorAttachmentFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11linearColorAttachment'),(b'\x00\x00\x0A\x91\x00\x00\x00\x02VkPhysicalDeviceMaintenance3Properties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxPerSetDescriptors',b'\x00\x00\xEB\x11maxMemoryAllocationSize'),(b'\x00\x00\x0A\x92\x00\x00\x00\x02VkPhysicalDeviceMaintenance4Features',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maintenance4'),(b'\x00\x00\x0A\x93\x00\x00\x00\x02VkPhysicalDeviceMaintenance4Properties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11maxBufferSize'),(b'\x00\x00\x0A\x94\x00\x00\x00\x02VkPhysicalDeviceMemoryBudgetPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0D\x11\x11heapBudget',b'\x00\x0D\x11\x11heapUsage'),(b'\x00\x00\x0A\x95\x00\x00\x00\x02VkPhysicalDeviceMemoryPriorityFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11memoryPriority'),(b'\x00\x00\x0A\x97\x00\x00\x00\x02VkPhysicalDeviceMemoryProperties',b'\x00\x00\x1F\x11memoryTypeCount',b'\x00\x0A\x1B\x11memoryTypes',b'\x00\x00\x1F\x11memoryHeapCount',b'\x00\x0A\x11\x11memoryHeaps'),(b'\x00\x00\x0A\x96\x00\x00\x00\x02VkPhysicalDeviceMemoryProperties2',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0A\x97\x11memoryProperties'),(b'\x00\x00\x0A\x98\x00\x00\x00\x02VkPhysicalDeviceMeshShaderFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11taskShader',b'\x00\x00\x1F\x11meshShader'),(b'\x00\x00\x0A\x99\x00\x00\x00\x02VkPhysicalDeviceMeshShaderPropertiesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxDrawMeshTasksCount',b'\x00\x00\x1F\x11maxTaskWorkGroupInvocations',b'\x00\x0D\x09\x11maxTaskWorkGroupSize',b'\x00\x00\x1F\x11maxTaskTotalMemorySize',b'\x00\x00\x1F\x11maxTaskOutputCount',b'\x00\x00\x1F\x11maxMeshWorkGroupInvocations',b'\x00\x0D\x09\x11maxMeshWorkGroupSize',b'\x00\x00\x1F\x11maxMeshTotalMemorySize',b'\x00\x00\x1F\x11maxMeshOutputVertices',b'\x00\x00\x1F\x11maxMeshOutputPrimitives',b'\x00\x00\x1F\x11maxMeshMultiviewViewCount',b'\x00\x00\x1F\x11meshOutputPerVertexGranularity',b'\x00\x00\x1F\x11meshOutputPerPrimitiveGranularity'),(b'\x00\x00\x0A\x9A\x00\x00\x00\x02VkPhysicalDeviceMultiDrawFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11multiDraw'),(b'\x00\x00\x0A\x9B\x00\x00\x00\x02VkPhysicalDeviceMultiDrawPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxMultiDrawCount'),(b'\x00\x00\x0A\x9C\x00\x00\x00\x02VkPhysicalDeviceMultiviewFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11multiview',b'\x00\x00\x1F\x11multiviewGeometryShader',b'\x00\x00\x1F\x11multiviewTessellationShader'),(b'\x00\x00\x0A\x9D\x00\x00\x00\x02VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11perViewPositionAllComponents'),(b'\x00\x00\x0A\x9E\x00\x00\x00\x02VkPhysicalDeviceMultiviewProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxMultiviewViewCount',b'\x00\x00\x1F\x11maxMultiviewInstanceIndex'),(b'\x00\x00\x0A\x9F\x00\x00\x00\x02VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11mutableDescriptorType'),(b'\x00\x00\x0A\xA0\x00\x00\x00\x02VkPhysicalDevicePCIBusInfoPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11pciDomain',b'\x00\x00\x1F\x11pciBus',b'\x00\x00\x1F\x11pciDevice',b'\x00\x00\x1F\x11pciFunction'),(b'\x00\x00\x0A\xA1\x00\x00\x00\x02VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11pageableDeviceLocalMemory'),(b'\x00\x00\x0A\xA2\x00\x00\x00\x02VkPhysicalDevicePerformanceQueryFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11performanceCounterQueryPools',b'\x00\x00\x1F\x11performanceCounterMultipleQueryPools'),(b'\x00\x00\x0A\xA3\x00\x00\x00\x02VkPhysicalDevicePerformanceQueryPropertiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11allowCommandBufferQueryCopies'),(b'\x00\x00\x0A\xA4\x00\x00\x00\x02VkPhysicalDevicePipelineCreationCacheControlFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11pipelineCreationCacheControl'),(b'\x00\x00\x0A\xA5\x00\x00\x00\x02VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11pipelineExecutableInfo'),(b'\x00\x00\x0A\xA6\x00\x00\x00\x02VkPhysicalDevicePointClippingProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0B\x42\x11pointClippingBehavior'),(b'\x00\x00\x0A\xA7\x00\x00\x00\x02VkPhysicalDevicePresentIdFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11presentId'),(b'\x00\x00\x0A\xA8\x00\x00\x00\x02VkPhysicalDevicePresentWaitFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11presentWait'),(b'\x00\x00\x0A\xA9\x00\x00\x00\x02VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11primitiveTopologyListRestart',b'\x00\x00\x1F\x11primitiveTopologyPatchListRestart'),(b'\x00\x00\x0A\xAA\x00\x00\x00\x02VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11primitivesGeneratedQuery',b'\x00\x00\x1F\x11primitivesGeneratedQueryWithRasterizerDiscard',b'\x00\x00\x1F\x11primitivesGeneratedQueryWithNonZeroStreams'),(b'\x00\x00\x0A\xAB\x00\x00\x00\x02VkPhysicalDevicePrivateDataFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11privateData'),(b'\x00\x00\x0A\xAD\x00\x00\x00\x02VkPhysicalDeviceProperties',b'\x00\x00\x1F\x11apiVersion',b'\x00\x00\x1F\x11driverVersion',b'\x00\x00\x1F\x11vendorID',b'\x00\x00\x1F\x11deviceID',b'\x00\x0A\xE8\x11deviceType',b'\x00\x0C\xBA\x11deviceName',b'\x00\x0D\x15\x11pipelineCacheUUID',b'\x00\x0A\x8D\x11limits',b'\x00\x0A\xD8\x11sparseProperties'),(b'\x00\x00\x0A\xAC\x00\x00\x00\x02VkPhysicalDeviceProperties2',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0A\xAD\x11properties'),(b'\x00\x00\x0A\xAE\x00\x00\x00\x02VkPhysicalDeviceProtectedMemoryFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11protectedMemory'),(b'\x00\x00\x0A\xAF\x00\x00\x00\x02VkPhysicalDeviceProtectedMemoryProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11protectedNoFault'),(b'\x00\x00\x0A\xB0\x00\x00\x00\x02VkPhysicalDeviceProvokingVertexFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11provokingVertexLast',b'\x00\x00\x1F\x11transformFeedbackPreservesProvokingVertex'),(b'\x00\x00\x0A\xB1\x00\x00\x00\x02VkPhysicalDeviceProvokingVertexPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11provokingVertexModePerPipeline',b'\x00\x00\x1F\x11transformFeedbackPreservesTriangleFanProvokingVertex'),(b'\x00\x00\x0A\xB2\x00\x00\x00\x02VkPhysicalDevicePushDescriptorPropertiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxPushDescriptors'),(b'\x00\x00\x0A\xB3\x00\x00\x00\x02VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11formatRgba10x6WithoutYCbCrSampler'),(b'\x00\x00\x0A\xB4\x00\x00\x00\x02VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11rasterizationOrderColorAttachmentAccess',b'\x00\x00\x1F\x11rasterizationOrderDepthAttachmentAccess',b'\x00\x00\x1F\x11rasterizationOrderStencilAttachmentAccess'),(b'\x00\x00\x0A\xB5\x00\x00\x00\x02VkPhysicalDeviceRayQueryFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11rayQuery'),(b'\x00\x00\x0A\xB6\x00\x00\x00\x02VkPhysicalDeviceRayTracingMotionBlurFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11rayTracingMotionBlur',b'\x00\x00\x1F\x11rayTracingMotionBlurPipelineTraceRaysIndirect'),(b'\x00\x00\x0A\xB7\x00\x00\x00\x02VkPhysicalDeviceRayTracingPipelineFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11rayTracingPipeline',b'\x00\x00\x1F\x11rayTracingPipelineShaderGroupHandleCaptureReplay',b'\x00\x00\x1F\x11rayTracingPipelineShaderGroupHandleCaptureReplayMixed',b'\x00\x00\x1F\x11rayTracingPipelineTraceRaysIndirect',b'\x00\x00\x1F\x11rayTraversalPrimitiveCulling'),(b'\x00\x00\x0A\xB8\x00\x00\x00\x02VkPhysicalDeviceRayTracingPipelinePropertiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderGroupHandleSize',b'\x00\x00\x1F\x11maxRayRecursionDepth',b'\x00\x00\x1F\x11maxShaderGroupStride',b'\x00\x00\x1F\x11shaderGroupBaseAlignment',b'\x00\x00\x1F\x11shaderGroupHandleCaptureReplaySize',b'\x00\x00\x1F\x11maxRayDispatchInvocationCount',b'\x00\x00\x1F\x11shaderGroupHandleAlignment',b'\x00\x00\x1F\x11maxRayHitAttributeSize'),(b'\x00\x00\x0A\xB9\x00\x00\x00\x02VkPhysicalDeviceRayTracingPropertiesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderGroupHandleSize',b'\x00\x00\x1F\x11maxRecursionDepth',b'\x00\x00\x1F\x11maxShaderGroupStride',b'\x00\x00\x1F\x11shaderGroupBaseAlignment',b'\x00\x00\xEB\x11maxGeometryCount',b'\x00\x00\xEB\x11maxInstanceCount',b'\x00\x00\xEB\x11maxTriangleCount',b'\x00\x00\x1F\x11maxDescriptorSetAccelerationStructures'),(b'\x00\x00\x0A\xBA\x00\x00\x00\x02VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11representativeFragmentTest'),(b'\x00\x00\x0A\xBB\x00\x00\x00\x02VkPhysicalDeviceRobustness2FeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11robustBufferAccess2',b'\x00\x00\x1F\x11robustImageAccess2',b'\x00\x00\x1F\x11nullDescriptor'),(b'\x00\x00\x0A\xBC\x00\x00\x00\x02VkPhysicalDeviceRobustness2PropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11robustStorageBufferAccessSizeAlignment',b'\x00\x00\xEB\x11robustUniformBufferAccessSizeAlignment'),(b'\x00\x00\x0A\xBD\x00\x00\x00\x02VkPhysicalDeviceSampleLocationsPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11sampleLocationSampleCounts',b'\x00\x09\x8D\x11maxSampleLocationGridSize',b'\x00\x0C\xBD\x11sampleLocationCoordinateRange',b'\x00\x00\x1F\x11sampleLocationSubPixelBits',b'\x00\x00\x1F\x11variableSampleLocations'),(b'\x00\x00\x0A\xBE\x00\x00\x00\x02VkPhysicalDeviceSamplerFilterMinmaxProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11filterMinmaxSingleComponentFormats',b'\x00\x00\x1F\x11filterMinmaxImageComponentMapping'),(b'\x00\x00\x0A\xBF\x00\x00\x00\x02VkPhysicalDeviceSamplerYcbcrConversionFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11samplerYcbcrConversion'),(b'\x00\x00\x0A\xC0\x00\x00\x00\x02VkPhysicalDeviceScalarBlockLayoutFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11scalarBlockLayout'),(b'\x00\x00\x0A\xC1\x00\x00\x00\x02VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11separateDepthStencilLayouts'),(b'\x00\x00\x0A\xC2\x00\x00\x00\x02VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderBufferFloat16Atomics',b'\x00\x00\x1F\x11shaderBufferFloat16AtomicAdd',b'\x00\x00\x1F\x11shaderBufferFloat16AtomicMinMax',b'\x00\x00\x1F\x11shaderBufferFloat32AtomicMinMax',b'\x00\x00\x1F\x11shaderBufferFloat64AtomicMinMax',b'\x00\x00\x1F\x11shaderSharedFloat16Atomics',b'\x00\x00\x1F\x11shaderSharedFloat16AtomicAdd',b'\x00\x00\x1F\x11shaderSharedFloat16AtomicMinMax',b'\x00\x00\x1F\x11shaderSharedFloat32AtomicMinMax',b'\x00\x00\x1F\x11shaderSharedFloat64AtomicMinMax',b'\x00\x00\x1F\x11shaderImageFloat32AtomicMinMax',b'\x00\x00\x1F\x11sparseImageFloat32AtomicMinMax'),(b'\x00\x00\x0A\xC3\x00\x00\x00\x02VkPhysicalDeviceShaderAtomicFloatFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderBufferFloat32Atomics',b'\x00\x00\x1F\x11shaderBufferFloat32AtomicAdd',b'\x00\x00\x1F\x11shaderBufferFloat64Atomics',b'\x00\x00\x1F\x11shaderBufferFloat64AtomicAdd',b'\x00\x00\x1F\x11shaderSharedFloat32Atomics',b'\x00\x00\x1F\x11shaderSharedFloat32AtomicAdd',b'\x00\x00\x1F\x11shaderSharedFloat64Atomics',b'\x00\x00\x1F\x11shaderSharedFloat64AtomicAdd',b'\x00\x00\x1F\x11shaderImageFloat32Atomics',b'\x00\x00\x1F\x11shaderImageFloat32AtomicAdd',b'\x00\x00\x1F\x11sparseImageFloat32Atomics',b'\x00\x00\x1F\x11sparseImageFloat32AtomicAdd'),(b'\x00\x00\x0A\xC4\x00\x00\x00\x02VkPhysicalDeviceShaderAtomicInt64Features',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderBufferInt64Atomics',b'\x00\x00\x1F\x11shaderSharedInt64Atomics'),(b'\x00\x00\x0A\xC5\x00\x00\x00\x02VkPhysicalDeviceShaderClockFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderSubgroupClock',b'\x00\x00\x1F\x11shaderDeviceClock'),(b'\x00\x00\x0A\xC6\x00\x00\x00\x02VkPhysicalDeviceShaderCoreProperties2AMD',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderCoreFeatures',b'\x00\x00\x1F\x11activeComputeUnitCount'),(b'\x00\x00\x0A\xC7\x00\x00\x00\x02VkPhysicalDeviceShaderCorePropertiesAMD',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderEngineCount',b'\x00\x00\x1F\x11shaderArraysPerEngineCount',b'\x00\x00\x1F\x11computeUnitsPerShaderArray',b'\x00\x00\x1F\x11simdPerComputeUnit',b'\x00\x00\x1F\x11wavefrontsPerSimd',b'\x00\x00\x1F\x11wavefrontSize',b'\x00\x00\x1F\x11sgprsPerSimd',b'\x00\x00\x1F\x11minSgprAllocation',b'\x00\x00\x1F\x11maxSgprAllocation',b'\x00\x00\x1F\x11sgprAllocationGranularity',b'\x00\x00\x1F\x11vgprsPerSimd',b'\x00\x00\x1F\x11minVgprAllocation',b'\x00\x00\x1F\x11maxVgprAllocation',b'\x00\x00\x1F\x11vgprAllocationGranularity'),(b'\x00\x00\x0A\xC8\x00\x00\x00\x02VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderDemoteToHelperInvocation'),(b'\x00\x00\x0A\xC9\x00\x00\x00\x02VkPhysicalDeviceShaderDrawParametersFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderDrawParameters'),(b'\x00\x00\x0A\xCA\x00\x00\x00\x02VkPhysicalDeviceShaderFloat16Int8Features',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderFloat16',b'\x00\x00\x1F\x11shaderInt8'),(b'\x00\x00\x0A\xCB\x00\x00\x00\x02VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderImageInt64Atomics',b'\x00\x00\x1F\x11sparseImageInt64Atomics'),(b'\x00\x00\x0A\xCC\x00\x00\x00\x02VkPhysicalDeviceShaderImageFootprintFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11imageFootprint'),(b'\x00\x00\x0A\xCD\x00\x00\x00\x02VkPhysicalDeviceShaderIntegerDotProductFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderIntegerDotProduct'),(b'\x00\x00\x0A\xCE\x00\x00\x00\x02VkPhysicalDeviceShaderIntegerDotProductProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11integerDotProduct8BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct8BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct8BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProduct4x8BitPackedUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct4x8BitPackedSignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct4x8BitPackedMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProduct16BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct16BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct16BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProduct32BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct32BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct32BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProduct64BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct64BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct64BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating8BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating8BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating16BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating16BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating32BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating32BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating64BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating64BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated'),(b'\x00\x00\x0A\xCF\x00\x00\x00\x02VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderIntegerFunctions2'),(b'\x00\x00\x0A\xD0\x00\x00\x00\x02VkPhysicalDeviceShaderSMBuiltinsFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderSMBuiltins'),(b'\x00\x00\x0A\xD1\x00\x00\x00\x02VkPhysicalDeviceShaderSMBuiltinsPropertiesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderSMCount',b'\x00\x00\x1F\x11shaderWarpsPerSM'),(b'\x00\x00\x0A\xD2\x00\x00\x00\x02VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderSubgroupExtendedTypes'),(b'\x00\x00\x0A\xD3\x00\x00\x00\x02VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderSubgroupUniformControlFlow'),(b'\x00\x00\x0A\xD4\x00\x00\x00\x02VkPhysicalDeviceShaderTerminateInvocationFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderTerminateInvocation'),(b'\x00\x00\x0A\xD5\x00\x00\x00\x02VkPhysicalDeviceShadingRateImageFeaturesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shadingRateImage',b'\x00\x00\x1F\x11shadingRateCoarseSampleOrder'),(b'\x00\x00\x0A\xD6\x00\x00\x00\x02VkPhysicalDeviceShadingRateImagePropertiesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x8D\x11shadingRateTexelSize',b'\x00\x00\x1F\x11shadingRatePaletteSize',b'\x00\x00\x1F\x11shadingRateMaxCoarseSamples'),(b'\x00\x00\x0A\xD7\x00\x00\x00\x02VkPhysicalDeviceSparseImageFormatInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\xDA\x11format',b'\x00\x02\xDB\x11type',b'\x00\x08\x0A\x11samples',b'\x00\x00\x1F\x11usage',b'\x00\x02\xDC\x11tiling'),(b'\x00\x00\x0A\xD8\x00\x00\x00\x02VkPhysicalDeviceSparseProperties',b'\x00\x00\x1F\x11residencyStandard2DBlockShape',b'\x00\x00\x1F\x11residencyStandard2DMultisampleBlockShape',b'\x00\x00\x1F\x11residencyStandard3DBlockShape',b'\x00\x00\x1F\x11residencyAlignedMipSize',b'\x00\x00\x1F\x11residencyNonResidentStrict'),(b'\x00\x00\x0A\xD9\x00\x00\x00\x02VkPhysicalDeviceSubgroupProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11subgroupSize',b'\x00\x00\x1F\x11supportedStages',b'\x00\x00\x1F\x11supportedOperations',b'\x00\x00\x1F\x11quadOperationsInAllStages'),(b'\x00\x00\x0A\xDA\x00\x00\x00\x02VkPhysicalDeviceSubgroupSizeControlFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11subgroupSizeControl',b'\x00\x00\x1F\x11computeFullSubgroups'),(b'\x00\x00\x0A\xDB\x00\x00\x00\x02VkPhysicalDeviceSubgroupSizeControlProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11minSubgroupSize',b'\x00\x00\x1F\x11maxSubgroupSize',b'\x00\x00\x1F\x11maxComputeWorkgroupSubgroups',b'\x00\x00\x1F\x11requiredSubgroupSizeStages'),(b'\x00\x00\x0A\xDC\x00\x00\x00\x02VkPhysicalDeviceSubpassShadingFeaturesHUAWEI',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11subpassShading'),(b'\x00\x00\x0A\xDD\x00\x00\x00\x02VkPhysicalDeviceSubpassShadingPropertiesHUAWEI',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxSubpassShadingWorkgroupSizeAspectRatio'),(b'\x00\x00\x0A\xDE\x00\x00\x00\x02VkPhysicalDeviceSurfaceInfo2KHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x24\x11surface'),(b'\x00\x00\x0A\xDF\x00\x00\x00\x02VkPhysicalDeviceSynchronization2Features',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11synchronization2'),(b'\x00\x00\x0A\xE0\x00\x00\x00\x02VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11texelBufferAlignment'),(b'\x00\x00\x0A\xE1\x00\x00\x00\x02VkPhysicalDeviceTexelBufferAlignmentProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11storageTexelBufferOffsetAlignmentBytes',b'\x00\x00\x1F\x11storageTexelBufferOffsetSingleTexelAlignment',b'\x00\x00\xEB\x11uniformTexelBufferOffsetAlignmentBytes',b'\x00\x00\x1F\x11uniformTexelBufferOffsetSingleTexelAlignment'),(b'\x00\x00\x0A\xE2\x00\x00\x00\x02VkPhysicalDeviceTextureCompressionASTCHDRFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11textureCompressionASTC_HDR'),(b'\x00\x00\x0A\xE3\x00\x00\x00\x02VkPhysicalDeviceTimelineSemaphoreFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11timelineSemaphore'),(b'\x00\x00\x0A\xE4\x00\x00\x00\x02VkPhysicalDeviceTimelineSemaphoreProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11maxTimelineSemaphoreValueDifference'),(b'\x00\x00\x0A\xE5\x00\x00\x00\x02VkPhysicalDeviceToolProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0C\xBA\x11name',b'\x00\x0C\xBA\x11version',b'\x00\x00\x1F\x11purposes',b'\x00\x0C\xBA\x11description',b'\x00\x0C\xBA\x11layer'),(b'\x00\x00\x0A\xE6\x00\x00\x00\x02VkPhysicalDeviceTransformFeedbackFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11transformFeedback',b'\x00\x00\x1F\x11geometryStreams'),(b'\x00\x00\x0A\xE7\x00\x00\x00\x02VkPhysicalDeviceTransformFeedbackPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxTransformFeedbackStreams',b'\x00\x00\x1F\x11maxTransformFeedbackBuffers',b'\x00\x00\xEB\x11maxTransformFeedbackBufferSize',b'\x00\x00\x1F\x11maxTransformFeedbackStreamDataSize',b'\x00\x00\x1F\x11maxTransformFeedbackBufferDataSize',b'\x00\x00\x1F\x11maxTransformFeedbackBufferDataStride',b'\x00\x00\x1F\x11transformFeedbackQueries',b'\x00\x00\x1F\x11transformFeedbackStreamsLinesTriangles',b'\x00\x00\x1F\x11transformFeedbackRasterizationStreamSelect',b'\x00\x00\x1F\x11transformFeedbackDraw'),(b'\x00\x00\x0A\xE9\x00\x00\x00\x02VkPhysicalDeviceUniformBufferStandardLayoutFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11uniformBufferStandardLayout'),(b'\x00\x00\x0A\xEA\x00\x00\x00\x02VkPhysicalDeviceVariablePointersFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11variablePointersStorageBuffer',b'\x00\x00\x1F\x11variablePointers'),(b'\x00\x00\x0A\xEB\x00\x00\x00\x02VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11vertexAttributeInstanceRateDivisor',b'\x00\x00\x1F\x11vertexAttributeInstanceRateZeroDivisor'),(b'\x00\x00\x0A\xEC\x00\x00\x00\x02VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11maxVertexAttribDivisor'),(b'\x00\x00\x0A\xED\x00\x00\x00\x02VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11vertexInputDynamicState'),(b'\x00\x00\x0A\xEE\x00\x00\x00\x02VkPhysicalDeviceVulkan11Features',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11storageBuffer16BitAccess',b'\x00\x00\x1F\x11uniformAndStorageBuffer16BitAccess',b'\x00\x00\x1F\x11storagePushConstant16',b'\x00\x00\x1F\x11storageInputOutput16',b'\x00\x00\x1F\x11multiview',b'\x00\x00\x1F\x11multiviewGeometryShader',b'\x00\x00\x1F\x11multiviewTessellationShader',b'\x00\x00\x1F\x11variablePointersStorageBuffer',b'\x00\x00\x1F\x11variablePointers',b'\x00\x00\x1F\x11protectedMemory',b'\x00\x00\x1F\x11samplerYcbcrConversion',b'\x00\x00\x1F\x11shaderDrawParameters'),(b'\x00\x00\x0A\xEF\x00\x00\x00\x02VkPhysicalDeviceVulkan11Properties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0D\x15\x11deviceUUID',b'\x00\x0D\x15\x11driverUUID',b'\x00\x0D\x17\x11deviceLUID',b'\x00\x00\x1F\x11deviceNodeMask',b'\x00\x00\x1F\x11deviceLUIDValid',b'\x00\x00\x1F\x11subgroupSize',b'\x00\x00\x1F\x11subgroupSupportedStages',b'\x00\x00\x1F\x11subgroupSupportedOperations',b'\x00\x00\x1F\x11subgroupQuadOperationsInAllStages',b'\x00\x0B\x42\x11pointClippingBehavior',b'\x00\x00\x1F\x11maxMultiviewViewCount',b'\x00\x00\x1F\x11maxMultiviewInstanceIndex',b'\x00\x00\x1F\x11protectedNoFault',b'\x00\x00\x1F\x11maxPerSetDescriptors',b'\x00\x00\xEB\x11maxMemoryAllocationSize'),(b'\x00\x00\x0A\xF0\x00\x00\x00\x02VkPhysicalDeviceVulkan12Features',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11samplerMirrorClampToEdge',b'\x00\x00\x1F\x11drawIndirectCount',b'\x00\x00\x1F\x11storageBuffer8BitAccess',b'\x00\x00\x1F\x11uniformAndStorageBuffer8BitAccess',b'\x00\x00\x1F\x11storagePushConstant8',b'\x00\x00\x1F\x11shaderBufferInt64Atomics',b'\x00\x00\x1F\x11shaderSharedInt64Atomics',b'\x00\x00\x1F\x11shaderFloat16',b'\x00\x00\x1F\x11shaderInt8',b'\x00\x00\x1F\x11descriptorIndexing',b'\x00\x00\x1F\x11shaderInputAttachmentArrayDynamicIndexing',b'\x00\x00\x1F\x11shaderUniformTexelBufferArrayDynamicIndexing',b'\x00\x00\x1F\x11shaderStorageTexelBufferArrayDynamicIndexing',b'\x00\x00\x1F\x11shaderUniformBufferArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderSampledImageArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderStorageBufferArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderStorageImageArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderInputAttachmentArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderUniformTexelBufferArrayNonUniformIndexing',b'\x00\x00\x1F\x11shaderStorageTexelBufferArrayNonUniformIndexing',b'\x00\x00\x1F\x11descriptorBindingUniformBufferUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingSampledImageUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingStorageImageUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingStorageBufferUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingUniformTexelBufferUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingStorageTexelBufferUpdateAfterBind',b'\x00\x00\x1F\x11descriptorBindingUpdateUnusedWhilePending',b'\x00\x00\x1F\x11descriptorBindingPartiallyBound',b'\x00\x00\x1F\x11descriptorBindingVariableDescriptorCount',b'\x00\x00\x1F\x11runtimeDescriptorArray',b'\x00\x00\x1F\x11samplerFilterMinmax',b'\x00\x00\x1F\x11scalarBlockLayout',b'\x00\x00\x1F\x11imagelessFramebuffer',b'\x00\x00\x1F\x11uniformBufferStandardLayout',b'\x00\x00\x1F\x11shaderSubgroupExtendedTypes',b'\x00\x00\x1F\x11separateDepthStencilLayouts',b'\x00\x00\x1F\x11hostQueryReset',b'\x00\x00\x1F\x11timelineSemaphore',b'\x00\x00\x1F\x11bufferDeviceAddress',b'\x00\x00\x1F\x11bufferDeviceAddressCaptureReplay',b'\x00\x00\x1F\x11bufferDeviceAddressMultiDevice',b'\x00\x00\x1F\x11vulkanMemoryModel',b'\x00\x00\x1F\x11vulkanMemoryModelDeviceScope',b'\x00\x00\x1F\x11vulkanMemoryModelAvailabilityVisibilityChains',b'\x00\x00\x1F\x11shaderOutputViewportIndex',b'\x00\x00\x1F\x11shaderOutputLayer',b'\x00\x00\x1F\x11subgroupBroadcastDynamicId'),(b'\x00\x00\x0A\xF1\x00\x00\x00\x02VkPhysicalDeviceVulkan12Properties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x09\x7D\x11driverID',b'\x00\x0C\xBA\x11driverName',b'\x00\x0C\xBA\x11driverInfo',b'\x00\x09\x0B\x11conformanceVersion',b'\x00\x0C\x4D\x11denormBehaviorIndependence',b'\x00\x0C\x4D\x11roundingModeIndependence',b'\x00\x00\x1F\x11shaderSignedZeroInfNanPreserveFloat16',b'\x00\x00\x1F\x11shaderSignedZeroInfNanPreserveFloat32',b'\x00\x00\x1F\x11shaderSignedZeroInfNanPreserveFloat64',b'\x00\x00\x1F\x11shaderDenormPreserveFloat16',b'\x00\x00\x1F\x11shaderDenormPreserveFloat32',b'\x00\x00\x1F\x11shaderDenormPreserveFloat64',b'\x00\x00\x1F\x11shaderDenormFlushToZeroFloat16',b'\x00\x00\x1F\x11shaderDenormFlushToZeroFloat32',b'\x00\x00\x1F\x11shaderDenormFlushToZeroFloat64',b'\x00\x00\x1F\x11shaderRoundingModeRTEFloat16',b'\x00\x00\x1F\x11shaderRoundingModeRTEFloat32',b'\x00\x00\x1F\x11shaderRoundingModeRTEFloat64',b'\x00\x00\x1F\x11shaderRoundingModeRTZFloat16',b'\x00\x00\x1F\x11shaderRoundingModeRTZFloat32',b'\x00\x00\x1F\x11shaderRoundingModeRTZFloat64',b'\x00\x00\x1F\x11maxUpdateAfterBindDescriptorsInAllPools',b'\x00\x00\x1F\x11shaderUniformBufferArrayNonUniformIndexingNative',b'\x00\x00\x1F\x11shaderSampledImageArrayNonUniformIndexingNative',b'\x00\x00\x1F\x11shaderStorageBufferArrayNonUniformIndexingNative',b'\x00\x00\x1F\x11shaderStorageImageArrayNonUniformIndexingNative',b'\x00\x00\x1F\x11shaderInputAttachmentArrayNonUniformIndexingNative',b'\x00\x00\x1F\x11robustBufferAccessUpdateAfterBind',b'\x00\x00\x1F\x11quadDivergentImplicitLod',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindSamplers',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindUniformBuffers',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindStorageBuffers',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindSampledImages',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindStorageImages',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindInputAttachments',b'\x00\x00\x1F\x11maxPerStageUpdateAfterBindResources',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindSamplers',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindUniformBuffers',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindUniformBuffersDynamic',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindStorageBuffers',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindStorageBuffersDynamic',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindSampledImages',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindStorageImages',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindInputAttachments',b'\x00\x00\x1F\x11supportedDepthResolveModes',b'\x00\x00\x1F\x11supportedStencilResolveModes',b'\x00\x00\x1F\x11independentResolveNone',b'\x00\x00\x1F\x11independentResolve',b'\x00\x00\x1F\x11filterMinmaxSingleComponentFormats',b'\x00\x00\x1F\x11filterMinmaxImageComponentMapping',b'\x00\x00\xEB\x11maxTimelineSemaphoreValueDifference',b'\x00\x00\x1F\x11framebufferIntegerColorSampleCounts'),(b'\x00\x00\x0A\xF2\x00\x00\x00\x02VkPhysicalDeviceVulkan13Features',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11robustImageAccess',b'\x00\x00\x1F\x11inlineUniformBlock',b'\x00\x00\x1F\x11descriptorBindingInlineUniformBlockUpdateAfterBind',b'\x00\x00\x1F\x11pipelineCreationCacheControl',b'\x00\x00\x1F\x11privateData',b'\x00\x00\x1F\x11shaderDemoteToHelperInvocation',b'\x00\x00\x1F\x11shaderTerminateInvocation',b'\x00\x00\x1F\x11subgroupSizeControl',b'\x00\x00\x1F\x11computeFullSubgroups',b'\x00\x00\x1F\x11synchronization2',b'\x00\x00\x1F\x11textureCompressionASTC_HDR',b'\x00\x00\x1F\x11shaderZeroInitializeWorkgroupMemory',b'\x00\x00\x1F\x11dynamicRendering',b'\x00\x00\x1F\x11shaderIntegerDotProduct',b'\x00\x00\x1F\x11maintenance4'),(b'\x00\x00\x0A\xF3\x00\x00\x00\x02VkPhysicalDeviceVulkan13Properties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11minSubgroupSize',b'\x00\x00\x1F\x11maxSubgroupSize',b'\x00\x00\x1F\x11maxComputeWorkgroupSubgroups',b'\x00\x00\x1F\x11requiredSubgroupSizeStages',b'\x00\x00\x1F\x11maxInlineUniformBlockSize',b'\x00\x00\x1F\x11maxPerStageDescriptorInlineUniformBlocks',b'\x00\x00\x1F\x11maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks',b'\x00\x00\x1F\x11maxDescriptorSetInlineUniformBlocks',b'\x00\x00\x1F\x11maxDescriptorSetUpdateAfterBindInlineUniformBlocks',b'\x00\x00\x1F\x11maxInlineUniformTotalSize',b'\x00\x00\x1F\x11integerDotProduct8BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct8BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct8BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProduct4x8BitPackedUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct4x8BitPackedSignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct4x8BitPackedMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProduct16BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct16BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct16BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProduct32BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct32BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct32BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProduct64BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct64BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProduct64BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating8BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating8BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating16BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating16BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating32BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating32BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating64BitUnsignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating64BitSignedAccelerated',b'\x00\x00\x1F\x11integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated',b'\x00\x00\xEB\x11storageTexelBufferOffsetAlignmentBytes',b'\x00\x00\x1F\x11storageTexelBufferOffsetSingleTexelAlignment',b'\x00\x00\xEB\x11uniformTexelBufferOffsetAlignmentBytes',b'\x00\x00\x1F\x11uniformTexelBufferOffsetSingleTexelAlignment',b'\x00\x00\xEB\x11maxBufferSize'),(b'\x00\x00\x0A\xF4\x00\x00\x00\x02VkPhysicalDeviceVulkanMemoryModelFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11vulkanMemoryModel',b'\x00\x00\x1F\x11vulkanMemoryModelDeviceScope',b'\x00\x00\x1F\x11vulkanMemoryModelAvailabilityVisibilityChains'),(b'\x00\x00\x0A\xF5\x00\x00\x00\x02VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11workgroupMemoryExplicitLayout',b'\x00\x00\x1F\x11workgroupMemoryExplicitLayoutScalarBlockLayout',b'\x00\x00\x1F\x11workgroupMemoryExplicitLayout8BitAccess',b'\x00\x00\x1F\x11workgroupMemoryExplicitLayout16BitAccess'),(b'\x00\x00\x0A\xF6\x00\x00\x00\x02VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11ycbcr2plane444Formats'),(b'\x00\x00\x0A\xF7\x00\x00\x00\x02VkPhysicalDeviceYcbcrImageArraysFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11ycbcrImageArrays'),(b'\x00\x00\x0A\xF8\x00\x00\x00\x02VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11shaderZeroInitializeWorkgroupMemory'),(b'\x00\x00\x0C\xE9\x00\x00\x00\x10VkPhysicalDevice_T',),(b'\x00\x00\x0A\xFA\x00\x00\x00\x02VkPipelineCacheCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x01\x69\x11initialDataSize',b'\x00\x00\xA1\x11pInitialData'),(b'\x00\x00\x0A\xFC\x00\x00\x00\x02VkPipelineCacheHeaderVersionOne',b'\x00\x00\x1F\x11headerSize',b'\x00\x0A\xFB\x11headerVersion',b'\x00\x00\x1F\x11vendorID',b'\x00\x00\x1F\x11deviceID',b'\x00\x0D\x15\x11pipelineCacheUUID'),(b'\x00\x00\x0C\xEA\x00\x00\x00\x10VkPipelineCache_T',),(b'\x00\x00\x0A\xFD\x00\x00\x00\x02VkPipelineColorBlendAdvancedStateCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11srcPremultiplied',b'\x00\x00\x1F\x11dstPremultiplied',b'\x00\x08\xCF\x11blendOverlap'),(b'\x00\x00\x0A\xFF\x00\x00\x00\x02VkPipelineColorBlendAttachmentState',b'\x00\x00\x1F\x11blendEnable',b'\x00\x08\xCD\x11srcColorBlendFactor',b'\x00\x08\xCD\x11dstColorBlendFactor',b'\x00\x08\xCE\x11colorBlendOp',b'\x00\x08\xCD\x11srcAlphaBlendFactor',b'\x00\x08\xCD\x11dstAlphaBlendFactor',b'\x00\x08\xCE\x11alphaBlendOp',b'\x00\x00\x1F\x11colorWriteMask'),(b'\x00\x00\x0B\x02\x00\x00\x00\x02VkPipelineColorBlendStateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11logicOpEnable',b'\x00\x04\x5F\x11logicOp',b'\x00\x00\x1F\x11attachmentCount',b'\x00\x0A\xFE\x11pAttachments',b'\x00\x0C\xC1\x11blendConstants'),(b'\x00\x00\x0B\x03\x00\x00\x00\x02VkPipelineColorWriteCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11attachmentCount',b'\x00\x04\x71\x11pColorWriteEnables'),(b'\x00\x00\x0B\x04\x00\x00\x00\x02VkPipelineCompilerControlCreateInfoAMD',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11compilerControlFlags'),(b'\x00\x00\x0B\x06\x00\x00\x00\x02VkPipelineCoverageModulationStateCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x09\x17\x11coverageModulationMode',b'\x00\x00\x1F\x11coverageModulationTableEnable',b'\x00\x00\x1F\x11coverageModulationTableCount',b'\x00\x04\xC6\x11pCoverageModulationTable'),(b'\x00\x00\x0B\x07\x00\x00\x00\x02VkPipelineCoverageReductionStateCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x09\x18\x11coverageReductionMode'),(b'\x00\x00\x0B\x08\x00\x00\x00\x02VkPipelineCoverageToColorStateCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11coverageToColorEnable',b'\x00\x00\x1F\x11coverageToColorLocation'),(b'\x00\x00\x0B\x0B\x00\x00\x00\x02VkPipelineCreationFeedback',b'\x00\x00\x1F\x11flags',b'\x00\x00\xEB\x11duration'),(b'\x00\x00\x0B\x0C\x00\x00\x00\x02VkPipelineCreationFeedbackCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0B\x0A\x11pPipelineCreationFeedback',b'\x00\x00\x1F\x11pipelineStageCreationFeedbackCount',b'\x00\x0B\x0A\x11pPipelineStageCreationFeedbacks'),(b'\x00\x00\x0B\x10\x00\x00\x00\x02VkPipelineDepthStencilStateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11depthTestEnable',b'\x00\x00\x1F\x11depthWriteEnable',b'\x00\x04\x19\x11depthCompareOp',b'\x00\x00\x1F\x11depthBoundsTestEnable',b'\x00\x00\x1F\x11stencilTestEnable',b'\x00\x0C\x6C\x11front',b'\x00\x0C\x6C\x11back',b'\x00\x04\xCA\x11minDepthBounds',b'\x00\x04\xCA\x11maxDepthBounds'),(b'\x00\x00\x0B\x11\x00\x00\x00\x02VkPipelineDiscardRectangleStateCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x09\x65\x11discardRectangleMode',b'\x00\x00\x1F\x11discardRectangleCount',b'\x00\x05\xCB\x11pDiscardRectangles'),(b'\x00\x00\x0B\x13\x00\x00\x00\x02VkPipelineDynamicStateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11dynamicStateCount',b'\x00\x09\x84\x11pDynamicStates'),(b'\x00\x00\x0B\x14\x00\x00\x00\x02VkPipelineExecutableInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xFB\x11pipeline',b'\x00\x00\x1F\x11executableIndex'),(b'\x00\x00\x0B\x15\x00\x00\x00\x02VkPipelineExecutableInternalRepresentationKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0C\xBA\x11name',b'\x00\x0C\xBA\x11description',b'\x00\x00\x1F\x11isText',b'\x00\x01\x69\x11dataSize',b'\x00\x01\x6A\x11pData'),(b'\x00\x00\x0B\x16\x00\x00\x00\x02VkPipelineExecutablePropertiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11stages',b'\x00\x0C\xBA\x11name',b'\x00\x0C\xBA\x11description',b'\x00\x00\x1F\x11subgroupSize'),(b'\x00\x00\x0B\x18\x00\x00\x00\x02VkPipelineExecutableStatisticKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0C\xBA\x11name',b'\x00\x0C\xBA\x11description',b'\x00\x0B\x17\x11format',b'\x00\x0B\x19\x11value'),(b'\x00\x00\x0B\x19\x00\x00\x00\x03VkPipelineExecutableStatisticValueKHR',b'\x00\x00\x1F\x11b32',b'\x00\x0C\xC5\x11i64',b'\x00\x00\xEB\x11u64',b'\x00\x0C\xBC\x11f64'),(b'\x00\x00\x0B\x1A\x00\x00\x00\x02VkPipelineFragmentShadingRateEnumStateCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\xAE\x11shadingRateType',b'\x00\x04\x52\x11shadingRate',b'\x00\x09\xAC\x11combinerOps'),(b'\x00\x00\x0B\x1B\x00\x00\x00\x02VkPipelineFragmentShadingRateStateCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\x8D\x11fragmentSize',b'\x00\x09\xAC\x11combinerOps'),(b'\x00\x00\x0B\x1C\x00\x00\x00\x02VkPipelineInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xFB\x11pipeline'),(b'\x00\x00\x0B\x1E\x00\x00\x00\x02VkPipelineInputAssemblyStateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x04\x8D\x11topology',b'\x00\x00\x1F\x11primitiveRestartEnable'),(b'\x00\x00\x0B\x20\x00\x00\x00\x02VkPipelineLayoutCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11setLayoutCount',b'\x00\x0C\xD5\x11pSetLayouts',b'\x00\x00\x1F\x11pushConstantRangeCount',b'\x00\x0B\x50\x11pPushConstantRanges'),(b'\x00\x00\x0C\xEB\x00\x00\x00\x10VkPipelineLayout_T',),(b'\x00\x00\x0B\x22\x00\x00\x00\x02VkPipelineLibraryCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11libraryCount',b'\x00\x0C\xEC\x11pLibraries'),(b'\x00\x00\x0B\x24\x00\x00\x00\x02VkPipelineMultisampleStateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x08\x0A\x11rasterizationSamples',b'\x00\x00\x1F\x11sampleShadingEnable',b'\x00\x04\xCA\x11minSampleShading',b'\x00\x04\x71\x11pSampleMask',b'\x00\x00\x1F\x11alphaToCoverageEnable',b'\x00\x00\x1F\x11alphaToOneEnable'),(b'\x00\x00\x0B\x25\x00\x00\x00\x02VkPipelineRasterizationConservativeStateCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x09\x0C\x11conservativeRasterizationMode',b'\x00\x04\xCA\x11extraPrimitiveOverestimationSize'),(b'\x00\x00\x0B\x26\x00\x00\x00\x02VkPipelineRasterizationDepthClipStateCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11depthClipEnable'),(b'\x00\x00\x0B\x27\x00\x00\x00\x02VkPipelineRasterizationLineStateCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0A\x01\x11lineRasterizationMode',b'\x00\x00\x1F\x11stippledLineEnable',b'\x00\x00\x1F\x11lineStippleFactor',b'\x00\x06\x0C\x11lineStipplePattern'),(b'\x00\x00\x0B\x28\x00\x00\x00\x02VkPipelineRasterizationProvokingVertexStateCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0B\x4F\x11provokingVertexMode'),(b'\x00\x00\x0B\x2A\x00\x00\x00\x02VkPipelineRasterizationStateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11depthClampEnable',b'\x00\x00\x1F\x11rasterizerDiscardEnable',b'\x00\x0B\x43\x11polygonMode',b'\x00\x00\x1F\x11cullMode',b'\x00\x04\x57\x11frontFace',b'\x00\x00\x1F\x11depthBiasEnable',b'\x00\x04\xCA\x11depthBiasConstantFactor',b'\x00\x04\xCA\x11depthBiasClamp',b'\x00\x04\xCA\x11depthBiasSlopeFactor',b'\x00\x04\xCA\x11lineWidth'),(b'\x00\x00\x0B\x2B\x00\x00\x00\x02VkPipelineRasterizationStateRasterizationOrderAMD',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0B\x62\x11rasterizationOrder'),(b'\x00\x00\x0B\x2C\x00\x00\x00\x02VkPipelineRasterizationStateStreamCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11rasterizationStream'),(b'\x00\x00\x0B\x2D\x00\x00\x00\x02VkPipelineRenderingCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11viewMask',b'\x00\x00\x1F\x11colorAttachmentCount',b'\x00\x09\xA5\x11pColorAttachmentFormats',b'\x00\x02\xDA\x11depthAttachmentFormat',b'\x00\x02\xDA\x11stencilAttachmentFormat'),(b'\x00\x00\x0B\x2E\x00\x00\x00\x02VkPipelineRepresentativeFragmentTestStateCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11representativeFragmentTestEnable'),(b'\x00\x00\x0B\x2F\x00\x00\x00\x02VkPipelineSampleLocationsStateCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11sampleLocationsEnable',b'\x00\x0C\x32\x11sampleLocationsInfo'),(b'\x00\x00\x0B\x32\x00\x00\x00\x02VkPipelineShaderStageCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x01\xFC\x11stage',b'\x00\x07\xAD\x11module',b'\x00\x00\x06\x11pName',b'\x00\x0C\x67\x11pSpecializationInfo'),(b'\x00\x00\x0B\x33\x00\x00\x00\x02VkPipelineShaderStageRequiredSubgroupSizeCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11requiredSubgroupSize'),(b'\x00\x00\x0B\x34\x00\x00\x00\x02VkPipelineTessellationDomainOriginStateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0C\x90\x11domainOrigin'),(b'\x00\x00\x0B\x36\x00\x00\x00\x02VkPipelineTessellationStateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11patchControlPoints'),(b'\x00\x00\x0B\x37\x00\x00\x00\x02VkPipelineVertexInputDivisorStateCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11vertexBindingDivisorCount',b'\x00\x0C\xA8\x11pVertexBindingDivisors'),(b'\x00\x00\x0B\x39\x00\x00\x00\x02VkPipelineVertexInputStateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11vertexBindingDescriptionCount',b'\x00\x0C\xA5\x11pVertexBindingDescriptions',b'\x00\x00\x1F\x11vertexAttributeDescriptionCount',b'\x00\x0C\xA2\x11pVertexAttributeDescriptions'),(b'\x00\x00\x0B\x3A\x00\x00\x00\x02VkPipelineViewportCoarseSampleOrderStateCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x04\x13\x11sampleOrderType',b'\x00\x00\x1F\x11customSampleOrderCount',b'\x00\x04\x15\x11pCustomSampleOrders'),(b'\x00\x00\x0B\x3B\x00\x00\x00\x02VkPipelineViewportDepthClipControlCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11negativeOneToOne'),(b'\x00\x00\x0B\x3C\x00\x00\x00\x02VkPipelineViewportExclusiveScissorStateCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11exclusiveScissorCount',b'\x00\x05\xCB\x11pExclusiveScissors'),(b'\x00\x00\x0B\x3D\x00\x00\x00\x02VkPipelineViewportShadingRateImageStateCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11shadingRateImageEnable',b'\x00\x00\x1F\x11viewportCount',b'\x00\x06\x22\x11pShadingRatePalettes'),(b'\x00\x00\x0B\x3F\x00\x00\x00\x02VkPipelineViewportStateCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11viewportCount',b'\x00\x05\xDF\x11pViewports',b'\x00\x00\x1F\x11scissorCount',b'\x00\x05\xCB\x11pScissors'),(b'\x00\x00\x0B\x40\x00\x00\x00\x02VkPipelineViewportSwizzleStateCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11viewportCount',b'\x00\x0C\xAD\x11pViewportSwizzles'),(b'\x00\x00\x0B\x41\x00\x00\x00\x02VkPipelineViewportWScalingStateCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11viewportWScalingEnable',b'\x00\x00\x1F\x11viewportCount',b'\x00\x06\x2E\x11pViewportWScalings'),(b'\x00\x00\x0C\xED\x00\x00\x00\x10VkPipeline_T',),(b'\x00\x00\x0B\x44\x00\x00\x00\x02VkPresentIdKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11swapchainCount',b'\x00\x05\xA7\x11pPresentIds'),(b'\x00\x00\x0B\x45\x00\x00\x00\x02VkPresentInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11waitSemaphoreCount',b'\x00\x0C\xF5\x11pWaitSemaphores',b'\x00\x00\x1F\x11swapchainCount',b'\x00\x07\xC9\x11pSwapchains',b'\x00\x04\x71\x11pImageIndices',b'\x00\x0B\x82\x11pResults'),(b'\x00\x00\x0B\x48\x00\x00\x00\x02VkPresentRegionKHR',b'\x00\x00\x1F\x11rectangleCount',b'\x00\x0B\x6D\x11pRectangles'),(b'\x00\x00\x0B\x49\x00\x00\x00\x02VkPresentRegionsKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11swapchainCount',b'\x00\x0B\x47\x11pRegions'),(b'\x00\x00\x0B\x4B\x00\x00\x00\x02VkPresentTimeGOOGLE',b'\x00\x00\x1F\x11presentID',b'\x00\x00\xEB\x11desiredPresentTime'),(b'\x00\x00\x0B\x4C\x00\x00\x00\x02VkPresentTimesInfoGOOGLE',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11swapchainCount',b'\x00\x0B\x4A\x11pTimes'),(b'\x00\x00\x0B\x4D\x00\x00\x00\x02VkPrivateDataSlotCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x0C\xEE\x00\x00\x00\x10VkPrivateDataSlot_T',),(b'\x00\x00\x0B\x4E\x00\x00\x00\x02VkProtectedSubmitInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11protectedSubmit'),(b'\x00\x00\x0B\x51\x00\x00\x00\x02VkPushConstantRange',b'\x00\x00\x1F\x11stageFlags',b'\x00\x00\x1F\x11offset',b'\x00\x00\x1F\x11size'),(b'\x00\x00\x0B\x54\x00\x00\x00\x02VkQueryPoolCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x02\x82\x11queryType',b'\x00\x00\x1F\x11queryCount',b'\x00\x00\x1F\x11pipelineStatistics'),(b'\x00\x00\x0B\x55\x00\x00\x00\x02VkQueryPoolPerformanceCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11queueFamilyIndex',b'\x00\x00\x1F\x11counterIndexCount',b'\x00\x04\x71\x11pCounterIndices'),(b'\x00\x00\x0B\x56\x00\x00\x00\x02VkQueryPoolPerformanceQueryCreateInfoINTEL',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0B\x57\x11performanceCountersSampling'),(b'\x00\x00\x0C\xEF\x00\x00\x00\x10VkQueryPool_T',),(b'\x00\x00\x0B\x59\x00\x00\x00\x02VkQueueFamilyCheckpointProperties2NV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\xEB\x11checkpointExecutionStageMask'),(b'\x00\x00\x0B\x5A\x00\x00\x00\x02VkQueueFamilyCheckpointPropertiesNV',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11checkpointExecutionStageMask'),(b'\x00\x00\x0B\x5B\x00\x00\x00\x02VkQueueFamilyGlobalPriorityPropertiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11priorityCount',b'\x00\x0B\x60\x11priorities'),(b'\x00\x00\x0B\x5D\x00\x00\x00\x02VkQueueFamilyProperties',b'\x00\x00\x1F\x11queueFlags',b'\x00\x00\x1F\x11queueCount',b'\x00\x00\x1F\x11timestampValidBits',b'\x00\x09\x8E\x11minImageTransferGranularity'),(b'\x00\x00\x0B\x5C\x00\x00\x00\x02VkQueueFamilyProperties2',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0B\x5D\x11queueFamilyProperties'),(b'\x00\x00\x0C\xF0\x00\x00\x00\x10VkQueue_T',),(b'\x00\x00\x0B\x63\x00\x00\x00\x02VkRayTracingPipelineCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11stageCount',b'\x00\x0B\x31\x11pStages',b'\x00\x00\x1F\x11groupCount',b'\x00\x0B\x67\x11pGroups',b'\x00\x00\x1F\x11maxPipelineRayRecursionDepth',b'\x00\x0B\x21\x11pLibraryInfo',b'\x00\x0B\x65\x11pLibraryInterface',b'\x00\x0B\x12\x11pDynamicState',b'\x00\x04\x64\x11layout',b'\x00\x01\xFB\x11basePipelineHandle',b'\x00\x03\x03\x11basePipelineIndex'),(b'\x00\x00\x0B\x64\x00\x00\x00\x02VkRayTracingPipelineCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11stageCount',b'\x00\x0B\x31\x11pStages',b'\x00\x00\x1F\x11groupCount',b'\x00\x0B\x69\x11pGroups',b'\x00\x00\x1F\x11maxRecursionDepth',b'\x00\x04\x64\x11layout',b'\x00\x01\xFB\x11basePipelineHandle',b'\x00\x03\x03\x11basePipelineIndex'),(b'\x00\x00\x0B\x66\x00\x00\x00\x02VkRayTracingPipelineInterfaceCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11maxPipelineRayPayloadSize',b'\x00\x00\x1F\x11maxPipelineRayHitAttributeSize'),(b'\x00\x00\x0B\x68\x00\x00\x00\x02VkRayTracingShaderGroupCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0B\x6B\x11type',b'\x00\x00\x1F\x11generalShader',b'\x00\x00\x1F\x11closestHitShader',b'\x00\x00\x1F\x11anyHitShader',b'\x00\x00\x1F\x11intersectionShader',b'\x00\x00\xA1\x11pShaderGroupCaptureReplayHandle'),(b'\x00\x00\x0B\x6A\x00\x00\x00\x02VkRayTracingShaderGroupCreateInfoNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0B\x6B\x11type',b'\x00\x00\x1F\x11generalShader',b'\x00\x00\x1F\x11closestHitShader',b'\x00\x00\x1F\x11anyHitShader',b'\x00\x00\x1F\x11intersectionShader'),(b'\x00\x00\x0B\x6C\x00\x00\x00\x02VkRect2D',b'\x00\x0A\x25\x11offset',b'\x00\x09\x8D\x11extent'),(b'\x00\x00\x0B\x6E\x00\x00\x00\x02VkRectLayerKHR',b'\x00\x0A\x25\x11offset',b'\x00\x09\x8D\x11extent',b'\x00\x00\x1F\x11layer'),(b'\x00\x00\x0B\x6F\x00\x00\x00\x02VkRefreshCycleDurationGOOGLE',b'\x00\x00\xEB\x11refreshDuration'),(b'\x00\x00\x0B\x70\x00\x00\x00\x02VkRenderPassAttachmentBeginInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11attachmentCount',b'\x00\x0C\xE0\x11pAttachments'),(b'\x00\x00\x0B\x71\x00\x00\x00\x02VkRenderPassBeginInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x1A\x11renderPass',b'\x00\x07\x50\x11framebuffer',b'\x00\x0B\x6C\x11renderArea',b'\x00\x00\x1F\x11clearValueCount',b'\x00\x08\xED\x11pClearValues'),(b'\x00\x00\x0B\x74\x00\x00\x00\x02VkRenderPassCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11attachmentCount',b'\x00\x08\xAE\x11pAttachments',b'\x00\x00\x1F\x11subpassCount',b'\x00\x0C\x78\x11pSubpasses',b'\x00\x00\x1F\x11dependencyCount',b'\x00\x0C\x74\x11pDependencies'),(b'\x00\x00\x0B\x73\x00\x00\x00\x02VkRenderPassCreateInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11attachmentCount',b'\x00\x08\xAF\x11pAttachments',b'\x00\x00\x1F\x11subpassCount',b'\x00\x0C\x79\x11pSubpasses',b'\x00\x00\x1F\x11dependencyCount',b'\x00\x0C\x75\x11pDependencies',b'\x00\x00\x1F\x11correlatedViewMaskCount',b'\x00\x04\x71\x11pCorrelatedViewMasks'),(b'\x00\x00\x0B\x75\x00\x00\x00\x02VkRenderPassFragmentDensityMapCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x08\xB8\x11fragmentDensityMapAttachment'),(b'\x00\x00\x0B\x76\x00\x00\x00\x02VkRenderPassInputAttachmentAspectCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11aspectReferenceCount',b'\x00\x09\xFC\x11pAspectReferences'),(b'\x00\x00\x0B\x77\x00\x00\x00\x02VkRenderPassMultiviewCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11subpassCount',b'\x00\x04\x71\x11pViewMasks',b'\x00\x00\x1F\x11dependencyCount',b'\x00\x05\xBE\x11pViewOffsets',b'\x00\x00\x1F\x11correlationMaskCount',b'\x00\x04\x71\x11pCorrelationMasks'),(b'\x00\x00\x0B\x78\x00\x00\x00\x02VkRenderPassSampleLocationsBeginInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11attachmentInitialSampleLocationsCount',b'\x00\x08\xBB\x11pAttachmentInitialSampleLocations',b'\x00\x00\x1F\x11postSubpassSampleLocationsCount',b'\x00\x0C\x80\x11pPostSubpassSampleLocations'),(b'\x00\x00\x0B\x79\x00\x00\x00\x02VkRenderPassTransformBeginInfoQCOM',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0C\x8B\x11transform'),(b'\x00\x00\x0C\xF1\x00\x00\x00\x10VkRenderPass_T',),(b'\x00\x00\x0B\x7B\x00\x00\x00\x02VkRenderingAttachmentInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC3\x11imageView',b'\x00\x04\xE8\x11imageLayout',b'\x00\x0B\x81\x11resolveMode',b'\x00\x01\xC3\x11resolveImageView',b'\x00\x04\xE8\x11resolveImageLayout',b'\x00\x08\xB4\x11loadOp',b'\x00\x08\xBD\x11storeOp',b'\x00\x08\xEE\x11clearValue'),(b'\x00\x00\x0B\x7D\x00\x00\x00\x02VkRenderingFragmentDensityMapAttachmentInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC3\x11imageView',b'\x00\x04\xE8\x11imageLayout'),(b'\x00\x00\x0B\x7E\x00\x00\x00\x02VkRenderingFragmentShadingRateAttachmentInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC3\x11imageView',b'\x00\x04\xE8\x11imageLayout',b'\x00\x09\x8D\x11shadingRateAttachmentTexelSize'),(b'\x00\x00\x0B\x7F\x00\x00\x00\x02VkRenderingInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x0B\x6C\x11renderArea',b'\x00\x00\x1F\x11layerCount',b'\x00\x00\x1F\x11viewMask',b'\x00\x00\x1F\x11colorAttachmentCount',b'\x00\x0B\x7A\x11pColorAttachments',b'\x00\x0B\x7A\x11pDepthAttachment',b'\x00\x0B\x7A\x11pStencilAttachment'),(b'\x00\x00\x0B\x80\x00\x00\x00\x02VkResolveImageInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x01\xC8\x11srcImage',b'\x00\x04\xE8\x11srcImageLayout',b'\x00\x01\xC8\x11dstImage',b'\x00\x04\xE8\x11dstImageLayout',b'\x00\x00\x1F\x11regionCount',b'\x00\x09\xDB\x11pRegions'),(b'\x00\x00\x0C\x2E\x00\x00\x00\x02VkSRTDataNV',b'\x00\x04\xCA\x11sx',b'\x00\x04\xCA\x11a',b'\x00\x04\xCA\x11b',b'\x00\x04\xCA\x11pvx',b'\x00\x04\xCA\x11sy',b'\x00\x04\xCA\x11c',b'\x00\x04\xCA\x11pvy',b'\x00\x04\xCA\x11sz',b'\x00\x04\xCA\x11pvz',b'\x00\x04\xCA\x11qx',b'\x00\x04\xCA\x11qy',b'\x00\x04\xCA\x11qz',b'\x00\x04\xCA\x11qw',b'\x00\x04\xCA\x11tx',b'\x00\x04\xCA\x11ty',b'\x00\x04\xCA\x11tz'),(b'\x00\x00\x0C\x31\x00\x00\x00\x02VkSampleLocationEXT',b'\x00\x04\xCA\x11x',b'\x00\x04\xCA\x11y'),(b'\x00\x00\x0C\x32\x00\x00\x00\x02VkSampleLocationsInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x08\x0A\x11sampleLocationsPerPixel',b'\x00\x09\x8D\x11sampleLocationGridSize',b'\x00\x00\x1F\x11sampleLocationsCount',b'\x00\x0C\x30\x11pSampleLocations'),(b'\x00\x00\x0C\x34\x00\x00\x00\x02VkSamplerBorderColorComponentMappingCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x09\x04\x11components',b'\x00\x00\x1F\x11srgb'),(b'\x00\x00\x0C\x36\x00\x00\x00\x02VkSamplerCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x05\x61\x11magFilter',b'\x00\x05\x61\x11minFilter',b'\x00\x0C\x38\x11mipmapMode',b'\x00\x0C\x33\x11addressModeU',b'\x00\x0C\x33\x11addressModeV',b'\x00\x0C\x33\x11addressModeW',b'\x00\x04\xCA\x11mipLodBias',b'\x00\x00\x1F\x11anisotropyEnable',b'\x00\x04\xCA\x11maxAnisotropy',b'\x00\x00\x1F\x11compareEnable',b'\x00\x04\x19\x11compareOp',b'\x00\x04\xCA\x11minLod',b'\x00\x04\xCA\x11maxLod',b'\x00\x08\xD1\x11borderColor',b'\x00\x00\x1F\x11unnormalizedCoordinates'),(b'\x00\x00\x0C\x37\x00\x00\x00\x02VkSamplerCustomBorderColorCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x08\xEA\x11customBorderColor',b'\x00\x02\xDA\x11format'),(b'\x00\x00\x0C\x3A\x00\x00\x00\x02VkSamplerReductionModeCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0C\x39\x11reductionMode'),(b'\x00\x00\x0C\x3B\x00\x00\x00\x02VkSamplerYcbcrConversionCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\xDA\x11format',b'\x00\x0C\x3E\x11ycbcrModel',b'\x00\x0C\x3F\x11ycbcrRange',b'\x00\x09\x04\x11components',b'\x00\x08\xE8\x11xChromaOffset',b'\x00\x08\xE8\x11yChromaOffset',b'\x00\x05\x61\x11chromaFilter',b'\x00\x00\x1F\x11forceExplicitReconstruction'),(b'\x00\x00\x0C\x3C\x00\x00\x00\x02VkSamplerYcbcrConversionImageFormatProperties',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11combinedImageSamplerDescriptorCount'),(b'\x00\x00\x0C\x3D\x00\x00\x00\x02VkSamplerYcbcrConversionInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x07\x9E\x11conversion'),(b'\x00\x00\x0C\xF2\x00\x00\x00\x10VkSamplerYcbcrConversion_T',),(b'\x00\x00\x0C\xF4\x00\x00\x00\x10VkSampler_T',),(b'\x00\x00\x0C\x41\x00\x00\x00\x02VkSemaphoreCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x0C\x42\x00\x00\x00\x02VkSemaphoreGetFdInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x1F\x11semaphore',b'\x00\x09\x9E\x11handleType'),(b'\x00\x00\x0C\x44\x00\x00\x00\x02VkSemaphoreSignalInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x1F\x11semaphore',b'\x00\x00\xEB\x11value'),(b'\x00\x00\x0C\x46\x00\x00\x00\x02VkSemaphoreSubmitInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x1F\x11semaphore',b'\x00\x00\xEB\x11value',b'\x00\x00\xEB\x11stageMask',b'\x00\x00\x1F\x11deviceIndex'),(b'\x00\x00\x0C\x48\x00\x00\x00\x02VkSemaphoreTypeCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0C\x47\x11semaphoreType',b'\x00\x00\xEB\x11initialValue'),(b'\x00\x00\x0C\x4A\x00\x00\x00\x02VkSemaphoreWaitInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11semaphoreCount',b'\x00\x0C\xF5\x11pSemaphores',b'\x00\x05\xA7\x11pValues'),(b'\x00\x00\x0C\xF6\x00\x00\x00\x10VkSemaphore_T',),(b'\x00\x00\x0C\x4B\x00\x00\x00\x02VkSetStateFlagsIndirectCommandNV',b'\x00\x00\x1F\x11data'),(b'\x00\x00\x0C\x4E\x00\x00\x00\x02VkShaderModuleCreateInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x01\x69\x11codeSize',b'\x00\x04\x71\x11pCode'),(b'\x00\x00\x0C\x4F\x00\x00\x00\x02VkShaderModuleValidationCacheCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x02\x52\x11validationCache'),(b'\x00\x00\x0C\xF7\x00\x00\x00\x10VkShaderModule_T',),(b'\x00\x00\x0C\x50\x00\x00\x00\x02VkShaderResourceUsageAMD',b'\x00\x00\x1F\x11numUsedVgprs',b'\x00\x00\x1F\x11numUsedSgprs',b'\x00\x00\x1F\x11ldsSizePerLocalWorkGroup',b'\x00\x01\x69\x11ldsUsageSizeInBytes',b'\x00\x01\x69\x11scratchMemUsageInBytes'),(b'\x00\x00\x0C\x51\x00\x00\x00\x02VkShaderStatisticsInfoAMD',b'\x00\x00\x1F\x11shaderStageMask',b'\x00\x0C\x50\x11resourceUsage',b'\x00\x00\x1F\x11numPhysicalVgprs',b'\x00\x00\x1F\x11numPhysicalSgprs',b'\x00\x00\x1F\x11numAvailableVgprs',b'\x00\x00\x1F\x11numAvailableSgprs',b'\x00\x0D\x09\x11computeWorkGroupSize'),(b'\x00\x00\x0C\x54\x00\x00\x00\x02VkShadingRatePaletteNV',b'\x00\x00\x1F\x11shadingRatePaletteEntryCount',b'\x00\x0C\x52\x11pShadingRatePaletteEntries'),(b'\x00\x00\x0C\x55\x00\x00\x00\x02VkSharedPresentSurfaceCapabilitiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11sharedPresentSupportedUsageFlags'),(b'\x00\x00\x0C\x58\x00\x00\x00\x02VkSparseBufferMemoryBindInfo',b'\x00\x01\x6E\x11buffer',b'\x00\x00\x1F\x11bindCount',b'\x00\x0C\x64\x11pBinds'),(b'\x00\x00\x0C\x5B\x00\x00\x00\x02VkSparseImageFormatProperties',b'\x00\x00\x1F\x11aspectMask',b'\x00\x09\x8E\x11imageGranularity',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x0C\x5A\x00\x00\x00\x02VkSparseImageFormatProperties2',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0C\x5B\x11properties'),(b'\x00\x00\x0C\x5D\x00\x00\x00\x02VkSparseImageMemoryBind',b'\x00\x09\xE0\x11subresource',b'\x00\x0A\x26\x11offset',b'\x00\x09\x8E\x11extent',b'\x00\x01\x6F\x11memory',b'\x00\x00\xEB\x11memoryOffset',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x0C\x5F\x00\x00\x00\x02VkSparseImageMemoryBindInfo',b'\x00\x01\xC8\x11image',b'\x00\x00\x1F\x11bindCount',b'\x00\x0C\x5C\x11pBinds'),(b'\x00\x00\x0C\x61\x00\x00\x00\x02VkSparseImageMemoryRequirements',b'\x00\x0C\x5B\x11formatProperties',b'\x00\x00\x1F\x11imageMipTailFirstLod',b'\x00\x00\xEB\x11imageMipTailSize',b'\x00\x00\xEB\x11imageMipTailOffset',b'\x00\x00\xEB\x11imageMipTailStride'),(b'\x00\x00\x0C\x60\x00\x00\x00\x02VkSparseImageMemoryRequirements2',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0C\x61\x11memoryRequirements'),(b'\x00\x00\x0C\x63\x00\x00\x00\x02VkSparseImageOpaqueMemoryBindInfo',b'\x00\x01\xC8\x11image',b'\x00\x00\x1F\x11bindCount',b'\x00\x0C\x64\x11pBinds'),(b'\x00\x00\x0C\x65\x00\x00\x00\x02VkSparseMemoryBind',b'\x00\x00\xEB\x11resourceOffset',b'\x00\x00\xEB\x11size',b'\x00\x01\x6F\x11memory',b'\x00\x00\xEB\x11memoryOffset',b'\x00\x00\x1F\x11flags'),(b'\x00\x00\x0C\x68\x00\x00\x00\x02VkSpecializationInfo',b'\x00\x00\x1F\x11mapEntryCount',b'\x00\x0C\x69\x11pMapEntries',b'\x00\x01\x69\x11dataSize',b'\x00\x00\xA1\x11pData'),(b'\x00\x00\x0C\x6A\x00\x00\x00\x02VkSpecializationMapEntry',b'\x00\x00\x1F\x11constantID',b'\x00\x00\x1F\x11offset',b'\x00\x01\x69\x11size'),(b'\x00\x00\x0C\x6C\x00\x00\x00\x02VkStencilOpState',b'\x00\x05\xD0\x11failOp',b'\x00\x05\xD0\x11passOp',b'\x00\x05\xD0\x11depthFailOp',b'\x00\x04\x19\x11compareOp',b'\x00\x00\x1F\x11compareMask',b'\x00\x00\x1F\x11writeMask',b'\x00\x00\x1F\x11reference'),(b'\x00\x00\x0C\x6D\x00\x00\x00\x02VkStridedDeviceAddressRegionKHR',b'\x00\x00\xEB\x11deviceAddress',b'\x00\x00\xEB\x11stride',b'\x00\x00\xEB\x11size'),(b'\x00\x00\x0C\x72\x00\x00\x00\x02VkSubmitInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11waitSemaphoreCount',b'\x00\x0C\xF5\x11pWaitSemaphores',b'\x00\x04\x71\x11pWaitDstStageMask',b'\x00\x00\x1F\x11commandBufferCount',b'\x00\x05\xF4\x11pCommandBuffers',b'\x00\x00\x1F\x11signalSemaphoreCount',b'\x00\x0C\xF5\x11pSignalSemaphores'),(b'\x00\x00\x0C\x71\x00\x00\x00\x02VkSubmitInfo2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x00\x1F\x11waitSemaphoreInfoCount',b'\x00\x0C\x45\x11pWaitSemaphoreInfos',b'\x00\x00\x1F\x11commandBufferInfoCount',b'\x00\x08\xFE\x11pCommandBufferInfos',b'\x00\x00\x1F\x11signalSemaphoreInfoCount',b'\x00\x0C\x45\x11pSignalSemaphoreInfos'),(b'\x00\x00\x0C\x73\x00\x00\x00\x02VkSubpassBeginInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x04\x97\x11contents'),(b'\x00\x00\x0C\x77\x00\x00\x00\x02VkSubpassDependency',b'\x00\x00\x1F\x11srcSubpass',b'\x00\x00\x1F\x11dstSubpass',b'\x00\x00\x1F\x11srcStageMask',b'\x00\x00\x1F\x11dstStageMask',b'\x00\x00\x1F\x11srcAccessMask',b'\x00\x00\x1F\x11dstAccessMask',b'\x00\x00\x1F\x11dependencyFlags'),(b'\x00\x00\x0C\x76\x00\x00\x00\x02VkSubpassDependency2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11srcSubpass',b'\x00\x00\x1F\x11dstSubpass',b'\x00\x00\x1F\x11srcStageMask',b'\x00\x00\x1F\x11dstStageMask',b'\x00\x00\x1F\x11srcAccessMask',b'\x00\x00\x1F\x11dstAccessMask',b'\x00\x00\x1F\x11dependencyFlags',b'\x00\x03\x03\x11viewOffset'),(b'\x00\x00\x0C\x7B\x00\x00\x00\x02VkSubpassDescription',b'\x00\x00\x1F\x11flags',b'\x00\x04\x63\x11pipelineBindPoint',b'\x00\x00\x1F\x11inputAttachmentCount',b'\x00\x08\xB5\x11pInputAttachments',b'\x00\x00\x1F\x11colorAttachmentCount',b'\x00\x08\xB5\x11pColorAttachments',b'\x00\x08\xB5\x11pResolveAttachments',b'\x00\x08\xB5\x11pDepthStencilAttachment',b'\x00\x00\x1F\x11preserveAttachmentCount',b'\x00\x04\x71\x11pPreserveAttachments'),(b'\x00\x00\x0C\x7A\x00\x00\x00\x02VkSubpassDescription2',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x04\x63\x11pipelineBindPoint',b'\x00\x00\x1F\x11viewMask',b'\x00\x00\x1F\x11inputAttachmentCount',b'\x00\x08\xB6\x11pInputAttachments',b'\x00\x00\x1F\x11colorAttachmentCount',b'\x00\x08\xB6\x11pColorAttachments',b'\x00\x08\xB6\x11pResolveAttachments',b'\x00\x08\xB6\x11pDepthStencilAttachment',b'\x00\x00\x1F\x11preserveAttachmentCount',b'\x00\x04\x71\x11pPreserveAttachments'),(b'\x00\x00\x0C\x7C\x00\x00\x00\x02VkSubpassDescriptionDepthStencilResolve',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x0B\x81\x11depthResolveMode',b'\x00\x0B\x81\x11stencilResolveMode',b'\x00\x08\xB6\x11pDepthStencilResolveAttachment'),(b'\x00\x00\x0C\x7E\x00\x00\x00\x02VkSubpassEndInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext'),(b'\x00\x00\x0C\x7F\x00\x00\x00\x02VkSubpassFragmentDensityMapOffsetEndInfoQCOM',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11fragmentDensityOffsetCount',b'\x00\x0A\x24\x11pFragmentDensityOffsets'),(b'\x00\x00\x0C\x81\x00\x00\x00\x02VkSubpassSampleLocationsEXT',b'\x00\x00\x1F\x11subpassIndex',b'\x00\x0C\x32\x11sampleLocationsInfo'),(b'\x00\x00\x0C\x82\x00\x00\x00\x02VkSubpassShadingPipelineCreateInfoHUAWEI',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x02\x1A\x11renderPass',b'\x00\x00\x1F\x11subpass'),(b'\x00\x00\x0C\x84\x00\x00\x00\x02VkSubresourceLayout',b'\x00\x00\xEB\x11offset',b'\x00\x00\xEB\x11size',b'\x00\x00\xEB\x11rowPitch',b'\x00\x00\xEB\x11arrayPitch',b'\x00\x00\xEB\x11depthPitch'),(b'\x00\x00\x0C\x85\x00\x00\x00\x02VkSurfaceCapabilities2EXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11minImageCount',b'\x00\x00\x1F\x11maxImageCount',b'\x00\x09\x8D\x11currentExtent',b'\x00\x09\x8D\x11minImageExtent',b'\x00\x09\x8D\x11maxImageExtent',b'\x00\x00\x1F\x11maxImageArrayLayers',b'\x00\x00\x1F\x11supportedTransforms',b'\x00\x0C\x8B\x11currentTransform',b'\x00\x00\x1F\x11supportedCompositeAlpha',b'\x00\x00\x1F\x11supportedUsageFlags',b'\x00\x00\x1F\x11supportedSurfaceCounters'),(b'\x00\x00\x0C\x86\x00\x00\x00\x02VkSurfaceCapabilities2KHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0C\x87\x11surfaceCapabilities'),(b'\x00\x00\x0C\x87\x00\x00\x00\x02VkSurfaceCapabilitiesKHR',b'\x00\x00\x1F\x11minImageCount',b'\x00\x00\x1F\x11maxImageCount',b'\x00\x09\x8D\x11currentExtent',b'\x00\x09\x8D\x11minImageExtent',b'\x00\x09\x8D\x11maxImageExtent',b'\x00\x00\x1F\x11maxImageArrayLayers',b'\x00\x00\x1F\x11supportedTransforms',b'\x00\x0C\x8B\x11currentTransform',b'\x00\x00\x1F\x11supportedCompositeAlpha',b'\x00\x00\x1F\x11supportedUsageFlags'),(b'\x00\x00\x0C\x88\x00\x00\x00\x02VkSurfaceFormat2KHR',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x0C\x89\x11surfaceFormat'),(b'\x00\x00\x0C\x89\x00\x00\x00\x02VkSurfaceFormatKHR',b'\x00\x02\xDA\x11format',b'\x00\x08\xF3\x11colorSpace'),(b'\x00\x00\x0C\xF8\x00\x00\x00\x10VkSurfaceKHR_T',),(b'\x00\x00\x0C\x8A\x00\x00\x00\x02VkSurfaceProtectedCapabilitiesKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11supportsProtected'),(b'\x00\x00\x0C\x8C\x00\x00\x00\x02VkSwapchainCounterCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11surfaceCounters'),(b'\x00\x00\x0C\x8E\x00\x00\x00\x02VkSwapchainCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x02\x24\x11surface',b'\x00\x00\x1F\x11minImageCount',b'\x00\x02\xDA\x11imageFormat',b'\x00\x08\xF3\x11imageColorSpace',b'\x00\x09\x8D\x11imageExtent',b'\x00\x00\x1F\x11imageArrayLayers',b'\x00\x00\x1F\x11imageUsage',b'\x00\x0C\x56\x11imageSharingMode',b'\x00\x00\x1F\x11queueFamilyIndexCount',b'\x00\x04\x71\x11pQueueFamilyIndices',b'\x00\x0C\x8B\x11preTransform',b'\x00\x09\x07\x11compositeAlpha',b'\x00\x0B\x46\x11presentMode',b'\x00\x00\x1F\x11clipped',b'\x00\x02\x29\x11oldSwapchain'),(b'\x00\x00\x0C\x8F\x00\x00\x00\x02VkSwapchainDisplayNativeHdrCreateInfoAMD',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11localDimmingEnable'),(b'\x00\x00\x0C\xF9\x00\x00\x00\x10VkSwapchainKHR_T',),(b'\x00\x00\x0C\x91\x00\x00\x00\x02VkTextureLODGatherFormatPropertiesAMD',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11supportsTextureGatherLODBiasAMD'),(b'\x00\x00\x0C\x93\x00\x00\x00\x02VkTimelineSemaphoreSubmitInfo',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11waitSemaphoreValueCount',b'\x00\x05\xA7\x11pWaitSemaphoreValues',b'\x00\x00\x1F\x11signalSemaphoreValueCount',b'\x00\x05\xA7\x11pSignalSemaphoreValues'),(b'\x00\x00\x0C\x95\x00\x00\x00\x02VkTraceRaysIndirectCommandKHR',b'\x00\x00\x1F\x11width',b'\x00\x00\x1F\x11height',b'\x00\x00\x1F\x11depth'),(b'\x00\x00\x0C\x96\x00\x00\x00\x02VkTransformMatrixKHR',b'\x00\x0C\xBF\x11matrix'),(b'\x00\x00\x0C\x97\x00\x00\x00\x02VkValidationCacheCreateInfoEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x01\x69\x11initialDataSize',b'\x00\x00\xA1\x11pInitialData'),(b'\x00\x00\x0C\xFA\x00\x00\x00\x10VkValidationCacheEXT_T',),(b'\x00\x00\x0C\x9F\x00\x00\x00\x02VkValidationFeaturesEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11enabledValidationFeatureCount',b'\x00\x0C\x9D\x11pEnabledValidationFeatures',b'\x00\x00\x1F\x11disabledValidationFeatureCount',b'\x00\x0C\x9B\x11pDisabledValidationFeatures'),(b'\x00\x00\x0C\xA0\x00\x00\x00\x02VkValidationFlagsEXT',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11disabledValidationCheckCount',b'\x00\x0C\x99\x11pDisabledValidationChecks'),(b'\x00\x00\x0C\xA4\x00\x00\x00\x02VkVertexInputAttributeDescription',b'\x00\x00\x1F\x11location',b'\x00\x00\x1F\x11binding',b'\x00\x02\xDA\x11format',b'\x00\x00\x1F\x11offset'),(b'\x00\x00\x0C\xA3\x00\x00\x00\x02VkVertexInputAttributeDescription2EXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11location',b'\x00\x00\x1F\x11binding',b'\x00\x02\xDA\x11format',b'\x00\x00\x1F\x11offset'),(b'\x00\x00\x0C\xA7\x00\x00\x00\x02VkVertexInputBindingDescription',b'\x00\x00\x1F\x11binding',b'\x00\x00\x1F\x11stride',b'\x00\x0C\xAA\x11inputRate'),(b'\x00\x00\x0C\xA6\x00\x00\x00\x02VkVertexInputBindingDescription2EXT',b'\x00\x0C\x6E\x11sType',b'\x00\x01\x6A\x11pNext',b'\x00\x00\x1F\x11binding',b'\x00\x00\x1F\x11stride',b'\x00\x0C\xAA\x11inputRate',b'\x00\x00\x1F\x11divisor'),(b'\x00\x00\x0C\xA9\x00\x00\x00\x02VkVertexInputBindingDivisorDescriptionEXT',b'\x00\x00\x1F\x11binding',b'\x00\x00\x1F\x11divisor'),(b'\x00\x00\x0C\xAB\x00\x00\x00\x02VkViewport',b'\x00\x04\xCA\x11x',b'\x00\x04\xCA\x11y',b'\x00\x04\xCA\x11width',b'\x00\x04\xCA\x11height',b'\x00\x04\xCA\x11minDepth',b'\x00\x04\xCA\x11maxDepth'),(b'\x00\x00\x0C\xAE\x00\x00\x00\x02VkViewportSwizzleNV',b'\x00\x0C\xAC\x11x',b'\x00\x0C\xAC\x11y',b'\x00\x0C\xAC\x11z',b'\x00\x0C\xAC\x11w'),(b'\x00\x00\x0C\xAF\x00\x00\x00\x02VkViewportWScalingNV',b'\x00\x04\xCA\x11xcoeff',b'\x00\x04\xCA\x11ycoeff'),(b'\x00\x00\x0C\xB0\x00\x00\x00\x02VkWaylandSurfaceCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x03\xCA\x11display',b'\x00\x0C\xFC\x11surface'),(b'\x00\x00\x0C\xB1\x00\x00\x00\x02VkWriteDescriptorSet',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x07\x23\x11dstSet',b'\x00\x00\x1F\x11dstBinding',b'\x00\x00\x1F\x11dstArrayElement',b'\x00\x00\x1F\x11descriptorCount',b'\x00\x09\x43\x11descriptorType',b'\x00\x09\x30\x11pImageInfo',b'\x00\x09\x2E\x11pBufferInfo',b'\x00\x0C\xCA\x11pTexelBufferView'),(b'\x00\x00\x0C\xB2\x00\x00\x00\x02VkWriteDescriptorSetAccelerationStructureKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11accelerationStructureCount',b'\x00\x02\x81\x11pAccelerationStructures'),(b'\x00\x00\x0C\xB3\x00\x00\x00\x02VkWriteDescriptorSetAccelerationStructureNV',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11accelerationStructureCount',b'\x00\x05\xEC\x11pAccelerationStructures'),(b'\x00\x00\x0C\xB4\x00\x00\x00\x02VkWriteDescriptorSetInlineUniformBlock',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11dataSize',b'\x00\x00\xA1\x11pData'),(b'\x00\x00\x0C\xB5\x00\x00\x00\x02VkXYColorEXT',b'\x00\x04\xCA\x11x',b'\x00\x04\xCA\x11y'),(b'\x00\x00\x0C\xB6\x00\x00\x00\x02VkXcbSurfaceCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x03\xCF\x11connection',b'\x00\x00\x1F\x11window'),(b'\x00\x00\x0C\xB7\x00\x00\x00\x02VkXlibSurfaceCreateInfoKHR',b'\x00\x0C\x6E\x11sType',b'\x00\x00\xA1\x11pNext',b'\x00\x00\x1F\x11flags',b'\x00\x03\xC4\x11dpy',b'\x00\x03\xC5\x11window'),(b'\x00\x00\x08\x83\x00\x00\x00\x02_SECURITY_ATTRIBUTES',b'\x00\x03\xC5\x11nLength',b'\x00\x01\x6A\x11lpSecurityDescriptor',b'\x00\x00\x9B\x11bInheritHandle'),(b'\x00\x00\x0C\xFB\x00\x00\x00\x10wl_display',),(b'\x00\x00\x0C\xFD\x00\x00\x00\x10wl_surface',),(b'\x00\x00\x0D\xE8\x00\x00\x00\x10xcb_connection_t',)),
    _enums = (b'\x00\x00\x06\x91\x00\x00\x00\x16VkAccelerationStructureBuildTypeKHR\x00VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR,VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR,VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR,VK_ACCELERATION_STRUCTURE_BUILD_TYPE_MAX_ENUM_KHR',b'\x00\x00\x08\x89\x00\x00\x00\x16VkAccelerationStructureCompatibilityKHR\x00VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR,VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR,VK_ACCELERATION_STRUCTURE_COMPATIBILITY_MAX_ENUM_KHR',b'\x00\x00\x08\x8A\x00\x00\x00\x16VkAccelerationStructureCreateFlagBitsKHR\x00VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR,VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV,VK_ACCELERATION_STRUCTURE_CREATE_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x08\x9A\x00\x00\x00\x16VkAccelerationStructureMemoryRequirementsTypeNV\x00VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV,VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV,VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV,VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV',b'\x00\x00\x08\x9E\x00\x00\x00\x16VkAccelerationStructureMotionInstanceTypeNV\x00VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV,VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV,VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV,VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MAX_ENUM_NV',b'\x00\x00\x08\xA0\x00\x00\x00\x16VkAccelerationStructureTypeKHR\x00VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR,VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR,VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR,VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV,VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV,VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR',b'\x00\x00\x08\xA2\x00\x00\x00\x16VkAccessFlagBits\x00VK_ACCESS_INDIRECT_COMMAND_READ_BIT,VK_ACCESS_INDEX_READ_BIT,VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT,VK_ACCESS_UNIFORM_READ_BIT,VK_ACCESS_INPUT_ATTACHMENT_READ_BIT,VK_ACCESS_SHADER_READ_BIT,VK_ACCESS_SHADER_WRITE_BIT,VK_ACCESS_COLOR_ATTACHMENT_READ_BIT,VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT,VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT,VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT,VK_ACCESS_TRANSFER_READ_BIT,VK_ACCESS_TRANSFER_WRITE_BIT,VK_ACCESS_HOST_READ_BIT,VK_ACCESS_HOST_WRITE_BIT,VK_ACCESS_MEMORY_READ_BIT,VK_ACCESS_MEMORY_WRITE_BIT,VK_ACCESS_NONE,VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT,VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT,VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT,VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT,VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT,VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR,VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR,VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT,VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR,VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV,VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV,VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV,VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV,VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV,VK_ACCESS_NONE_KHR,VK_ACCESS_FLAG_BITS_MAX_ENUM',b'\x00\x00\x08\xA4\x00\x00\x00\x16VkAcquireProfilingLockFlagBitsKHR\x00VK_ACQUIRE_PROFILING_LOCK_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x08\xB2\x00\x00\x00\x16VkAttachmentDescriptionFlagBits\x00VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT,VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM',b'\x00\x00\x08\xB4\x00\x00\x00\x16VkAttachmentLoadOp\x00VK_ATTACHMENT_LOAD_OP_LOAD,VK_ATTACHMENT_LOAD_OP_CLEAR,VK_ATTACHMENT_LOAD_OP_DONT_CARE,VK_ATTACHMENT_LOAD_OP_NONE_EXT,VK_ATTACHMENT_LOAD_OP_MAX_ENUM',b'\x00\x00\x08\xBD\x00\x00\x00\x16VkAttachmentStoreOp\x00VK_ATTACHMENT_STORE_OP_STORE,VK_ATTACHMENT_STORE_OP_DONT_CARE,VK_ATTACHMENT_STORE_OP_NONE,VK_ATTACHMENT_STORE_OP_NONE_KHR,VK_ATTACHMENT_STORE_OP_NONE_QCOM,VK_ATTACHMENT_STORE_OP_NONE_EXT,VK_ATTACHMENT_STORE_OP_MAX_ENUM',b'\x00\x00\x08\xCD\x00\x00\x00\x16VkBlendFactor\x00VK_BLEND_FACTOR_ZERO,VK_BLEND_FACTOR_ONE,VK_BLEND_FACTOR_SRC_COLOR,VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR,VK_BLEND_FACTOR_DST_COLOR,VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR,VK_BLEND_FACTOR_SRC_ALPHA,VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA,VK_BLEND_FACTOR_DST_ALPHA,VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA,VK_BLEND_FACTOR_CONSTANT_COLOR,VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR,VK_BLEND_FACTOR_CONSTANT_ALPHA,VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA,VK_BLEND_FACTOR_SRC_ALPHA_SATURATE,VK_BLEND_FACTOR_SRC1_COLOR,VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR,VK_BLEND_FACTOR_SRC1_ALPHA,VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA,VK_BLEND_FACTOR_MAX_ENUM',b'\x00\x00\x08\xCE\x00\x00\x00\x16VkBlendOp\x00VK_BLEND_OP_ADD,VK_BLEND_OP_SUBTRACT,VK_BLEND_OP_REVERSE_SUBTRACT,VK_BLEND_OP_MIN,VK_BLEND_OP_MAX,VK_BLEND_OP_ZERO_EXT,VK_BLEND_OP_SRC_EXT,VK_BLEND_OP_DST_EXT,VK_BLEND_OP_SRC_OVER_EXT,VK_BLEND_OP_DST_OVER_EXT,VK_BLEND_OP_SRC_IN_EXT,VK_BLEND_OP_DST_IN_EXT,VK_BLEND_OP_SRC_OUT_EXT,VK_BLEND_OP_DST_OUT_EXT,VK_BLEND_OP_SRC_ATOP_EXT,VK_BLEND_OP_DST_ATOP_EXT,VK_BLEND_OP_XOR_EXT,VK_BLEND_OP_MULTIPLY_EXT,VK_BLEND_OP_SCREEN_EXT,VK_BLEND_OP_OVERLAY_EXT,VK_BLEND_OP_DARKEN_EXT,VK_BLEND_OP_LIGHTEN_EXT,VK_BLEND_OP_COLORDODGE_EXT,VK_BLEND_OP_COLORBURN_EXT,VK_BLEND_OP_HARDLIGHT_EXT,VK_BLEND_OP_SOFTLIGHT_EXT,VK_BLEND_OP_DIFFERENCE_EXT,VK_BLEND_OP_EXCLUSION_EXT,VK_BLEND_OP_INVERT_EXT,VK_BLEND_OP_INVERT_RGB_EXT,VK_BLEND_OP_LINEARDODGE_EXT,VK_BLEND_OP_LINEARBURN_EXT,VK_BLEND_OP_VIVIDLIGHT_EXT,VK_BLEND_OP_LINEARLIGHT_EXT,VK_BLEND_OP_PINLIGHT_EXT,VK_BLEND_OP_HARDMIX_EXT,VK_BLEND_OP_HSL_HUE_EXT,VK_BLEND_OP_HSL_SATURATION_EXT,VK_BLEND_OP_HSL_COLOR_EXT,VK_BLEND_OP_HSL_LUMINOSITY_EXT,VK_BLEND_OP_PLUS_EXT,VK_BLEND_OP_PLUS_CLAMPED_EXT,VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT,VK_BLEND_OP_PLUS_DARKER_EXT,VK_BLEND_OP_MINUS_EXT,VK_BLEND_OP_MINUS_CLAMPED_EXT,VK_BLEND_OP_CONTRAST_EXT,VK_BLEND_OP_INVERT_OVG_EXT,VK_BLEND_OP_RED_EXT,VK_BLEND_OP_GREEN_EXT,VK_BLEND_OP_BLUE_EXT,VK_BLEND_OP_MAX_ENUM',b'\x00\x00\x08\xCF\x00\x00\x00\x16VkBlendOverlapEXT\x00VK_BLEND_OVERLAP_UNCORRELATED_EXT,VK_BLEND_OVERLAP_DISJOINT_EXT,VK_BLEND_OVERLAP_CONJOINT_EXT,VK_BLEND_OVERLAP_MAX_ENUM_EXT',b'\x00\x00\x08\xD1\x00\x00\x00\x16VkBorderColor\x00VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK,VK_BORDER_COLOR_INT_TRANSPARENT_BLACK,VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK,VK_BORDER_COLOR_INT_OPAQUE_BLACK,VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE,VK_BORDER_COLOR_INT_OPAQUE_WHITE,VK_BORDER_COLOR_FLOAT_CUSTOM_EXT,VK_BORDER_COLOR_INT_CUSTOM_EXT,VK_BORDER_COLOR_MAX_ENUM',b'\x00\x00\x08\xD5\x00\x00\x00\x16VkBufferCreateFlagBits\x00VK_BUFFER_CREATE_SPARSE_BINDING_BIT,VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT,VK_BUFFER_CREATE_SPARSE_ALIASED_BIT,VK_BUFFER_CREATE_PROTECTED_BIT,VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT,VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT,VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR,VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x08\xE1\x00\x00\x00\x16VkBufferUsageFlagBits\x00VK_BUFFER_USAGE_TRANSFER_SRC_BIT,VK_BUFFER_USAGE_TRANSFER_DST_BIT,VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT,VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT,VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,VK_BUFFER_USAGE_STORAGE_BUFFER_BIT,VK_BUFFER_USAGE_INDEX_BUFFER_BIT,VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT,VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT,VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT,VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT,VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT,VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR,VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR,VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR,VK_BUFFER_USAGE_RAY_TRACING_BIT_NV,VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT,VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR,VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x08\xE3\x00\x00\x00\x16VkBuildAccelerationStructureFlagBitsKHR\x00VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR,VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR,VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR,VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR,VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR,VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV,VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV,VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV,VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV,VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV,VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV,VK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x08\xE4\x00\x00\x00\x16VkBuildAccelerationStructureModeKHR\x00VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR,VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR,VK_BUILD_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR',b'\x00\x00\x08\xE8\x00\x00\x00\x16VkChromaLocation\x00VK_CHROMA_LOCATION_COSITED_EVEN,VK_CHROMA_LOCATION_MIDPOINT,VK_CHROMA_LOCATION_COSITED_EVEN_KHR,VK_CHROMA_LOCATION_MIDPOINT_KHR,VK_CHROMA_LOCATION_MAX_ENUM',b'\x00\x00\x04\x13\x00\x00\x00\x16VkCoarseSampleOrderTypeNV\x00VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV,VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV,VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV,VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV,VK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV',b'\x00\x00\x08\xF2\x00\x00\x00\x16VkColorComponentFlagBits\x00VK_COLOR_COMPONENT_R_BIT,VK_COLOR_COMPONENT_G_BIT,VK_COLOR_COMPONENT_B_BIT,VK_COLOR_COMPONENT_A_BIT,VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM',b'\x00\x00\x08\xF3\x00\x00\x00\x16VkColorSpaceKHR\x00VK_COLOR_SPACE_SRGB_NONLINEAR_KHR,VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT,VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT,VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT,VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT,VK_COLOR_SPACE_BT709_LINEAR_EXT,VK_COLOR_SPACE_BT709_NONLINEAR_EXT,VK_COLOR_SPACE_BT2020_LINEAR_EXT,VK_COLOR_SPACE_HDR10_ST2084_EXT,VK_COLOR_SPACE_DOLBYVISION_EXT,VK_COLOR_SPACE_HDR10_HLG_EXT,VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT,VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT,VK_COLOR_SPACE_PASS_THROUGH_EXT,VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT,VK_COLOR_SPACE_DISPLAY_NATIVE_AMD,VK_COLORSPACE_SRGB_NONLINEAR_KHR,VK_COLOR_SPACE_DCI_P3_LINEAR_EXT,VK_COLOR_SPACE_MAX_ENUM_KHR',b'\x00\x00\x08\xFC\x00\x00\x00\x16VkCommandBufferLevel\x00VK_COMMAND_BUFFER_LEVEL_PRIMARY,VK_COMMAND_BUFFER_LEVEL_SECONDARY,VK_COMMAND_BUFFER_LEVEL_MAX_ENUM',b'\x00\x00\x08\xFD\x00\x00\x00\x16VkCommandBufferResetFlagBits\x00VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT,VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x00\x00\x00\x00\x16VkCommandBufferUsageFlagBits\x00VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT,VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT,VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT,VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x01\x00\x00\x00\x16VkCommandPoolCreateFlagBits\x00VK_COMMAND_POOL_CREATE_TRANSIENT_BIT,VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT,VK_COMMAND_POOL_CREATE_PROTECTED_BIT,VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x03\x00\x00\x00\x16VkCommandPoolResetFlagBits\x00VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT,VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM',b'\x00\x00\x04\x19\x00\x00\x00\x16VkCompareOp\x00VK_COMPARE_OP_NEVER,VK_COMPARE_OP_LESS,VK_COMPARE_OP_EQUAL,VK_COMPARE_OP_LESS_OR_EQUAL,VK_COMPARE_OP_GREATER,VK_COMPARE_OP_NOT_EQUAL,VK_COMPARE_OP_GREATER_OR_EQUAL,VK_COMPARE_OP_ALWAYS,VK_COMPARE_OP_MAX_ENUM',b'\x00\x00\x09\x05\x00\x00\x00\x16VkComponentSwizzle\x00VK_COMPONENT_SWIZZLE_IDENTITY,VK_COMPONENT_SWIZZLE_ZERO,VK_COMPONENT_SWIZZLE_ONE,VK_COMPONENT_SWIZZLE_R,VK_COMPONENT_SWIZZLE_G,VK_COMPONENT_SWIZZLE_B,VK_COMPONENT_SWIZZLE_A,VK_COMPONENT_SWIZZLE_MAX_ENUM',b'\x00\x00\x09\x06\x00\x00\x00\x16VkComponentTypeNV\x00VK_COMPONENT_TYPE_FLOAT16_NV,VK_COMPONENT_TYPE_FLOAT32_NV,VK_COMPONENT_TYPE_FLOAT64_NV,VK_COMPONENT_TYPE_SINT8_NV,VK_COMPONENT_TYPE_SINT16_NV,VK_COMPONENT_TYPE_SINT32_NV,VK_COMPONENT_TYPE_SINT64_NV,VK_COMPONENT_TYPE_UINT8_NV,VK_COMPONENT_TYPE_UINT16_NV,VK_COMPONENT_TYPE_UINT32_NV,VK_COMPONENT_TYPE_UINT64_NV,VK_COMPONENT_TYPE_MAX_ENUM_NV',b'\x00\x00\x09\x07\x00\x00\x00\x16VkCompositeAlphaFlagBitsKHR\x00VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR,VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR,VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR,VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR,VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x09\x0A\x00\x00\x00\x16VkConditionalRenderingFlagBitsEXT\x00VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT,VK_CONDITIONAL_RENDERING_FLAG_BITS_MAX_ENUM_EXT',b'\x00\x00\x09\x0C\x00\x00\x00\x16VkConservativeRasterizationModeEXT\x00VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT,VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT,VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT,VK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT',b'\x00\x00\x04\xDB\x00\x00\x00\x16VkCopyAccelerationStructureModeKHR\x00VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR,VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR,VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR,VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR,VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV,VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV,VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR',b'\x00\x00\x09\x17\x00\x00\x00\x16VkCoverageModulationModeNV\x00VK_COVERAGE_MODULATION_MODE_NONE_NV,VK_COVERAGE_MODULATION_MODE_RGB_NV,VK_COVERAGE_MODULATION_MODE_ALPHA_NV,VK_COVERAGE_MODULATION_MODE_RGBA_NV,VK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV',b'\x00\x00\x09\x18\x00\x00\x00\x16VkCoverageReductionModeNV\x00VK_COVERAGE_REDUCTION_MODE_MERGE_NV,VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV,VK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV',b'\x00\x00\x09\x1C\x00\x00\x00\x16VkCullModeFlagBits\x00VK_CULL_MODE_NONE,VK_CULL_MODE_FRONT_BIT,VK_CULL_MODE_BACK_BIT,VK_CULL_MODE_FRONT_AND_BACK,VK_CULL_MODE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x21\x00\x00\x00\x16VkDebugReportFlagBitsEXT\x00VK_DEBUG_REPORT_INFORMATION_BIT_EXT,VK_DEBUG_REPORT_WARNING_BIT_EXT,VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT,VK_DEBUG_REPORT_ERROR_BIT_EXT,VK_DEBUG_REPORT_DEBUG_BIT_EXT,VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT',b'\x00\x00\x03\xD4\x00\x00\x00\x16VkDebugReportObjectTypeEXT\x00VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT,VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT',b'\x00\x00\x03\xB4\x00\x00\x00\x16VkDebugUtilsMessageSeverityFlagBitsEXT\x00VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT,VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT,VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT,VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT,VK_DEBUG_UTILS_MESSAGE_SEVERITY_FLAG_BITS_MAX_ENUM_EXT',b'\x00\x00\x09\x23\x00\x00\x00\x16VkDebugUtilsMessageTypeFlagBitsEXT\x00VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT,VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT,VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT,VK_DEBUG_UTILS_MESSAGE_TYPE_FLAG_BITS_MAX_ENUM_EXT',b'\x00\x00\x09\x2B\x00\x00\x00\x16VkDependencyFlagBits\x00VK_DEPENDENCY_BY_REGION_BIT,VK_DEPENDENCY_DEVICE_GROUP_BIT,VK_DEPENDENCY_VIEW_LOCAL_BIT,VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR,VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR,VK_DEPENDENCY_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x2D\x00\x00\x00\x16VkDescriptorBindingFlagBits\x00VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT,VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT,VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT,VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT,VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT,VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT,VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT,VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT,VK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x32\x00\x00\x00\x16VkDescriptorPoolCreateFlagBits\x00VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT,VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT,VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE,VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT,VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x3C\x00\x00\x00\x16VkDescriptorSetLayoutCreateFlagBits\x00VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT,VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR,VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE,VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT,VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x43\x00\x00\x00\x16VkDescriptorType\x00VK_DESCRIPTOR_TYPE_SAMPLER,VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER,VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER,VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC,VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC,VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT,VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK,VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR,VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV,VK_DESCRIPTOR_TYPE_MUTABLE_VALVE,VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT,VK_DESCRIPTOR_TYPE_MAX_ENUM',b'\x00\x00\x09\x47\x00\x00\x00\x16VkDescriptorUpdateTemplateType\x00VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET,VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR,VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR,VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM',b'\x00\x00\x09\x4C\x00\x00\x00\x16VkDeviceDiagnosticsConfigFlagBitsNV\x00VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV,VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV,VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV,VK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV',b'\x00\x00\x09\x4E\x00\x00\x00\x16VkDeviceEventTypeEXT\x00VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT,VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT',b'\x00\x00\x09\x54\x00\x00\x00\x16VkDeviceGroupPresentModeFlagBitsKHR\x00VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR,VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR,VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR,VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR,VK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x09\x5C\x00\x00\x00\x16VkDeviceMemoryReportEventTypeEXT\x00VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT,VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT,VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT,VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT,VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT,VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_MAX_ENUM_EXT',b'\x00\x00\x09\x60\x00\x00\x00\x16VkDeviceQueueCreateFlagBits\x00VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT,VK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x65\x00\x00\x00\x16VkDiscardRectangleModeEXT\x00VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT,VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT,VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT',b'\x00\x00\x09\x68\x00\x00\x00\x16VkDisplayEventTypeEXT\x00VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT,VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT',b'\x00\x00\x09\x6E\x00\x00\x00\x16VkDisplayPlaneAlphaFlagBitsKHR\x00VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR,VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR,VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR,VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR,VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x09\x75\x00\x00\x00\x16VkDisplayPowerStateEXT\x00VK_DISPLAY_POWER_STATE_OFF_EXT,VK_DISPLAY_POWER_STATE_SUSPEND_EXT,VK_DISPLAY_POWER_STATE_ON_EXT,VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT',b'\x00\x00\x09\x7D\x00\x00\x00\x16VkDriverId\x00VK_DRIVER_ID_AMD_PROPRIETARY,VK_DRIVER_ID_AMD_OPEN_SOURCE,VK_DRIVER_ID_MESA_RADV,VK_DRIVER_ID_NVIDIA_PROPRIETARY,VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS,VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA,VK_DRIVER_ID_IMAGINATION_PROPRIETARY,VK_DRIVER_ID_QUALCOMM_PROPRIETARY,VK_DRIVER_ID_ARM_PROPRIETARY,VK_DRIVER_ID_GOOGLE_SWIFTSHADER,VK_DRIVER_ID_GGP_PROPRIETARY,VK_DRIVER_ID_BROADCOM_PROPRIETARY,VK_DRIVER_ID_MESA_LLVMPIPE,VK_DRIVER_ID_MOLTENVK,VK_DRIVER_ID_COREAVI_PROPRIETARY,VK_DRIVER_ID_JUICE_PROPRIETARY,VK_DRIVER_ID_VERISILICON_PROPRIETARY,VK_DRIVER_ID_MESA_TURNIP,VK_DRIVER_ID_MESA_V3DV,VK_DRIVER_ID_MESA_PANVK,VK_DRIVER_ID_SAMSUNG_PROPRIETARY,VK_DRIVER_ID_MESA_VENUS,VK_DRIVER_ID_AMD_PROPRIETARY_KHR,VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR,VK_DRIVER_ID_MESA_RADV_KHR,VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR,VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR,VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR,VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR,VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR,VK_DRIVER_ID_ARM_PROPRIETARY_KHR,VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR,VK_DRIVER_ID_GGP_PROPRIETARY_KHR,VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR,VK_DRIVER_ID_MAX_ENUM',b'\x00\x00\x09\x85\x00\x00\x00\x16VkDynamicState\x00VK_DYNAMIC_STATE_VIEWPORT,VK_DYNAMIC_STATE_SCISSOR,VK_DYNAMIC_STATE_LINE_WIDTH,VK_DYNAMIC_STATE_DEPTH_BIAS,VK_DYNAMIC_STATE_BLEND_CONSTANTS,VK_DYNAMIC_STATE_DEPTH_BOUNDS,VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK,VK_DYNAMIC_STATE_STENCIL_WRITE_MASK,VK_DYNAMIC_STATE_STENCIL_REFERENCE,VK_DYNAMIC_STATE_CULL_MODE,VK_DYNAMIC_STATE_FRONT_FACE,VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY,VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT,VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT,VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE,VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE,VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE,VK_DYNAMIC_STATE_DEPTH_COMPARE_OP,VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE,VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE,VK_DYNAMIC_STATE_STENCIL_OP,VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE,VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE,VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE,VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV,VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT,VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT,VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR,VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV,VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV,VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV,VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR,VK_DYNAMIC_STATE_LINE_STIPPLE_EXT,VK_DYNAMIC_STATE_VERTEX_INPUT_EXT,VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT,VK_DYNAMIC_STATE_LOGIC_OP_EXT,VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT,VK_DYNAMIC_STATE_CULL_MODE_EXT,VK_DYNAMIC_STATE_FRONT_FACE_EXT,VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT,VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT,VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT,VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT,VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT,VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT,VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT,VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT,VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT,VK_DYNAMIC_STATE_STENCIL_OP_EXT,VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT,VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT,VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT,VK_DYNAMIC_STATE_MAX_ENUM',b'\x00\x00\x09\x86\x00\x00\x00\x16VkEventCreateFlagBits\x00VK_EVENT_CREATE_DEVICE_ONLY_BIT,VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR,VK_EVENT_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x90\x00\x00\x00\x16VkExternalFenceFeatureFlagBits\x00VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT,VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT,VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR,VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR,VK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x91\x00\x00\x00\x16VkExternalFenceHandleTypeFlagBits\x00VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT,VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT,VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT,VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR,VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR,VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR,VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR,VK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x97\x00\x00\x00\x16VkExternalMemoryFeatureFlagBits\x00VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT,VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT,VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT,VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR,VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR,VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR,VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x98\x00\x00\x00\x16VkExternalMemoryFeatureFlagBitsNV\x00VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV,VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV,VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV,VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV',b'\x00\x00\x00\x9A\x00\x00\x00\x16VkExternalMemoryHandleTypeFlagBits\x00VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT,VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT,VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT,VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT,VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT,VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT,VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT,VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID,VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT,VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT,VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA,VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV,VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR,VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR,VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR,VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR,VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR,VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR,VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR,VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x99\x00\x00\x00\x16VkExternalMemoryHandleTypeFlagBitsNV\x00VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV,VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV,VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV,VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV,VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV',b'\x00\x00\x09\x9D\x00\x00\x00\x16VkExternalSemaphoreFeatureFlagBits\x00VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT,VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT,VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR,VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR,VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\x9E\x00\x00\x00\x16VkExternalSemaphoreHandleTypeFlagBits\x00VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR,VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\xA0\x00\x00\x00\x16VkFenceCreateFlagBits\x00VK_FENCE_CREATE_SIGNALED_BIT,VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\xA3\x00\x00\x00\x16VkFenceImportFlagBits\x00VK_FENCE_IMPORT_TEMPORARY_BIT,VK_FENCE_IMPORT_TEMPORARY_BIT_KHR,VK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM',b'\x00\x00\x05\x61\x00\x00\x00\x16VkFilter\x00VK_FILTER_NEAREST,VK_FILTER_LINEAR,VK_FILTER_CUBIC_IMG,VK_FILTER_CUBIC_EXT,VK_FILTER_MAX_ENUM',b'\x00\x00\x02\xDA\x00\x00\x00\x16VkFormat\x00VK_FORMAT_UNDEFINED,VK_FORMAT_R4G4_UNORM_PACK8,VK_FORMAT_R4G4B4A4_UNORM_PACK16,VK_FORMAT_B4G4R4A4_UNORM_PACK16,VK_FORMAT_R5G6B5_UNORM_PACK16,VK_FORMAT_B5G6R5_UNORM_PACK16,VK_FORMAT_R5G5B5A1_UNORM_PACK16,VK_FORMAT_B5G5R5A1_UNORM_PACK16,VK_FORMAT_A1R5G5B5_UNORM_PACK16,VK_FORMAT_R8_UNORM,VK_FORMAT_R8_SNORM,VK_FORMAT_R8_USCALED,VK_FORMAT_R8_SSCALED,VK_FORMAT_R8_UINT,VK_FORMAT_R8_SINT,VK_FORMAT_R8_SRGB,VK_FORMAT_R8G8_UNORM,VK_FORMAT_R8G8_SNORM,VK_FORMAT_R8G8_USCALED,VK_FORMAT_R8G8_SSCALED,VK_FORMAT_R8G8_UINT,VK_FORMAT_R8G8_SINT,VK_FORMAT_R8G8_SRGB,VK_FORMAT_R8G8B8_UNORM,VK_FORMAT_R8G8B8_SNORM,VK_FORMAT_R8G8B8_USCALED,VK_FORMAT_R8G8B8_SSCALED,VK_FORMAT_R8G8B8_UINT,VK_FORMAT_R8G8B8_SINT,VK_FORMAT_R8G8B8_SRGB,VK_FORMAT_B8G8R8_UNORM,VK_FORMAT_B8G8R8_SNORM,VK_FORMAT_B8G8R8_USCALED,VK_FORMAT_B8G8R8_SSCALED,VK_FORMAT_B8G8R8_UINT,VK_FORMAT_B8G8R8_SINT,VK_FORMAT_B8G8R8_SRGB,VK_FORMAT_R8G8B8A8_UNORM,VK_FORMAT_R8G8B8A8_SNORM,VK_FORMAT_R8G8B8A8_USCALED,VK_FORMAT_R8G8B8A8_SSCALED,VK_FORMAT_R8G8B8A8_UINT,VK_FORMAT_R8G8B8A8_SINT,VK_FORMAT_R8G8B8A8_SRGB,VK_FORMAT_B8G8R8A8_UNORM,VK_FORMAT_B8G8R8A8_SNORM,VK_FORMAT_B8G8R8A8_USCALED,VK_FORMAT_B8G8R8A8_SSCALED,VK_FORMAT_B8G8R8A8_UINT,VK_FORMAT_B8G8R8A8_SINT,VK_FORMAT_B8G8R8A8_SRGB,VK_FORMAT_A8B8G8R8_UNORM_PACK32,VK_FORMAT_A8B8G8R8_SNORM_PACK32,VK_FORMAT_A8B8G8R8_USCALED_PACK32,VK_FORMAT_A8B8G8R8_SSCALED_PACK32,VK_FORMAT_A8B8G8R8_UINT_PACK32,VK_FORMAT_A8B8G8R8_SINT_PACK32,VK_FORMAT_A8B8G8R8_SRGB_PACK32,VK_FORMAT_A2R10G10B10_UNORM_PACK32,VK_FORMAT_A2R10G10B10_SNORM_PACK32,VK_FORMAT_A2R10G10B10_USCALED_PACK32,VK_FORMAT_A2R10G10B10_SSCALED_PACK32,VK_FORMAT_A2R10G10B10_UINT_PACK32,VK_FORMAT_A2R10G10B10_SINT_PACK32,VK_FORMAT_A2B10G10R10_UNORM_PACK32,VK_FORMAT_A2B10G10R10_SNORM_PACK32,VK_FORMAT_A2B10G10R10_USCALED_PACK32,VK_FORMAT_A2B10G10R10_SSCALED_PACK32,VK_FORMAT_A2B10G10R10_UINT_PACK32,VK_FORMAT_A2B10G10R10_SINT_PACK32,VK_FORMAT_R16_UNORM,VK_FORMAT_R16_SNORM,VK_FORMAT_R16_USCALED,VK_FORMAT_R16_SSCALED,VK_FORMAT_R16_UINT,VK_FORMAT_R16_SINT,VK_FORMAT_R16_SFLOAT,VK_FORMAT_R16G16_UNORM,VK_FORMAT_R16G16_SNORM,VK_FORMAT_R16G16_USCALED,VK_FORMAT_R16G16_SSCALED,VK_FORMAT_R16G16_UINT,VK_FORMAT_R16G16_SINT,VK_FORMAT_R16G16_SFLOAT,VK_FORMAT_R16G16B16_UNORM,VK_FORMAT_R16G16B16_SNORM,VK_FORMAT_R16G16B16_USCALED,VK_FORMAT_R16G16B16_SSCALED,VK_FORMAT_R16G16B16_UINT,VK_FORMAT_R16G16B16_SINT,VK_FORMAT_R16G16B16_SFLOAT,VK_FORMAT_R16G16B16A16_UNORM,VK_FORMAT_R16G16B16A16_SNORM,VK_FORMAT_R16G16B16A16_USCALED,VK_FORMAT_R16G16B16A16_SSCALED,VK_FORMAT_R16G16B16A16_UINT,VK_FORMAT_R16G16B16A16_SINT,VK_FORMAT_R16G16B16A16_SFLOAT,VK_FORMAT_R32_UINT,VK_FORMAT_R32_SINT,VK_FORMAT_R32_SFLOAT,VK_FORMAT_R32G32_UINT,VK_FORMAT_R32G32_SINT,VK_FORMAT_R32G32_SFLOAT,VK_FORMAT_R32G32B32_UINT,VK_FORMAT_R32G32B32_SINT,VK_FORMAT_R32G32B32_SFLOAT,VK_FORMAT_R32G32B32A32_UINT,VK_FORMAT_R32G32B32A32_SINT,VK_FORMAT_R32G32B32A32_SFLOAT,VK_FORMAT_R64_UINT,VK_FORMAT_R64_SINT,VK_FORMAT_R64_SFLOAT,VK_FORMAT_R64G64_UINT,VK_FORMAT_R64G64_SINT,VK_FORMAT_R64G64_SFLOAT,VK_FORMAT_R64G64B64_UINT,VK_FORMAT_R64G64B64_SINT,VK_FORMAT_R64G64B64_SFLOAT,VK_FORMAT_R64G64B64A64_UINT,VK_FORMAT_R64G64B64A64_SINT,VK_FORMAT_R64G64B64A64_SFLOAT,VK_FORMAT_B10G11R11_UFLOAT_PACK32,VK_FORMAT_E5B9G9R9_UFLOAT_PACK32,VK_FORMAT_D16_UNORM,VK_FORMAT_X8_D24_UNORM_PACK32,VK_FORMAT_D32_SFLOAT,VK_FORMAT_S8_UINT,VK_FORMAT_D16_UNORM_S8_UINT,VK_FORMAT_D24_UNORM_S8_UINT,VK_FORMAT_D32_SFLOAT_S8_UINT,VK_FORMAT_BC1_RGB_UNORM_BLOCK,VK_FORMAT_BC1_RGB_SRGB_BLOCK,VK_FORMAT_BC1_RGBA_UNORM_BLOCK,VK_FORMAT_BC1_RGBA_SRGB_BLOCK,VK_FORMAT_BC2_UNORM_BLOCK,VK_FORMAT_BC2_SRGB_BLOCK,VK_FORMAT_BC3_UNORM_BLOCK,VK_FORMAT_BC3_SRGB_BLOCK,VK_FORMAT_BC4_UNORM_BLOCK,VK_FORMAT_BC4_SNORM_BLOCK,VK_FORMAT_BC5_UNORM_BLOCK,VK_FORMAT_BC5_SNORM_BLOCK,VK_FORMAT_BC6H_UFLOAT_BLOCK,VK_FORMAT_BC6H_SFLOAT_BLOCK,VK_FORMAT_BC7_UNORM_BLOCK,VK_FORMAT_BC7_SRGB_BLOCK,VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK,VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK,VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK,VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK,VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK,VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK,VK_FORMAT_EAC_R11_UNORM_BLOCK,VK_FORMAT_EAC_R11_SNORM_BLOCK,VK_FORMAT_EAC_R11G11_UNORM_BLOCK,VK_FORMAT_EAC_R11G11_SNORM_BLOCK,VK_FORMAT_ASTC_4x4_UNORM_BLOCK,VK_FORMAT_ASTC_4x4_SRGB_BLOCK,VK_FORMAT_ASTC_5x4_UNORM_BLOCK,VK_FORMAT_ASTC_5x4_SRGB_BLOCK,VK_FORMAT_ASTC_5x5_UNORM_BLOCK,VK_FORMAT_ASTC_5x5_SRGB_BLOCK,VK_FORMAT_ASTC_6x5_UNORM_BLOCK,VK_FORMAT_ASTC_6x5_SRGB_BLOCK,VK_FORMAT_ASTC_6x6_UNORM_BLOCK,VK_FORMAT_ASTC_6x6_SRGB_BLOCK,VK_FORMAT_ASTC_8x5_UNORM_BLOCK,VK_FORMAT_ASTC_8x5_SRGB_BLOCK,VK_FORMAT_ASTC_8x6_UNORM_BLOCK,VK_FORMAT_ASTC_8x6_SRGB_BLOCK,VK_FORMAT_ASTC_8x8_UNORM_BLOCK,VK_FORMAT_ASTC_8x8_SRGB_BLOCK,VK_FORMAT_ASTC_10x5_UNORM_BLOCK,VK_FORMAT_ASTC_10x5_SRGB_BLOCK,VK_FORMAT_ASTC_10x6_UNORM_BLOCK,VK_FORMAT_ASTC_10x6_SRGB_BLOCK,VK_FORMAT_ASTC_10x8_UNORM_BLOCK,VK_FORMAT_ASTC_10x8_SRGB_BLOCK,VK_FORMAT_ASTC_10x10_UNORM_BLOCK,VK_FORMAT_ASTC_10x10_SRGB_BLOCK,VK_FORMAT_ASTC_12x10_UNORM_BLOCK,VK_FORMAT_ASTC_12x10_SRGB_BLOCK,VK_FORMAT_ASTC_12x12_UNORM_BLOCK,VK_FORMAT_ASTC_12x12_SRGB_BLOCK,VK_FORMAT_G8B8G8R8_422_UNORM,VK_FORMAT_B8G8R8G8_422_UNORM,VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM,VK_FORMAT_G8_B8R8_2PLANE_420_UNORM,VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM,VK_FORMAT_G8_B8R8_2PLANE_422_UNORM,VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM,VK_FORMAT_R10X6_UNORM_PACK16,VK_FORMAT_R10X6G10X6_UNORM_2PACK16,VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16,VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16,VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16,VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16,VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16,VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16,VK_FORMAT_R12X4_UNORM_PACK16,VK_FORMAT_R12X4G12X4_UNORM_2PACK16,VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16,VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16,VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16,VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16,VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16,VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16,VK_FORMAT_G16B16G16R16_422_UNORM,VK_FORMAT_B16G16R16G16_422_UNORM,VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM,VK_FORMAT_G16_B16R16_2PLANE_420_UNORM,VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM,VK_FORMAT_G16_B16R16_2PLANE_422_UNORM,VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM,VK_FORMAT_G8_B8R8_2PLANE_444_UNORM,VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16,VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16,VK_FORMAT_G16_B16R16_2PLANE_444_UNORM,VK_FORMAT_A4R4G4B4_UNORM_PACK16,VK_FORMAT_A4B4G4R4_UNORM_PACK16,VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK,VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK,VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK,VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK,VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK,VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK,VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK,VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK,VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK,VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK,VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK,VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK,VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK,VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK,VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG,VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG,VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG,VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG,VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG,VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG,VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG,VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG,VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT,VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT,VK_FORMAT_G8B8G8R8_422_UNORM_KHR,VK_FORMAT_B8G8R8G8_422_UNORM_KHR,VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR,VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR,VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR,VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR,VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR,VK_FORMAT_R10X6_UNORM_PACK16_KHR,VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR,VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR,VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR,VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR,VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR,VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR,VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR,VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR,VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR,VK_FORMAT_R12X4_UNORM_PACK16_KHR,VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR,VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR,VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR,VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR,VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR,VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR,VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR,VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR,VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR,VK_FORMAT_G16B16G16R16_422_UNORM_KHR,VK_FORMAT_B16G16R16G16_422_UNORM_KHR,VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR,VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR,VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR,VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR,VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR,VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT,VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT,VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT,VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT,VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT,VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT,VK_FORMAT_MAX_ENUM',b'\x00\x00\x09\xA6\x00\x00\x00\x16VkFormatFeatureFlagBits\x00VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT,VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT,VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT,VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT,VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT,VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT,VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT,VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT,VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT,VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT,VK_FORMAT_FEATURE_BLIT_SRC_BIT,VK_FORMAT_FEATURE_BLIT_DST_BIT,VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT,VK_FORMAT_FEATURE_TRANSFER_SRC_BIT,VK_FORMAT_FEATURE_TRANSFER_DST_BIT,VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT,VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT,VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT,VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT,VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT,VK_FORMAT_FEATURE_DISJOINT_BIT,VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT,VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT,VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG,VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR,VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT,VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR,VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR,VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT,VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR,VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR,VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR,VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR,VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR,VK_FORMAT_FEATURE_DISJOINT_BIT_KHR,VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR,VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT,VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\xAB\x00\x00\x00\x16VkFragmentShadingRateCombinerOpKHR\x00VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR,VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR,VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR,VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR,VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR,VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_ENUM_KHR',b'\x00\x00\x04\x52\x00\x00\x00\x16VkFragmentShadingRateNV\x00VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV,VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV,VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV,VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV,VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV,VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV,VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV,VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV,VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV,VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV,VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV,VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV,VK_FRAGMENT_SHADING_RATE_MAX_ENUM_NV',b'\x00\x00\x09\xAE\x00\x00\x00\x16VkFragmentShadingRateTypeNV\x00VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV,VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV,VK_FRAGMENT_SHADING_RATE_TYPE_MAX_ENUM_NV',b'\x00\x00\x09\xB2\x00\x00\x00\x16VkFramebufferCreateFlagBits\x00VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT,VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR,VK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x04\x57\x00\x00\x00\x16VkFrontFace\x00VK_FRONT_FACE_COUNTER_CLOCKWISE,VK_FRONT_FACE_CLOCKWISE,VK_FRONT_FACE_MAX_ENUM',b'\x00\x00\x09\xB9\x00\x00\x00\x16VkGeometryFlagBitsKHR\x00VK_GEOMETRY_OPAQUE_BIT_KHR,VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR,VK_GEOMETRY_OPAQUE_BIT_NV,VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV,VK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x09\xBA\x00\x00\x00\x16VkGeometryInstanceFlagBitsKHR\x00VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR,VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR,VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR,VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR,VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR,VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV,VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV,VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV,VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV,VK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x09\xBE\x00\x00\x00\x16VkGeometryTypeKHR\x00VK_GEOMETRY_TYPE_TRIANGLES_KHR,VK_GEOMETRY_TYPE_AABBS_KHR,VK_GEOMETRY_TYPE_INSTANCES_KHR,VK_GEOMETRY_TYPE_TRIANGLES_NV,VK_GEOMETRY_TYPE_AABBS_NV,VK_GEOMETRY_TYPE_MAX_ENUM_KHR',b'\x00\x00\x09\xC1\x00\x00\x00\x16VkGraphicsPipelineLibraryFlagBitsEXT\x00VK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT,VK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT,VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT,VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT,VK_GRAPHICS_PIPELINE_LIBRARY_FLAG_BITS_MAX_ENUM_EXT',b'\x00\x00\x09\xC7\x00\x00\x00\x16VkImageAspectFlagBits\x00VK_IMAGE_ASPECT_COLOR_BIT,VK_IMAGE_ASPECT_DEPTH_BIT,VK_IMAGE_ASPECT_STENCIL_BIT,VK_IMAGE_ASPECT_METADATA_BIT,VK_IMAGE_ASPECT_PLANE_0_BIT,VK_IMAGE_ASPECT_PLANE_1_BIT,VK_IMAGE_ASPECT_PLANE_2_BIT,VK_IMAGE_ASPECT_NONE,VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT,VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT,VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT,VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT,VK_IMAGE_ASPECT_PLANE_0_BIT_KHR,VK_IMAGE_ASPECT_PLANE_1_BIT_KHR,VK_IMAGE_ASPECT_PLANE_2_BIT_KHR,VK_IMAGE_ASPECT_NONE_KHR,VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\xCE\x00\x00\x00\x16VkImageCreateFlagBits\x00VK_IMAGE_CREATE_SPARSE_BINDING_BIT,VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT,VK_IMAGE_CREATE_SPARSE_ALIASED_BIT,VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT,VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT,VK_IMAGE_CREATE_ALIAS_BIT,VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT,VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT,VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT,VK_IMAGE_CREATE_EXTENDED_USAGE_BIT,VK_IMAGE_CREATE_PROTECTED_BIT,VK_IMAGE_CREATE_DISJOINT_BIT,VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV,VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT,VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT,VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT,VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM,VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR,VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR,VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR,VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR,VK_IMAGE_CREATE_DISJOINT_BIT_KHR,VK_IMAGE_CREATE_ALIAS_BIT_KHR,VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x04\xE8\x00\x00\x00\x16VkImageLayout\x00VK_IMAGE_LAYOUT_UNDEFINED,VK_IMAGE_LAYOUT_GENERAL,VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL,VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL,VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL,VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL,VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,VK_IMAGE_LAYOUT_PREINITIALIZED,VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL,VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL,VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL,VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL,VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL,VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL,VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL,VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL,VK_IMAGE_LAYOUT_PRESENT_SRC_KHR,VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR,VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT,VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR,VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR,VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR,VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV,VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR,VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR,VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR,VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR,VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR,VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR,VK_IMAGE_LAYOUT_MAX_ENUM',b'\x00\x00\x02\xDC\x00\x00\x00\x16VkImageTiling\x00VK_IMAGE_TILING_OPTIMAL,VK_IMAGE_TILING_LINEAR,VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT,VK_IMAGE_TILING_MAX_ENUM',b'\x00\x00\x02\xDB\x00\x00\x00\x16VkImageType\x00VK_IMAGE_TYPE_1D,VK_IMAGE_TYPE_2D,VK_IMAGE_TYPE_3D,VK_IMAGE_TYPE_MAX_ENUM',b'\x00\x00\x09\xE4\x00\x00\x00\x16VkImageUsageFlagBits\x00VK_IMAGE_USAGE_TRANSFER_SRC_BIT,VK_IMAGE_USAGE_TRANSFER_DST_BIT,VK_IMAGE_USAGE_SAMPLED_BIT,VK_IMAGE_USAGE_STORAGE_BIT,VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT,VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT,VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT,VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT,VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT,VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI,VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV,VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\xE7\x00\x00\x00\x16VkImageViewCreateFlagBits\x00VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT,VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT,VK_IMAGE_VIEW_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x09\xEB\x00\x00\x00\x16VkImageViewType\x00VK_IMAGE_VIEW_TYPE_1D,VK_IMAGE_VIEW_TYPE_2D,VK_IMAGE_VIEW_TYPE_3D,VK_IMAGE_VIEW_TYPE_CUBE,VK_IMAGE_VIEW_TYPE_1D_ARRAY,VK_IMAGE_VIEW_TYPE_2D_ARRAY,VK_IMAGE_VIEW_TYPE_CUBE_ARRAY,VK_IMAGE_VIEW_TYPE_MAX_ENUM',b'\x00\x00\x04\xF5\x00\x00\x00\x16VkIndexType\x00VK_INDEX_TYPE_UINT16,VK_INDEX_TYPE_UINT32,VK_INDEX_TYPE_NONE_KHR,VK_INDEX_TYPE_UINT8_EXT,VK_INDEX_TYPE_NONE_NV,VK_INDEX_TYPE_MAX_ENUM',b'\x00\x00\x09\xF6\x00\x00\x00\x16VkIndirectCommandsLayoutUsageFlagBitsNV\x00VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV,VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV,VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV,VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NV',b'\x00\x00\x09\xF9\x00\x00\x00\x16VkIndirectCommandsTokenTypeNV\x00VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV,VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV,VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV,VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV,VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV,VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV,VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV,VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV,VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NV',b'\x00\x00\x09\xFA\x00\x00\x00\x16VkIndirectStateFlagBitsNV\x00VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV,VK_INDIRECT_STATE_FLAG_BITS_MAX_ENUM_NV',b'\x00\x00\x09\xFE\x00\x00\x00\x16VkInstanceCreateFlagBits\x00VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR,VK_INSTANCE_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x08\x65\x00\x00\x00\x16VkInternalAllocationType\x00VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE,VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM',b'\x00\x00\x0A\x01\x00\x00\x00\x16VkLineRasterizationModeEXT\x00VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT,VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT,VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT,VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT,VK_LINE_RASTERIZATION_MODE_MAX_ENUM_EXT',b'\x00\x00\x04\x5F\x00\x00\x00\x16VkLogicOp\x00VK_LOGIC_OP_CLEAR,VK_LOGIC_OP_AND,VK_LOGIC_OP_AND_REVERSE,VK_LOGIC_OP_COPY,VK_LOGIC_OP_AND_INVERTED,VK_LOGIC_OP_NO_OP,VK_LOGIC_OP_XOR,VK_LOGIC_OP_OR,VK_LOGIC_OP_NOR,VK_LOGIC_OP_EQUIVALENT,VK_LOGIC_OP_INVERT,VK_LOGIC_OP_OR_REVERSE,VK_LOGIC_OP_COPY_INVERTED,VK_LOGIC_OP_OR_INVERTED,VK_LOGIC_OP_NAND,VK_LOGIC_OP_SET,VK_LOGIC_OP_MAX_ENUM',b'\x00\x00\x0A\x03\x00\x00\x00\x16VkMemoryAllocateFlagBits\x00VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT,VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT,VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT,VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR,VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR,VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR,VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0A\x10\x00\x00\x00\x16VkMemoryHeapFlagBits\x00VK_MEMORY_HEAP_DEVICE_LOCAL_BIT,VK_MEMORY_HEAP_MULTI_INSTANCE_BIT,VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR,VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0A\x15\x00\x00\x00\x16VkMemoryOverallocationBehaviorAMD\x00VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD,VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD,VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD,VK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD',b'\x00\x00\x0A\x17\x00\x00\x00\x16VkMemoryPropertyFlagBits\x00VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT,VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,VK_MEMORY_PROPERTY_HOST_CACHED_BIT,VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT,VK_MEMORY_PROPERTY_PROTECTED_BIT,VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD,VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD,VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV,VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM',b'\x00\x00\x00\xEA\x00\x00\x00\x16VkObjectType\x00VK_OBJECT_TYPE_UNKNOWN,VK_OBJECT_TYPE_INSTANCE,VK_OBJECT_TYPE_PHYSICAL_DEVICE,VK_OBJECT_TYPE_DEVICE,VK_OBJECT_TYPE_QUEUE,VK_OBJECT_TYPE_SEMAPHORE,VK_OBJECT_TYPE_COMMAND_BUFFER,VK_OBJECT_TYPE_FENCE,VK_OBJECT_TYPE_DEVICE_MEMORY,VK_OBJECT_TYPE_BUFFER,VK_OBJECT_TYPE_IMAGE,VK_OBJECT_TYPE_EVENT,VK_OBJECT_TYPE_QUERY_POOL,VK_OBJECT_TYPE_BUFFER_VIEW,VK_OBJECT_TYPE_IMAGE_VIEW,VK_OBJECT_TYPE_SHADER_MODULE,VK_OBJECT_TYPE_PIPELINE_CACHE,VK_OBJECT_TYPE_PIPELINE_LAYOUT,VK_OBJECT_TYPE_RENDER_PASS,VK_OBJECT_TYPE_PIPELINE,VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT,VK_OBJECT_TYPE_SAMPLER,VK_OBJECT_TYPE_DESCRIPTOR_POOL,VK_OBJECT_TYPE_DESCRIPTOR_SET,VK_OBJECT_TYPE_FRAMEBUFFER,VK_OBJECT_TYPE_COMMAND_POOL,VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION,VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE,VK_OBJECT_TYPE_PRIVATE_DATA_SLOT,VK_OBJECT_TYPE_SURFACE_KHR,VK_OBJECT_TYPE_SWAPCHAIN_KHR,VK_OBJECT_TYPE_DISPLAY_KHR,VK_OBJECT_TYPE_DISPLAY_MODE_KHR,VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT,VK_OBJECT_TYPE_CU_MODULE_NVX,VK_OBJECT_TYPE_CU_FUNCTION_NVX,VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT,VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR,VK_OBJECT_TYPE_VALIDATION_CACHE_EXT,VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV,VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL,VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR,VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV,VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA,VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR,VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR,VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT,VK_OBJECT_TYPE_MAX_ENUM',b'\x00\x00\x0A\x2A\x00\x00\x00\x16VkPeerMemoryFeatureFlagBits\x00VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT,VK_PEER_MEMORY_FEATURE_COPY_DST_BIT,VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT,VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT,VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR,VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR,VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR,VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR,VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0A\x2C\x00\x00\x00\x16VkPerformanceConfigurationTypeINTEL\x00VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL,VK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL',b'\x00\x00\x0A\x2D\x00\x00\x00\x16VkPerformanceCounterDescriptionFlagBitsKHR\x00VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR,VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR,VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR,VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR,VK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x0A\x31\x00\x00\x00\x16VkPerformanceCounterScopeKHR\x00VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR,VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR,VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR,VK_QUERY_SCOPE_COMMAND_BUFFER_KHR,VK_QUERY_SCOPE_RENDER_PASS_KHR,VK_QUERY_SCOPE_COMMAND_KHR,VK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR',b'\x00\x00\x0A\x32\x00\x00\x00\x16VkPerformanceCounterStorageKHR\x00VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR,VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR,VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR,VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR,VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR,VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR,VK_PERFORMANCE_COUNTER_STORAGE_MAX_ENUM_KHR',b'\x00\x00\x0A\x33\x00\x00\x00\x16VkPerformanceCounterUnitKHR\x00VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR,VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR,VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR,VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR,VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR,VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR,VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR,VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR,VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR,VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR,VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR,VK_PERFORMANCE_COUNTER_UNIT_MAX_ENUM_KHR',b'\x00\x00\x0A\x36\x00\x00\x00\x16VkPerformanceOverrideTypeINTEL\x00VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL,VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL,VK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL',b'\x00\x00\x00\xF6\x00\x00\x00\x16VkPerformanceParameterTypeINTEL\x00VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL,VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL,VK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL',b'\x00\x00\x0A\x3B\x00\x00\x00\x16VkPerformanceValueTypeINTEL\x00VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL,VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL,VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL,VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL,VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL,VK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL',b'\x00\x00\x0A\xE8\x00\x00\x00\x16VkPhysicalDeviceType\x00VK_PHYSICAL_DEVICE_TYPE_OTHER,VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU,VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU,VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU,VK_PHYSICAL_DEVICE_TYPE_CPU,VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM',b'\x00\x00\x04\x63\x00\x00\x00\x16VkPipelineBindPoint\x00VK_PIPELINE_BIND_POINT_GRAPHICS,VK_PIPELINE_BIND_POINT_COMPUTE,VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR,VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI,VK_PIPELINE_BIND_POINT_RAY_TRACING_NV,VK_PIPELINE_BIND_POINT_MAX_ENUM',b'\x00\x00\x0A\xF9\x00\x00\x00\x16VkPipelineCacheCreateFlagBits\x00VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT,VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT,VK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0A\xFB\x00\x00\x00\x16VkPipelineCacheHeaderVersion\x00VK_PIPELINE_CACHE_HEADER_VERSION_ONE,VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM',b'\x00\x00\x0B\x00\x00\x00\x00\x16VkPipelineColorBlendStateCreateFlagBits\x00VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM,VK_PIPELINE_COLOR_BLEND_STATE_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x05\x00\x00\x00\x16VkPipelineCompilerControlFlagBitsAMD\x00VK_PIPELINE_COMPILER_CONTROL_FLAG_BITS_MAX_ENUM_AMD',b'\x00\x00\x0B\x09\x00\x00\x00\x16VkPipelineCreateFlagBits\x00VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT,VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT,VK_PIPELINE_CREATE_DERIVATIVE_BIT,VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT,VK_PIPELINE_CREATE_DISPATCH_BASE_BIT,VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT,VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT,VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT,VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR,VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR,VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR,VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR,VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR,VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR,VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR,VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV,VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR,VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR,VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV,VK_PIPELINE_CREATE_LIBRARY_BIT_KHR,VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT,VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT,VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV,VK_PIPELINE_CREATE_DISPATCH_BASE,VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT,VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR,VK_PIPELINE_CREATE_DISPATCH_BASE_KHR,VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT,VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT,VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x0D\x00\x00\x00\x16VkPipelineCreationFeedbackFlagBits\x00VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT,VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT,VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT,VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT,VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT,VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT,VK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x0E\x00\x00\x00\x16VkPipelineDepthStencilStateCreateFlagBits\x00VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM,VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM,VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x17\x00\x00\x00\x16VkPipelineExecutableStatisticFormatKHR\x00VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR,VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR,VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR,VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR,VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR',b'\x00\x00\x0B\x1F\x00\x00\x00\x16VkPipelineLayoutCreateFlagBits\x00VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT,VK_PIPELINE_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x30\x00\x00\x00\x16VkPipelineShaderStageCreateFlagBits\x00VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT,VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT,VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT,VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT,VK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x04\x80\x00\x00\x00\x16VkPipelineStageFlagBits\x00VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT,VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT,VK_PIPELINE_STAGE_VERTEX_INPUT_BIT,VK_PIPELINE_STAGE_VERTEX_SHADER_BIT,VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT,VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT,VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT,VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT,VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT,VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT,VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT,VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT,VK_PIPELINE_STAGE_TRANSFER_BIT,VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT,VK_PIPELINE_STAGE_HOST_BIT,VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT,VK_PIPELINE_STAGE_ALL_COMMANDS_BIT,VK_PIPELINE_STAGE_NONE,VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT,VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT,VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR,VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR,VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV,VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV,VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT,VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV,VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV,VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV,VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV,VK_PIPELINE_STAGE_NONE_KHR,VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x42\x00\x00\x00\x16VkPointClippingBehavior\x00VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES,VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY,VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR,VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR,VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM',b'\x00\x00\x0B\x43\x00\x00\x00\x16VkPolygonMode\x00VK_POLYGON_MODE_FILL,VK_POLYGON_MODE_LINE,VK_POLYGON_MODE_POINT,VK_POLYGON_MODE_FILL_RECTANGLE_NV,VK_POLYGON_MODE_MAX_ENUM',b'\x00\x00\x0B\x46\x00\x00\x00\x16VkPresentModeKHR\x00VK_PRESENT_MODE_IMMEDIATE_KHR,VK_PRESENT_MODE_MAILBOX_KHR,VK_PRESENT_MODE_FIFO_KHR,VK_PRESENT_MODE_FIFO_RELAXED_KHR,VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR,VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR,VK_PRESENT_MODE_MAX_ENUM_KHR',b'\x00\x00\x04\x8D\x00\x00\x00\x16VkPrimitiveTopology\x00VK_PRIMITIVE_TOPOLOGY_POINT_LIST,VK_PRIMITIVE_TOPOLOGY_LINE_LIST,VK_PRIMITIVE_TOPOLOGY_LINE_STRIP,VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST,VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP,VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN,VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY,VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY,VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY,VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY,VK_PRIMITIVE_TOPOLOGY_PATCH_LIST,VK_PRIMITIVE_TOPOLOGY_MAX_ENUM',b'\x00\x00\x0B\x4F\x00\x00\x00\x16VkProvokingVertexModeEXT\x00VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT,VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT,VK_PROVOKING_VERTEX_MODE_MAX_ENUM_EXT',b'\x00\x00\x0B\x52\x00\x00\x00\x16VkQueryControlFlagBits\x00VK_QUERY_CONTROL_PRECISE_BIT,VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x53\x00\x00\x00\x16VkQueryPipelineStatisticFlagBits\x00VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT,VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT,VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT,VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT,VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT,VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT,VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT,VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT,VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT,VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT,VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT,VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x57\x00\x00\x00\x16VkQueryPoolSamplingModeINTEL\x00VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL,VK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL',b'\x00\x00\x0B\x58\x00\x00\x00\x16VkQueryResultFlagBits\x00VK_QUERY_RESULT_64_BIT,VK_QUERY_RESULT_WAIT_BIT,VK_QUERY_RESULT_WITH_AVAILABILITY_BIT,VK_QUERY_RESULT_PARTIAL_BIT,VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM',b'\x00\x00\x02\x82\x00\x00\x00\x16VkQueryType\x00VK_QUERY_TYPE_OCCLUSION,VK_QUERY_TYPE_PIPELINE_STATISTICS,VK_QUERY_TYPE_TIMESTAMP,VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT,VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR,VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR,VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR,VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV,VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL,VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT,VK_QUERY_TYPE_MAX_ENUM',b'\x00\x00\x0B\x5E\x00\x00\x00\x16VkQueueFlagBits\x00VK_QUEUE_GRAPHICS_BIT,VK_QUEUE_COMPUTE_BIT,VK_QUEUE_TRANSFER_BIT,VK_QUEUE_SPARSE_BINDING_BIT,VK_QUEUE_PROTECTED_BIT,VK_QUEUE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x5F\x00\x00\x00\x16VkQueueGlobalPriorityKHR\x00VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR,VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR,VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR,VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR,VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT,VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT,VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT,VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT,VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_KHR',b'\x00\x00\x0B\x62\x00\x00\x00\x16VkRasterizationOrderAMD\x00VK_RASTERIZATION_ORDER_STRICT_AMD,VK_RASTERIZATION_ORDER_RELAXED_AMD,VK_RASTERIZATION_ORDER_MAX_ENUM_AMD',b'\x00\x00\x0B\x6B\x00\x00\x00\x16VkRayTracingShaderGroupTypeKHR\x00VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR,VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR,VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR,VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV,VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV,VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV,VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR',b'\x00\x00\x0B\x72\x00\x00\x00\x16VkRenderPassCreateFlagBits\x00VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM,VK_RENDER_PASS_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x7C\x00\x00\x00\x16VkRenderingFlagBits\x00VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT,VK_RENDERING_SUSPENDING_BIT,VK_RENDERING_RESUMING_BIT,VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR,VK_RENDERING_SUSPENDING_BIT_KHR,VK_RENDERING_RESUMING_BIT_KHR,VK_RENDERING_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0B\x81\x00\x00\x00\x16VkResolveModeFlagBits\x00VK_RESOLVE_MODE_NONE,VK_RESOLVE_MODE_SAMPLE_ZERO_BIT,VK_RESOLVE_MODE_AVERAGE_BIT,VK_RESOLVE_MODE_MIN_BIT,VK_RESOLVE_MODE_MAX_BIT,VK_RESOLVE_MODE_NONE_KHR,VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR,VK_RESOLVE_MODE_AVERAGE_BIT_KHR,VK_RESOLVE_MODE_MIN_BIT_KHR,VK_RESOLVE_MODE_MAX_BIT_KHR,VK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0C\x2D\x00\x00\x00\x15VkResult\x00VK_SUCCESS,VK_NOT_READY,VK_TIMEOUT,VK_EVENT_SET,VK_EVENT_RESET,VK_INCOMPLETE,VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_DEVICE_LOST,VK_ERROR_MEMORY_MAP_FAILED,VK_ERROR_LAYER_NOT_PRESENT,VK_ERROR_EXTENSION_NOT_PRESENT,VK_ERROR_FEATURE_NOT_PRESENT,VK_ERROR_INCOMPATIBLE_DRIVER,VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_FORMAT_NOT_SUPPORTED,VK_ERROR_FRAGMENTED_POOL,VK_ERROR_UNKNOWN,VK_ERROR_OUT_OF_POOL_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE,VK_ERROR_FRAGMENTATION,VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS,VK_PIPELINE_COMPILE_REQUIRED,VK_ERROR_SURFACE_LOST_KHR,VK_ERROR_NATIVE_WINDOW_IN_USE_KHR,VK_SUBOPTIMAL_KHR,VK_ERROR_OUT_OF_DATE_KHR,VK_ERROR_INCOMPATIBLE_DISPLAY_KHR,VK_ERROR_VALIDATION_FAILED_EXT,VK_ERROR_INVALID_SHADER_NV,VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT,VK_ERROR_NOT_PERMITTED_KHR,VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT,VK_THREAD_IDLE_KHR,VK_THREAD_DONE_KHR,VK_OPERATION_DEFERRED_KHR,VK_OPERATION_NOT_DEFERRED_KHR,VK_ERROR_OUT_OF_POOL_MEMORY_KHR,VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR,VK_ERROR_FRAGMENTATION_EXT,VK_ERROR_NOT_PERMITTED_EXT,VK_ERROR_INVALID_DEVICE_ADDRESS_EXT,VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR,VK_PIPELINE_COMPILE_REQUIRED_EXT,VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT,VK_RESULT_MAX_ENUM',b'\x00\x00\x08\x0A\x00\x00\x00\x16VkSampleCountFlagBits\x00VK_SAMPLE_COUNT_1_BIT,VK_SAMPLE_COUNT_2_BIT,VK_SAMPLE_COUNT_4_BIT,VK_SAMPLE_COUNT_8_BIT,VK_SAMPLE_COUNT_16_BIT,VK_SAMPLE_COUNT_32_BIT,VK_SAMPLE_COUNT_64_BIT,VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0C\x33\x00\x00\x00\x16VkSamplerAddressMode\x00VK_SAMPLER_ADDRESS_MODE_REPEAT,VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT,VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE,VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER,VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE,VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR,VK_SAMPLER_ADDRESS_MODE_MAX_ENUM',b'\x00\x00\x0C\x35\x00\x00\x00\x16VkSamplerCreateFlagBits\x00VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT,VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT,VK_SAMPLER_CREATE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0C\x38\x00\x00\x00\x16VkSamplerMipmapMode\x00VK_SAMPLER_MIPMAP_MODE_NEAREST,VK_SAMPLER_MIPMAP_MODE_LINEAR,VK_SAMPLER_MIPMAP_MODE_MAX_ENUM',b'\x00\x00\x0C\x39\x00\x00\x00\x16VkSamplerReductionMode\x00VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE,VK_SAMPLER_REDUCTION_MODE_MIN,VK_SAMPLER_REDUCTION_MODE_MAX,VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT,VK_SAMPLER_REDUCTION_MODE_MIN_EXT,VK_SAMPLER_REDUCTION_MODE_MAX_EXT,VK_SAMPLER_REDUCTION_MODE_MAX_ENUM',b'\x00\x00\x0C\x3E\x00\x00\x00\x16VkSamplerYcbcrModelConversion\x00VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY,VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY,VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709,VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601,VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020,VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR,VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR,VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR,VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR,VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR,VK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM',b'\x00\x00\x0C\x3F\x00\x00\x00\x16VkSamplerYcbcrRange\x00VK_SAMPLER_YCBCR_RANGE_ITU_FULL,VK_SAMPLER_YCBCR_RANGE_ITU_NARROW,VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR,VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR,VK_SAMPLER_YCBCR_RANGE_MAX_ENUM',b'\x00\x00\x0C\x40\x00\x00\x00\x16VkScopeNV\x00VK_SCOPE_DEVICE_NV,VK_SCOPE_WORKGROUP_NV,VK_SCOPE_SUBGROUP_NV,VK_SCOPE_QUEUE_FAMILY_NV,VK_SCOPE_MAX_ENUM_NV',b'\x00\x00\x0C\x43\x00\x00\x00\x16VkSemaphoreImportFlagBits\x00VK_SEMAPHORE_IMPORT_TEMPORARY_BIT,VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR,VK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0C\x47\x00\x00\x00\x16VkSemaphoreType\x00VK_SEMAPHORE_TYPE_BINARY,VK_SEMAPHORE_TYPE_TIMELINE,VK_SEMAPHORE_TYPE_BINARY_KHR,VK_SEMAPHORE_TYPE_TIMELINE_KHR,VK_SEMAPHORE_TYPE_MAX_ENUM',b'\x00\x00\x0C\x49\x00\x00\x00\x16VkSemaphoreWaitFlagBits\x00VK_SEMAPHORE_WAIT_ANY_BIT,VK_SEMAPHORE_WAIT_ANY_BIT_KHR,VK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0C\x4C\x00\x00\x00\x16VkShaderCorePropertiesFlagBitsAMD\x00VK_SHADER_CORE_PROPERTIES_FLAG_BITS_MAX_ENUM_AMD',b'\x00\x00\x0C\x4D\x00\x00\x00\x16VkShaderFloatControlsIndependence\x00VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY,VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL,VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE,VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR,VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR,VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR,VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM',b'\x00\x00\x03\xEC\x00\x00\x00\x16VkShaderGroupShaderKHR\x00VK_SHADER_GROUP_SHADER_GENERAL_KHR,VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR,VK_SHADER_GROUP_SHADER_ANY_HIT_KHR,VK_SHADER_GROUP_SHADER_INTERSECTION_KHR,VK_SHADER_GROUP_SHADER_MAX_ENUM_KHR',b'\x00\x00\x01\xFD\x00\x00\x00\x16VkShaderInfoTypeAMD\x00VK_SHADER_INFO_TYPE_STATISTICS_AMD,VK_SHADER_INFO_TYPE_BINARY_AMD,VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD,VK_SHADER_INFO_TYPE_MAX_ENUM_AMD',b'\x00\x00\x01\xFC\x00\x00\x00\x16VkShaderStageFlagBits\x00VK_SHADER_STAGE_VERTEX_BIT,VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT,VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT,VK_SHADER_STAGE_GEOMETRY_BIT,VK_SHADER_STAGE_FRAGMENT_BIT,VK_SHADER_STAGE_COMPUTE_BIT,VK_SHADER_STAGE_ALL_GRAPHICS,VK_SHADER_STAGE_ALL,VK_SHADER_STAGE_RAYGEN_BIT_KHR,VK_SHADER_STAGE_ANY_HIT_BIT_KHR,VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR,VK_SHADER_STAGE_MISS_BIT_KHR,VK_SHADER_STAGE_INTERSECTION_BIT_KHR,VK_SHADER_STAGE_CALLABLE_BIT_KHR,VK_SHADER_STAGE_TASK_BIT_NV,VK_SHADER_STAGE_MESH_BIT_NV,VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI,VK_SHADER_STAGE_RAYGEN_BIT_NV,VK_SHADER_STAGE_ANY_HIT_BIT_NV,VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV,VK_SHADER_STAGE_MISS_BIT_NV,VK_SHADER_STAGE_INTERSECTION_BIT_NV,VK_SHADER_STAGE_CALLABLE_BIT_NV,VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0C\x53\x00\x00\x00\x16VkShadingRatePaletteEntryNV\x00VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV,VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV,VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV,VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV,VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV,VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV,VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV,VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV,VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV,VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV,VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV,VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV,VK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV',b'\x00\x00\x0C\x56\x00\x00\x00\x16VkSharingMode\x00VK_SHARING_MODE_EXCLUSIVE,VK_SHARING_MODE_CONCURRENT,VK_SHARING_MODE_MAX_ENUM',b'\x00\x00\x0C\x59\x00\x00\x00\x16VkSparseImageFormatFlagBits\x00VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT,VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT,VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT,VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0C\x66\x00\x00\x00\x16VkSparseMemoryBindFlagBits\x00VK_SPARSE_MEMORY_BIND_METADATA_BIT,VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0C\x6B\x00\x00\x00\x16VkStencilFaceFlagBits\x00VK_STENCIL_FACE_FRONT_BIT,VK_STENCIL_FACE_BACK_BIT,VK_STENCIL_FACE_FRONT_AND_BACK,VK_STENCIL_FRONT_AND_BACK,VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x05\xD0\x00\x00\x00\x16VkStencilOp\x00VK_STENCIL_OP_KEEP,VK_STENCIL_OP_ZERO,VK_STENCIL_OP_REPLACE,VK_STENCIL_OP_INCREMENT_AND_CLAMP,VK_STENCIL_OP_DECREMENT_AND_CLAMP,VK_STENCIL_OP_INVERT,VK_STENCIL_OP_INCREMENT_AND_WRAP,VK_STENCIL_OP_DECREMENT_AND_WRAP,VK_STENCIL_OP_MAX_ENUM',b'\x00\x00\x0C\x6E\x00\x00\x00\x16VkStructureType\x00VK_STRUCTURE_TYPE_APPLICATION_INFO,VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO,VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO,VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO,VK_STRUCTURE_TYPE_SUBMIT_INFO,VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO,VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE,VK_STRUCTURE_TYPE_BIND_SPARSE_INFO,VK_STRUCTURE_TYPE_FENCE_CREATE_INFO,VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO,VK_STRUCTURE_TYPE_EVENT_CREATE_INFO,VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO,VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO,VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO,VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO,VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO,VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO,VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO,VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO,VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO,VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO,VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET,VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET,VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO,VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO,VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO,VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO,VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO,VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO,VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO,VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER,VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER,VK_STRUCTURE_TYPE_MEMORY_BARRIER,VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO,VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES,VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2,VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2,VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES,VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2,VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES,VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO,VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2,VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2,VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2,VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2,VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2,VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO,VK_STRUCTURE_TYPE_SUBPASS_END_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES,VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES,VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES,VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES,VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO,VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO,VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES,VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT,VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES,VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO,VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO,VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO,VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES,VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO,VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO,VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES,VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES,VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO,VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES,VK_STRUCTURE_TYPE_MEMORY_BARRIER_2,VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2,VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2,VK_STRUCTURE_TYPE_DEPENDENCY_INFO,VK_STRUCTURE_TYPE_SUBMIT_INFO_2,VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO,VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES,VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2,VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2,VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2,VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2,VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2,VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2,VK_STRUCTURE_TYPE_BUFFER_COPY_2,VK_STRUCTURE_TYPE_IMAGE_COPY_2,VK_STRUCTURE_TYPE_IMAGE_BLIT_2,VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2,VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES,VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES,VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK,VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES,VK_STRUCTURE_TYPE_RENDERING_INFO,VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO,VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES,VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES,VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES,VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS,VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS,VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PRESENT_INFO_KHR,VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR,VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR,VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR,VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR,VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR,VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD,VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT,VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT,VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT,VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV,VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX,VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX,VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX,VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX,VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX,VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD,VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR,VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT,VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD,VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX,VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV,VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV,VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV,VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV,VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV,VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT,VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN,VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT,VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR,VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR,VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR,VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR,VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR,VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR,VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR,VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR,VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR,VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR,VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR,VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR,VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR,VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR,VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT,VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT,VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR,VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT,VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT,VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT,VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT,VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX,VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT,VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_HDR_METADATA_EXT,VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR,VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR,VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR,VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR,VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR,VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR,VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR,VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR,VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR,VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR,VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR,VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR,VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR,VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR,VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR,VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR,VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR,VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK,VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK,VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT,VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT,VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT,VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT,VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID,VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID,VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID,VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID,VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID,VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID,VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID,VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT,VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT,VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT,VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR,VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR,VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR,VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR,VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR,VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV,VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT,VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT,VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT,VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV,VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_GEOMETRY_NV,VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV,VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV,VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV,VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV,VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV,VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT,VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT,VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT,VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR,VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD,VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD,VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR,VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR,VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT,VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV,VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV,VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV,VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL,VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL,VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL,VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL,VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL,VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL,VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT,VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD,VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD,VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA,VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT,VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR,VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT,VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT,VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV,VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV,VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT,VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT,VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT,VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT,VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT,VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT,VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR,VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR,VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR,VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR,VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR,VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV,VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV,VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV,VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV,VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV,VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV,VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV,VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT,VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM,VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT,VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT,VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT,VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PRESENT_ID_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV,VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV,VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV,VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT,VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV,VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV,VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT,VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT,VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE,VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT,VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT,VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT,VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT,VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA,VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA,VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA,VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA,VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA,VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA,VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA,VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA,VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA,VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA,VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA,VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA,VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA,VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA,VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA,VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI,VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT,VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT,VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT,VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT,VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM,VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES,VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_RENDERING_INFO_KHR,VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR,VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR,VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR,VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV,VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR,VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR,VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR,VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR,VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR,VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR,VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR,VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR,VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR,VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR,VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR,VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR,VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR,VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR,VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR,VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR,VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR,VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR,VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR,VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR,VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR,VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR,VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR,VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR,VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR,VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR,VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR,VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR,VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR,VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR,VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR,VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR,VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT,VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT,VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT,VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR,VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR,VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR,VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR,VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR,VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR,VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR,VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR,VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR,VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR,VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR,VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR,VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR,VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR,VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR,VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR,VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR,VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR,VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR,VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR,VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT,VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT,VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR,VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR,VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR,VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR,VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT,VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT,VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR,VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR,VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR,VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR,VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR,VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR,VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT,VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR,VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR,VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR,VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR,VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR,VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR,VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR,VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR,VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR,VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR,VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR,VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT,VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR,VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR,VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR,VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR,VK_STRUCTURE_TYPE_MAX_ENUM',b'\x00\x00\x0C\x6F\x00\x00\x00\x16VkSubgroupFeatureFlagBits\x00VK_SUBGROUP_FEATURE_BASIC_BIT,VK_SUBGROUP_FEATURE_VOTE_BIT,VK_SUBGROUP_FEATURE_ARITHMETIC_BIT,VK_SUBGROUP_FEATURE_BALLOT_BIT,VK_SUBGROUP_FEATURE_SHUFFLE_BIT,VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT,VK_SUBGROUP_FEATURE_CLUSTERED_BIT,VK_SUBGROUP_FEATURE_QUAD_BIT,VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV,VK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0C\x70\x00\x00\x00\x16VkSubmitFlagBits\x00VK_SUBMIT_PROTECTED_BIT,VK_SUBMIT_PROTECTED_BIT_KHR,VK_SUBMIT_FLAG_BITS_MAX_ENUM',b'\x00\x00\x04\x97\x00\x00\x00\x16VkSubpassContents\x00VK_SUBPASS_CONTENTS_INLINE,VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS,VK_SUBPASS_CONTENTS_MAX_ENUM',b'\x00\x00\x0C\x7D\x00\x00\x00\x16VkSubpassDescriptionFlagBits\x00VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX,VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX,VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM,VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM,VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM,VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM,VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM,VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM',b'\x00\x00\x02\x33\x00\x00\x00\x16VkSurfaceCounterFlagBitsEXT\x00VK_SURFACE_COUNTER_VBLANK_BIT_EXT,VK_SURFACE_COUNTER_VBLANK_EXT,VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT',b'\x00\x00\x0C\x8B\x00\x00\x00\x16VkSurfaceTransformFlagBitsKHR\x00VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR,VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR,VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR,VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR,VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR,VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR,VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR,VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR,VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR,VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x0C\x8D\x00\x00\x00\x16VkSwapchainCreateFlagBitsKHR\x00VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR,VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR,VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR,VK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR',b'\x00\x00\x03\xF2\x00\x00\x00\x16VkSystemAllocationScope\x00VK_SYSTEM_ALLOCATION_SCOPE_COMMAND,VK_SYSTEM_ALLOCATION_SCOPE_OBJECT,VK_SYSTEM_ALLOCATION_SCOPE_CACHE,VK_SYSTEM_ALLOCATION_SCOPE_DEVICE,VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE,VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM',b'\x00\x00\x0C\x90\x00\x00\x00\x16VkTessellationDomainOrigin\x00VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT,VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT,VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR,VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR,VK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM',b'\x00\x00\x0C\x92\x00\x00\x00\x16VkTimeDomainEXT\x00VK_TIME_DOMAIN_DEVICE_EXT,VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT,VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT,VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT,VK_TIME_DOMAIN_MAX_ENUM_EXT',b'\x00\x00\x0C\x94\x00\x00\x00\x16VkToolPurposeFlagBits\x00VK_TOOL_PURPOSE_VALIDATION_BIT,VK_TOOL_PURPOSE_PROFILING_BIT,VK_TOOL_PURPOSE_TRACING_BIT,VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT,VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT,VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT,VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT,VK_TOOL_PURPOSE_VALIDATION_BIT_EXT,VK_TOOL_PURPOSE_PROFILING_BIT_EXT,VK_TOOL_PURPOSE_TRACING_BIT_EXT,VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT,VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT,VK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM',b'\x00\x00\x0C\x98\x00\x00\x00\x16VkValidationCacheHeaderVersionEXT\x00VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT,VK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT',b'\x00\x00\x0C\x9A\x00\x00\x00\x16VkValidationCheckEXT\x00VK_VALIDATION_CHECK_ALL_EXT,VK_VALIDATION_CHECK_SHADERS_EXT,VK_VALIDATION_CHECK_MAX_ENUM_EXT',b'\x00\x00\x0C\x9C\x00\x00\x00\x16VkValidationFeatureDisableEXT\x00VK_VALIDATION_FEATURE_DISABLE_ALL_EXT,VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT,VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT,VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT,VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT,VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT,VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT,VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT,VK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT',b'\x00\x00\x0C\x9E\x00\x00\x00\x16VkValidationFeatureEnableEXT\x00VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT,VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT,VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT,VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT,VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT,VK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT',b'\x00\x00\x0C\xA1\x00\x00\x00\x16VkVendorId\x00VK_VENDOR_ID_VIV,VK_VENDOR_ID_VSI,VK_VENDOR_ID_KAZAN,VK_VENDOR_ID_CODEPLAY,VK_VENDOR_ID_MESA,VK_VENDOR_ID_POCL,VK_VENDOR_ID_MAX_ENUM',b'\x00\x00\x0C\xAA\x00\x00\x00\x16VkVertexInputRate\x00VK_VERTEX_INPUT_RATE_VERTEX,VK_VERTEX_INPUT_RATE_INSTANCE,VK_VERTEX_INPUT_RATE_MAX_ENUM',b'\x00\x00\x0C\xAC\x00\x00\x00\x16VkViewportCoordinateSwizzleNV\x00VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV,VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV,VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV,VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV,VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV,VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV,VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV,VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV,VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV'),
    _typenames = (b'\x00\x00\x08\x77ANativeWindow',b'\x00\x00\x03\xC5DWORD',b'\x00\x00\x08\x78Display',b'\x00\x00\x01\x6AHANDLE',b'\x00\x00\x01\x6AHINSTANCE',b'\x00\x00\x01\x6AHWND',b'\x00\x00\x0D\xE6LPCWSTR',b'\x00\x00\x08\x82LPSECURITY_ATTRIBUTES',b'\x00\x00\x01\x6ALPVOID',b'\x00\x00\x08\x79MirBlob',b'\x00\x00\x08\x7AMirBufferStream',b'\x00\x00\x08\x7BMirConnection',b'\x00\x00\x08\x7CMirDisplayConfig',b'\x00\x00\x01\x6AMirEGLNativeDisplayType',b'\x00\x00\x01\x6AMirEGLNativeWindowType',b'\x00\x00\x08\x7DMirPersistentId',b'\x00\x00\x08\x7EMirPromptSession',b'\x00\x00\x08\x7FMirScreencast',b'\x00\x00\x08\x80MirSurface',b'\x00\x00\x08\x81MirSurfaceSpec',b'\x00\x00\x0C\x0BPFN_vkAcquireDrmDisplayEXT',b'\x00\x00\x0B\x8EPFN_vkAcquireNextImage2KHR',b'\x00\x00\x0B\xECPFN_vkAcquireNextImageKHR',b'\x00\x00\x0B\xB2PFN_vkAcquirePerformanceConfigurationINTEL',b'\x00\x00\x0B\x8FPFN_vkAcquireProfilingLockKHR',b'\x00\x00\x0C\x0DPFN_vkAcquireWinrtDisplayNV',b'\x00\x00\x0B\x93PFN_vkAllocateCommandBuffers',b'\x00\x00\x0B\x9CPFN_vkAllocateDescriptorSets',b'\x00\x00\x0B\xADPFN_vkAllocateMemory',b'\x00\x00\x0D\x19PFN_vkAllocationFunction',b'\x00\x00\x0B\x86PFN_vkBeginCommandBuffer',b'\x00\x00\x0B\xF0PFN_vkBindAccelerationStructureMemoryNV',b'\x00\x00\x0B\xC8PFN_vkBindBufferMemory',b'\x00\x00\x0B\xF1PFN_vkBindBufferMemory2',b'\x00\x00\x0B\xF1PFN_vkBindBufferMemory2KHR',b'\x00\x00\x0B\xD9PFN_vkBindImageMemory',b'\x00\x00\x0B\xF2PFN_vkBindImageMemory2',b'\x00\x00\x0B\xF2PFN_vkBindImageMemory2KHR',b'\x00\x00\x0B\xCFPFN_vkBuildAccelerationStructuresKHR',b'\x00\x00\x0D\x24PFN_vkCmdBeginConditionalRenderingEXT',b'\x00\x00\x0D\x2EPFN_vkCmdBeginDebugUtilsLabelEXT',b'\x00\x00\x0D\x61PFN_vkCmdBeginQuery',b'\x00\x00\x0D\x63PFN_vkCmdBeginQueryIndexedEXT',b'\x00\x00\x0D\x3DPFN_vkCmdBeginRenderPass',b'\x00\x00\x0D\x3CPFN_vkCmdBeginRenderPass2',b'\x00\x00\x0D\x3CPFN_vkCmdBeginRenderPass2KHR',b'\x00\x00\x0D\x3EPFN_vkCmdBeginRendering',b'\x00\x00\x0D\x3EPFN_vkCmdBeginRenderingKHR',b'\x00\x00\x0D\x7BPFN_vkCmdBeginTransformFeedbackEXT',b'\x00\x00\x0D\x36PFN_vkCmdBindDescriptorSets',b'\x00\x00\x0D\x4EPFN_vkCmdBindIndexBuffer',b'\x00\x00\x0D\x58PFN_vkCmdBindInvocationMaskHUAWEI',b'\x00\x00\x0D\x37PFN_vkCmdBindPipeline',b'\x00\x00\x0D\x38PFN_vkCmdBindPipelineShaderGroupNV',b'\x00\x00\x0D\x58PFN_vkCmdBindShadingRateImageNV',b'\x00\x00\x0D\x7CPFN_vkCmdBindTransformFeedbackBuffersEXT',b'\x00\x00\x0D\x7BPFN_vkCmdBindVertexBuffers',b'\x00\x00\x0D\x7DPFN_vkCmdBindVertexBuffers2',b'\x00\x00\x0D\x7DPFN_vkCmdBindVertexBuffers2EXT',b'\x00\x00\x0D\x5CPFN_vkCmdBlitImage',b'\x00\x00\x0D\x21PFN_vkCmdBlitImage2',b'\x00\x00\x0D\x21PFN_vkCmdBlitImage2KHR',b'\x00\x00\x0D\x20PFN_vkCmdBuildAccelerationStructureNV',b'\x00\x00\x0D\x66PFN_vkCmdBuildAccelerationStructuresIndirectKHR',b'\x00\x00\x0D\x65PFN_vkCmdBuildAccelerationStructuresKHR',b'\x00\x00\x0D\x67PFN_vkCmdClearAttachments',b'\x00\x00\x0D\x59PFN_vkCmdClearColorImage',b'\x00\x00\x0D\x5APFN_vkCmdClearDepthStencilImage',b'\x00\x00\x0D\x25PFN_vkCmdCopyAccelerationStructureKHR',b'\x00\x00\x0D\x4APFN_vkCmdCopyAccelerationStructureNV',b'\x00\x00\x0D\x26PFN_vkCmdCopyAccelerationStructureToMemoryKHR',b'\x00\x00\x0D\x4BPFN_vkCmdCopyBuffer',b'\x00\x00\x0D\x27PFN_vkCmdCopyBuffer2',b'\x00\x00\x0D\x27PFN_vkCmdCopyBuffer2KHR',b'\x00\x00\x0D\x4CPFN_vkCmdCopyBufferToImage',b'\x00\x00\x0D\x28PFN_vkCmdCopyBufferToImage2',b'\x00\x00\x0D\x28PFN_vkCmdCopyBufferToImage2KHR',b'\x00\x00\x0D\x5DPFN_vkCmdCopyImage',b'\x00\x00\x0D\x29PFN_vkCmdCopyImage2',b'\x00\x00\x0D\x29PFN_vkCmdCopyImage2KHR',b'\x00\x00\x0D\x5BPFN_vkCmdCopyImageToBuffer',b'\x00\x00\x0D\x2APFN_vkCmdCopyImageToBuffer2',b'\x00\x00\x0D\x2APFN_vkCmdCopyImageToBuffer2KHR',b'\x00\x00\x0D\x2BPFN_vkCmdCopyMemoryToAccelerationStructureKHR',b'\x00\x00\x0D\x62PFN_vkCmdCopyQueryPoolResults',b'\x00\x00\x0D\x2CPFN_vkCmdCuLaunchKernelNVX',b'\x00\x00\x0D\x2DPFN_vkCmdDebugMarkerBeginEXT',b'\x00\x00\x0D\x1FPFN_vkCmdDebugMarkerEndEXT',b'\x00\x00\x0D\x2DPFN_vkCmdDebugMarkerInsertEXT',b'\x00\x00\x0D\x7FPFN_vkCmdDispatch',b'\x00\x00\x0D\x83PFN_vkCmdDispatchBase',b'\x00\x00\x0D\x83PFN_vkCmdDispatchBaseKHR',b'\x00\x00\x0D\x4DPFN_vkCmdDispatchIndirect',b'\x00\x00\x0D\x81PFN_vkCmdDraw',b'\x00\x00\x0D\x80PFN_vkCmdDrawIndexed',b'\x00\x00\x0D\x51PFN_vkCmdDrawIndexedIndirect',b'\x00\x00\x0D\x4FPFN_vkCmdDrawIndexedIndirectCount',b'\x00\x00\x0D\x4FPFN_vkCmdDrawIndexedIndirectCountAMD',b'\x00\x00\x0D\x4FPFN_vkCmdDrawIndexedIndirectCountKHR',b'\x00\x00\x0D\x51PFN_vkCmdDrawIndirect',b'\x00\x00\x0D\x7EPFN_vkCmdDrawIndirectByteCountEXT',b'\x00\x00\x0D\x4FPFN_vkCmdDrawIndirectCount',b'\x00\x00\x0D\x4FPFN_vkCmdDrawIndirectCountAMD',b'\x00\x00\x0D\x4FPFN_vkCmdDrawIndirectCountKHR',b'\x00\x00\x0D\x4FPFN_vkCmdDrawMeshTasksIndirectCountNV',b'\x00\x00\x0D\x51PFN_vkCmdDrawMeshTasksIndirectNV',b'\x00\x00\x0D\x76PFN_vkCmdDrawMeshTasksNV',b'\x00\x00\x0D\x6APFN_vkCmdDrawMultiEXT',b'\x00\x00\x0D\x69PFN_vkCmdDrawMultiIndexedEXT',b'\x00\x00\x0D\x1FPFN_vkCmdEndConditionalRenderingEXT',b'\x00\x00\x0D\x1FPFN_vkCmdEndDebugUtilsLabelEXT',b'\x00\x00\x0D\x60PFN_vkCmdEndQuery',b'\x00\x00\x0D\x61PFN_vkCmdEndQueryIndexedEXT',b'\x00\x00\x0D\x1FPFN_vkCmdEndRenderPass',b'\x00\x00\x0D\x45PFN_vkCmdEndRenderPass2',b'\x00\x00\x0D\x45PFN_vkCmdEndRenderPass2KHR',b'\x00\x00\x0D\x1FPFN_vkCmdEndRendering',b'\x00\x00\x0D\x1FPFN_vkCmdEndRenderingKHR',b'\x00\x00\x0D\x7BPFN_vkCmdEndTransformFeedbackEXT',b'\x00\x00\x0D\x71PFN_vkCmdExecuteCommands',b'\x00\x00\x0D\x68PFN_vkCmdExecuteGeneratedCommandsNV',b'\x00\x00\x0D\x52PFN_vkCmdFillBuffer',b'\x00\x00\x0D\x2EPFN_vkCmdInsertDebugUtilsLabelEXT',b'\x00\x00\x0D\x44PFN_vkCmdNextSubpass',b'\x00\x00\x0D\x43PFN_vkCmdNextSubpass2',b'\x00\x00\x0D\x43PFN_vkCmdNextSubpass2KHR',b'\x00\x00\x0D\x82PFN_vkCmdPipelineBarrier',b'\x00\x00\x0D\x2FPFN_vkCmdPipelineBarrier2',b'\x00\x00\x0D\x2FPFN_vkCmdPipelineBarrier2KHR',b'\x00\x00\x0D\x33PFN_vkCmdPreprocessGeneratedCommandsNV',b'\x00\x00\x0D\x5FPFN_vkCmdPushConstants',b'\x00\x00\x0D\x35PFN_vkCmdPushDescriptorSetKHR',b'\x00\x00\x0D\x54PFN_vkCmdPushDescriptorSetWithTemplateKHR',b'\x00\x00\x0D\x56PFN_vkCmdResetEvent',b'\x00\x00\x0D\x57PFN_vkCmdResetEvent2',b'\x00\x00\x0D\x57PFN_vkCmdResetEvent2KHR',b'\x00\x00\x0D\x61PFN_vkCmdResetQueryPool',b'\x00\x00\x0D\x5EPFN_vkCmdResolveImage',b'\x00\x00\x0D\x3FPFN_vkCmdResolveImage2',b'\x00\x00\x0D\x3FPFN_vkCmdResolveImage2KHR',b'\x00\x00\x0D\x46PFN_vkCmdSetBlendConstants',b'\x00\x00\x0D\x86PFN_vkCmdSetCheckpointNV',b'\x00\x00\x0D\x22PFN_vkCmdSetCoarseSampleOrderNV',b'\x00\x00\x0D\x75PFN_vkCmdSetColorWriteEnableEXT',b'\x00\x00\x0D\x64PFN_vkCmdSetCullMode',b'\x00\x00\x0D\x64PFN_vkCmdSetCullModeEXT',b'\x00\x00\x0D\x49PFN_vkCmdSetDepthBias',b'\x00\x00\x0D\x64PFN_vkCmdSetDepthBiasEnable',b'\x00\x00\x0D\x64PFN_vkCmdSetDepthBiasEnableEXT',b'\x00\x00\x0D\x48PFN_vkCmdSetDepthBounds',b'\x00\x00\x0D\x64PFN_vkCmdSetDepthBoundsTestEnable',b'\x00\x00\x0D\x64PFN_vkCmdSetDepthBoundsTestEnableEXT',b'\x00\x00\x0D\x23PFN_vkCmdSetDepthCompareOp',b'\x00\x00\x0D\x23PFN_vkCmdSetDepthCompareOpEXT',b'\x00\x00\x0D\x64PFN_vkCmdSetDepthTestEnable',b'\x00\x00\x0D\x64PFN_vkCmdSetDepthTestEnableEXT',b'\x00\x00\x0D\x64PFN_vkCmdSetDepthWriteEnable',b'\x00\x00\x0D\x64PFN_vkCmdSetDepthWriteEnableEXT',b'\x00\x00\x0D\x64PFN_vkCmdSetDeviceMask',b'\x00\x00\x0D\x64PFN_vkCmdSetDeviceMaskKHR',b'\x00\x00\x0D\x77PFN_vkCmdSetDiscardRectangleEXT',b'\x00\x00\x0D\x56PFN_vkCmdSetEvent',b'\x00\x00\x0D\x55PFN_vkCmdSetEvent2',b'\x00\x00\x0D\x55PFN_vkCmdSetEvent2KHR',b'\x00\x00\x0D\x77PFN_vkCmdSetExclusiveScissorNV',b'\x00\x00\x0D\x31PFN_vkCmdSetFragmentShadingRateEnumNV',b'\x00\x00\x0D\x30PFN_vkCmdSetFragmentShadingRateKHR',b'\x00\x00\x0D\x32PFN_vkCmdSetFrontFace',b'\x00\x00\x0D\x32PFN_vkCmdSetFrontFaceEXT',b'\x00\x00\x0D\x74PFN_vkCmdSetLineStippleEXT',b'\x00\x00\x0D\x47PFN_vkCmdSetLineWidth',b'\x00\x00\x0D\x34PFN_vkCmdSetLogicOpEXT',b'\x00\x00\x0D\x64PFN_vkCmdSetPatchControlPointsEXT',b'\x00\x00\x0B\x87PFN_vkCmdSetPerformanceMarkerINTEL',b'\x00\x00\x0B\x88PFN_vkCmdSetPerformanceOverrideINTEL',b'\x00\x00\x0B\x89PFN_vkCmdSetPerformanceStreamMarkerINTEL',b'\x00\x00\x0D\x64PFN_vkCmdSetPrimitiveRestartEnable',b'\x00\x00\x0D\x64PFN_vkCmdSetPrimitiveRestartEnableEXT',b'\x00\x00\x0D\x3BPFN_vkCmdSetPrimitiveTopology',b'\x00\x00\x0D\x3BPFN_vkCmdSetPrimitiveTopologyEXT',b'\x00\x00\x0D\x64PFN_vkCmdSetRasterizerDiscardEnable',b'\x00\x00\x0D\x64PFN_vkCmdSetRasterizerDiscardEnableEXT',b'\x00\x00\x0D\x64PFN_vkCmdSetRayTracingPipelineStackSizeKHR',b'\x00\x00\x0D\x40PFN_vkCmdSetSampleLocationsEXT',b'\x00\x00\x0D\x77PFN_vkCmdSetScissor',b'\x00\x00\x0D\x6BPFN_vkCmdSetScissorWithCount',b'\x00\x00\x0D\x6BPFN_vkCmdSetScissorWithCountEXT',b'\x00\x00\x0D\x76PFN_vkCmdSetStencilCompareMask',b'\x00\x00\x0D\x6CPFN_vkCmdSetStencilOp',b'\x00\x00\x0D\x6CPFN_vkCmdSetStencilOpEXT',b'\x00\x00\x0D\x76PFN_vkCmdSetStencilReference',b'\x00\x00\x0D\x64PFN_vkCmdSetStencilTestEnable',b'\x00\x00\x0D\x64PFN_vkCmdSetStencilTestEnableEXT',b'\x00\x00\x0D\x76PFN_vkCmdSetStencilWriteMask',b'\x00\x00\x0D\x6DPFN_vkCmdSetVertexInputEXT',b'\x00\x00\x0D\x79PFN_vkCmdSetViewport',b'\x00\x00\x0D\x78PFN_vkCmdSetViewportShadingRatePaletteNV',b'\x00\x00\x0D\x7APFN_vkCmdSetViewportWScalingNV',b'\x00\x00\x0D\x6EPFN_vkCmdSetViewportWithCount',b'\x00\x00\x0D\x6EPFN_vkCmdSetViewportWithCountEXT',b'\x00\x00\x0D\x1FPFN_vkCmdSubpassShadingHUAWEI',b'\x00\x00\x0D\x42PFN_vkCmdTraceRaysIndirectKHR',b'\x00\x00\x0D\x41PFN_vkCmdTraceRaysKHR',b'\x00\x00\x0D\x50PFN_vkCmdTraceRaysNV',b'\x00\x00\x0D\x53PFN_vkCmdUpdateBuffer',b'\x00\x00\x0D\x73PFN_vkCmdWaitEvents',b'\x00\x00\x0D\x72PFN_vkCmdWaitEvents2',b'\x00\x00\x0D\x72PFN_vkCmdWaitEvents2KHR',b'\x00\x00\x0D\x6FPFN_vkCmdWriteAccelerationStructuresPropertiesKHR',b'\x00\x00\x0D\x70PFN_vkCmdWriteAccelerationStructuresPropertiesNV',b'\x00\x00\x0D\x84PFN_vkCmdWriteBufferMarker2AMD',b'\x00\x00\x0D\x39PFN_vkCmdWriteBufferMarkerAMD',b'\x00\x00\x0D\x3APFN_vkCmdWriteTimestamp',b'\x00\x00\x0D\x85PFN_vkCmdWriteTimestamp2',b'\x00\x00\x0D\x85PFN_vkCmdWriteTimestamp2KHR',b'\x00\x00\x0B\xE1PFN_vkCompileDeferredNV',b'\x00\x00\x0B\xCBPFN_vkCopyAccelerationStructureKHR',b'\x00\x00\x0B\xCCPFN_vkCopyAccelerationStructureToMemoryKHR',b'\x00\x00\x0B\xCDPFN_vkCopyMemoryToAccelerationStructureKHR',b'\x00\x00\x0B\x8CPFN_vkCreateAccelerationStructureKHR',b'\x00\x00\x0B\x8DPFN_vkCreateAccelerationStructureNV',b'\x00\x00\x0B\xF9PFN_vkCreateAndroidSurfaceKHR',b'\x00\x00\x0B\x91PFN_vkCreateBuffer',b'\x00\x00\x0B\x92PFN_vkCreateBufferView',b'\x00\x00\x0B\x94PFN_vkCreateCommandPool',b'\x00\x00\x0B\xDCPFN_vkCreateComputePipelines',b'\x00\x00\x0B\x95PFN_vkCreateCuFunctionNVX',b'\x00\x00\x0B\x96PFN_vkCreateCuModuleNVX',b'\x00\x00\x0B\xFAPFN_vkCreateDebugReportCallbackEXT',b'\x00\x00\x0B\xFBPFN_vkCreateDebugUtilsMessengerEXT',b'\x00\x00\x0B\x90PFN_vkCreateDeferredOperationKHR',b'\x00\x00\x0B\x9BPFN_vkCreateDescriptorPool',b'\x00\x00\x0B\x9DPFN_vkCreateDescriptorSetLayout',b'\x00\x00\x0B\x9EPFN_vkCreateDescriptorUpdateTemplate',b'\x00\x00\x0B\x9EPFN_vkCreateDescriptorUpdateTemplateKHR',b'\x00\x00\x0C\x03PFN_vkCreateDevice',b'\x00\x00\x0C\x0EPFN_vkCreateDisplayModeKHR',b'\x00\x00\x0B\xFCPFN_vkCreateDisplayPlaneSurfaceKHR',b'\x00\x00\x0B\xA1PFN_vkCreateEvent',b'\x00\x00\x0B\xA4PFN_vkCreateFence',b'\x00\x00\x0B\xA6PFN_vkCreateFramebuffer',b'\x00\x00\x0B\xDDPFN_vkCreateGraphicsPipelines',b'\x00\x00\x0B\xFDPFN_vkCreateHeadlessSurfaceEXT',b'\x00\x00\x0B\xA7PFN_vkCreateImage',b'\x00\x00\x0B\xA8PFN_vkCreateImageView',b'\x00\x00\x0B\xABPFN_vkCreateIndirectCommandsLayoutNV',b'\x00\x00\x0B\x83PFN_vkCreateInstance',b'\x00\x00\x0B\xB4PFN_vkCreatePipelineCache',b'\x00\x00\x0B\xB8PFN_vkCreatePipelineLayout',b'\x00\x00\x0B\xB9PFN_vkCreatePrivateDataSlot',b'\x00\x00\x0B\xB9PFN_vkCreatePrivateDataSlotEXT',b'\x00\x00\x0B\xBAPFN_vkCreateQueryPool',b'\x00\x00\x0B\xCEPFN_vkCreateRayTracingPipelinesKHR',b'\x00\x00\x0B\xDEPFN_vkCreateRayTracingPipelinesNV',b'\x00\x00\x0B\xBBPFN_vkCreateRenderPass',b'\x00\x00\x0B\xBCPFN_vkCreateRenderPass2',b'\x00\x00\x0B\xBCPFN_vkCreateRenderPass2KHR',b'\x00\x00\x0B\xBDPFN_vkCreateSampler',b'\x00\x00\x0B\xBEPFN_vkCreateSamplerYcbcrConversion',b'\x00\x00\x0B\xBEPFN_vkCreateSamplerYcbcrConversionKHR',b'\x00\x00\x0B\xBFPFN_vkCreateSemaphore',b'\x00\x00\x0B\xC3PFN_vkCreateShaderModule',b'\x00\x00\x0B\xF5PFN_vkCreateSharedSwapchainsKHR',b'\x00\x00\x0B\xC4PFN_vkCreateSwapchainKHR',b'\x00\x00\x0B\xC5PFN_vkCreateValidationCacheEXT',b'\x00\x00\x0B\xFEPFN_vkCreateWaylandSurfaceKHR',b'\x00\x00\x0B\xFFPFN_vkCreateXcbSurfaceKHR',b'\x00\x00\x0C\x00PFN_vkCreateXlibSurfaceKHR',b'\x00\x00\x0B\x97PFN_vkDebugMarkerSetObjectNameEXT',b'\x00\x00\x0B\x98PFN_vkDebugMarkerSetObjectTagEXT',b'\x00\x00\x0D\x04PFN_vkDebugReportCallbackEXT',b'\x00\x00\x0D\xCCPFN_vkDebugReportMessageEXT',b'\x00\x00\x0C\xFEPFN_vkDebugUtilsMessengerCallbackEXT',b'\x00\x00\x0B\xCAPFN_vkDeferredOperationJoinKHR',b'\x00\x00\x0D\x97PFN_vkDestroyAccelerationStructureKHR',b'\x00\x00\x0D\x98PFN_vkDestroyAccelerationStructureNV',b'\x00\x00\x0D\x9APFN_vkDestroyBuffer',b'\x00\x00\x0D\x99PFN_vkDestroyBufferView',b'\x00\x00\x0D\x9CPFN_vkDestroyCommandPool',b'\x00\x00\x0D\x9FPFN_vkDestroyCuFunctionNVX',b'\x00\x00\x0D\xA0PFN_vkDestroyCuModuleNVX',b'\x00\x00\x0D\xC9PFN_vkDestroyDebugReportCallbackEXT',b'\x00\x00\x0D\xCAPFN_vkDestroyDebugUtilsMessengerEXT',b'\x00\x00\x0D\xA1PFN_vkDestroyDeferredOperationKHR',b'\x00\x00\x0D\xA2PFN_vkDestroyDescriptorPool',b'\x00\x00\x0D\xA3PFN_vkDestroyDescriptorSetLayout',b'\x00\x00\x0D\xA6PFN_vkDestroyDescriptorUpdateTemplate',b'\x00\x00\x0D\xA6PFN_vkDestroyDescriptorUpdateTemplateKHR',b'\x00\x00\x0D\x8BPFN_vkDestroyDevice',b'\x00\x00\x0D\xABPFN_vkDestroyEvent',b'\x00\x00\x0D\xACPFN_vkDestroyFence',b'\x00\x00\x0D\xADPFN_vkDestroyFramebuffer',b'\x00\x00\x0D\xAFPFN_vkDestroyImage',b'\x00\x00\x0D\xAEPFN_vkDestroyImageView',b'\x00\x00\x0D\xB3PFN_vkDestroyIndirectCommandsLayoutNV',b'\x00\x00\x0D\xC7PFN_vkDestroyInstance',b'\x00\x00\x0D\xB6PFN_vkDestroyPipeline',b'\x00\x00\x0D\xB4PFN_vkDestroyPipelineCache',b'\x00\x00\x0D\xB5PFN_vkDestroyPipelineLayout',b'\x00\x00\x0D\xB7PFN_vkDestroyPrivateDataSlot',b'\x00\x00\x0D\xB7PFN_vkDestroyPrivateDataSlotEXT',b'\x00\x00\x0D\xB8PFN_vkDestroyQueryPool',b'\x00\x00\x0D\xBAPFN_vkDestroyRenderPass',b'\x00\x00\x0D\xBDPFN_vkDestroySampler',b'\x00\x00\x0D\xBCPFN_vkDestroySamplerYcbcrConversion',b'\x00\x00\x0D\xBCPFN_vkDestroySamplerYcbcrConversionKHR',b'\x00\x00\x0D\xBEPFN_vkDestroySemaphore',b'\x00\x00\x0D\xBFPFN_vkDestroyShaderModule',b'\x00\x00\x0D\xCBPFN_vkDestroySurfaceKHR',b'\x00\x00\x0D\xC0PFN_vkDestroySwapchainKHR',b'\x00\x00\x0D\xC2PFN_vkDestroyValidationCacheEXT',b'\x00\x00\x0D\x1EPFN_vkDeviceMemoryReportCallbackEXT',b'\x00\x00\x0B\x8BPFN_vkDeviceWaitIdle',b'\x00\x00\x0B\xD4PFN_vkDisplayPowerControlEXT',b'\x00\x00\x0B\x85PFN_vkEndCommandBuffer',b'\x00\x00\x0C\x0APFN_vkEnumerateDeviceExtensionProperties',b'\x00\x00\x0C\x1DPFN_vkEnumerateDeviceLayerProperties',b'\x00\x00\x0B\x84PFN_vkEnumerateInstanceExtensionProperties',b'\x00\x00\x0C\x2CPFN_vkEnumerateInstanceLayerProperties',b'\x00\x00\x0C\x2BPFN_vkEnumerateInstanceVersion',b'\x00\x00\x0C\x01PFN_vkEnumeratePhysicalDeviceGroups',b'\x00\x00\x0C\x01PFN_vkEnumeratePhysicalDeviceGroupsKHR',b'\x00\x00\x0C\x23PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR',b'\x00\x00\x0C\x02PFN_vkEnumeratePhysicalDevices',b'\x00\x00\x0B\xF4PFN_vkFlushMappedMemoryRanges',b'\x00\x00\x0D\x9EPFN_vkFreeCommandBuffers',b'\x00\x00\x0B\xD1PFN_vkFreeDescriptorSets',b'\x00\x00\x0D\xE3PFN_vkFreeFunction',b'\x00\x00\x0D\xA8PFN_vkFreeMemory',b'\x00\x00\x0D\x88PFN_vkGetAccelerationStructureBuildSizesKHR',b'\x00\x00\x0D\x0DPFN_vkGetAccelerationStructureDeviceAddressKHR',b'\x00\x00\x0B\xC7PFN_vkGetAccelerationStructureHandleNV',b'\x00\x00\x0D\x89PFN_vkGetAccelerationStructureMemoryRequirementsNV',b'\x00\x00\x0B\xC6PFN_vkGetAndroidHardwareBufferPropertiesANDROID',b'\x00\x00\x0D\x0EPFN_vkGetBufferDeviceAddress',b'\x00\x00\x0D\x0EPFN_vkGetBufferDeviceAddressEXT',b'\x00\x00\x0D\x0EPFN_vkGetBufferDeviceAddressKHR',b'\x00\x00\x0D\x9BPFN_vkGetBufferMemoryRequirements',b'\x00\x00\x0D\x8CPFN_vkGetBufferMemoryRequirements2',b'\x00\x00\x0D\x8CPFN_vkGetBufferMemoryRequirements2KHR',b'\x00\x00\x0D\x0EPFN_vkGetBufferOpaqueCaptureAddress',b'\x00\x00\x0D\x0EPFN_vkGetBufferOpaqueCaptureAddressKHR',b'\x00\x00\x0B\xF3PFN_vkGetCalibratedTimestampsEXT',b'\x00\x00\x0D\x00PFN_vkGetDeferredOperationMaxConcurrencyKHR',b'\x00\x00\x0B\xCAPFN_vkGetDeferredOperationResultKHR',b'\x00\x00\x0D\xA5PFN_vkGetDescriptorSetHostMappingVALVE',b'\x00\x00\x0D\x8DPFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE',b'\x00\x00\x0D\x8EPFN_vkGetDescriptorSetLayoutSupport',b'\x00\x00\x0D\x8EPFN_vkGetDescriptorSetLayoutSupportKHR',b'\x00\x00\x0D\x8APFN_vkGetDeviceAccelerationStructureCompatibilityKHR',b'\x00\x00\x0D\x8FPFN_vkGetDeviceBufferMemoryRequirements',b'\x00\x00\x0D\x8FPFN_vkGetDeviceBufferMemoryRequirementsKHR',b'\x00\x00\x0D\xC6PFN_vkGetDeviceGroupPeerMemoryFeatures',b'\x00\x00\x0D\xC6PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR',b'\x00\x00\x0B\xA0PFN_vkGetDeviceGroupPresentCapabilitiesKHR',b'\x00\x00\x0B\xE6PFN_vkGetDeviceGroupSurfacePresentModesKHR',b'\x00\x00\x0D\x90PFN_vkGetDeviceImageMemoryRequirements',b'\x00\x00\x0D\x90PFN_vkGetDeviceImageMemoryRequirementsKHR',b'\x00\x00\x0D\x91PFN_vkGetDeviceImageSparseMemoryRequirements',b'\x00\x00\x0D\x91PFN_vkGetDeviceImageSparseMemoryRequirementsKHR',b'\x00\x00\x0D\xAAPFN_vkGetDeviceMemoryCommitment',b'\x00\x00\x0D\x0FPFN_vkGetDeviceMemoryOpaqueCaptureAddress',b'\x00\x00\x0D\x0FPFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR',b'\x00\x00\x0D\x1CPFN_vkGetDeviceProcAddr',b'\x00\x00\x0D\xC5PFN_vkGetDeviceQueue',b'\x00\x00\x0D\x92PFN_vkGetDeviceQueue2',b'\x00\x00\x0B\xE4PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI',b'\x00\x00\x0C\x0FPFN_vkGetDisplayModeProperties2KHR',b'\x00\x00\x0C\x10PFN_vkGetDisplayModePropertiesKHR',b'\x00\x00\x0C\x04PFN_vkGetDisplayPlaneCapabilities2KHR',b'\x00\x00\x0C\x11PFN_vkGetDisplayPlaneCapabilitiesKHR',b'\x00\x00\x0C\x24PFN_vkGetDisplayPlaneSupportedDisplaysKHR',b'\x00\x00\x0C\x0CPFN_vkGetDrmDisplayEXT',b'\x00\x00\x0B\xD5PFN_vkGetEventStatus',b'\x00\x00\x0B\xA5PFN_vkGetFenceFdKHR',b'\x00\x00\x0B\xD6PFN_vkGetFenceStatus',b'\x00\x00\x0D\x93PFN_vkGetGeneratedCommandsMemoryRequirementsNV',b'\x00\x00\x0B\xD8PFN_vkGetImageDrmFormatModifierPropertiesEXT',b'\x00\x00\x0D\xB1PFN_vkGetImageMemoryRequirements',b'\x00\x00\x0D\x94PFN_vkGetImageMemoryRequirements2',b'\x00\x00\x0D\x94PFN_vkGetImageMemoryRequirements2KHR',b'\x00\x00\x0D\xB2PFN_vkGetImageSparseMemoryRequirements',b'\x00\x00\x0D\x95PFN_vkGetImageSparseMemoryRequirements2',b'\x00\x00\x0D\x95PFN_vkGetImageSparseMemoryRequirements2KHR',b'\x00\x00\x0D\xB0PFN_vkGetImageSubresourceLayout',b'\x00\x00\x0B\xD7PFN_vkGetImageViewAddressNVX',b'\x00\x00\x0C\xFFPFN_vkGetImageViewHandleNVX',b'\x00\x00\x0D\x1DPFN_vkGetInstanceProcAddr',b'\x00\x00\x0B\xAEPFN_vkGetMemoryAndroidHardwareBufferANDROID',b'\x00\x00\x0B\xAFPFN_vkGetMemoryFdKHR',b'\x00\x00\x0B\xA2PFN_vkGetMemoryFdPropertiesKHR',b'\x00\x00\x0B\xA3PFN_vkGetMemoryHostPointerPropertiesEXT',b'\x00\x00\x0B\xB0PFN_vkGetMemoryRemoteAddressNV',b'\x00\x00\x0B\xEAPFN_vkGetPastPresentationTimingGOOGLE',b'\x00\x00\x0B\xB3PFN_vkGetPerformanceParameterINTEL',b'\x00\x00\x0C\x20PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT',b'\x00\x00\x0C\x17PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV',b'\x00\x00\x0C\x18PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR',b'\x00\x00\x0C\x19PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR',b'\x00\x00\x0C\x1APFN_vkGetPhysicalDeviceDisplayProperties2KHR',b'\x00\x00\x0C\x1BPFN_vkGetPhysicalDeviceDisplayPropertiesKHR',b'\x00\x00\x0D\xD0PFN_vkGetPhysicalDeviceExternalBufferProperties',b'\x00\x00\x0D\xD0PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR',b'\x00\x00\x0D\xD1PFN_vkGetPhysicalDeviceExternalFenceProperties',b'\x00\x00\x0D\xD1PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR',b'\x00\x00\x0C\x06PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV',b'\x00\x00\x0D\xD2PFN_vkGetPhysicalDeviceExternalSemaphoreProperties',b'\x00\x00\x0D\xD2PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR',b'\x00\x00\x0D\xD3PFN_vkGetPhysicalDeviceFeatures',b'\x00\x00\x0D\xD4PFN_vkGetPhysicalDeviceFeatures2',b'\x00\x00\x0D\xD4PFN_vkGetPhysicalDeviceFeatures2KHR',b'\x00\x00\x0D\xCDPFN_vkGetPhysicalDeviceFormatProperties',b'\x00\x00\x0D\xCEPFN_vkGetPhysicalDeviceFormatProperties2',b'\x00\x00\x0D\xCEPFN_vkGetPhysicalDeviceFormatProperties2KHR',b'\x00\x00\x0C\x1EPFN_vkGetPhysicalDeviceFragmentShadingRatesKHR',b'\x00\x00\x0C\x05PFN_vkGetPhysicalDeviceImageFormatProperties',b'\x00\x00\x0C\x07PFN_vkGetPhysicalDeviceImageFormatProperties2',b'\x00\x00\x0C\x07PFN_vkGetPhysicalDeviceImageFormatProperties2KHR',b'\x00\x00\x0D\xD5PFN_vkGetPhysicalDeviceMemoryProperties',b'\x00\x00\x0D\xD6PFN_vkGetPhysicalDeviceMemoryProperties2',b'\x00\x00\x0D\xD6PFN_vkGetPhysicalDeviceMemoryProperties2KHR',b'\x00\x00\x0D\xDBPFN_vkGetPhysicalDeviceMultisamplePropertiesEXT',b'\x00\x00\x0C\x15PFN_vkGetPhysicalDevicePresentRectanglesKHR',b'\x00\x00\x0D\xD7PFN_vkGetPhysicalDeviceProperties',b'\x00\x00\x0D\xD8PFN_vkGetPhysicalDeviceProperties2',b'\x00\x00\x0D\xD8PFN_vkGetPhysicalDeviceProperties2KHR',b'\x00\x00\x0D\xDAPFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR',b'\x00\x00\x0D\xDCPFN_vkGetPhysicalDeviceQueueFamilyProperties',b'\x00\x00\x0D\xDDPFN_vkGetPhysicalDeviceQueueFamilyProperties2',b'\x00\x00\x0D\xDDPFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR',b'\x00\x00\x0D\xCFPFN_vkGetPhysicalDeviceSparseImageFormatProperties',b'\x00\x00\x0D\xD9PFN_vkGetPhysicalDeviceSparseImageFormatProperties2',b'\x00\x00\x0D\xD9PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR',b'\x00\x00\x0C\x1CPFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV',b'\x00\x00\x0C\x12PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT',b'\x00\x00\x0C\x08PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR',b'\x00\x00\x0C\x13PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR',b'\x00\x00\x0C\x09PFN_vkGetPhysicalDeviceSurfaceFormats2KHR',b'\x00\x00\x0C\x16PFN_vkGetPhysicalDeviceSurfaceFormatsKHR',b'\x00\x00\x0C\x14PFN_vkGetPhysicalDeviceSurfacePresentModesKHR',b'\x00\x00\x0C\x22PFN_vkGetPhysicalDeviceSurfaceSupportKHR',b'\x00\x00\x0C\x1FPFN_vkGetPhysicalDeviceToolProperties',b'\x00\x00\x0C\x1FPFN_vkGetPhysicalDeviceToolPropertiesEXT',b'\x00\x00\x0D\x02PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR',b'\x00\x00\x0D\x03PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR',b'\x00\x00\x0D\x01PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR',b'\x00\x00\x0B\xDBPFN_vkGetPipelineCacheData',b'\x00\x00\x0B\xB5PFN_vkGetPipelineExecutableInternalRepresentationsKHR',b'\x00\x00\x0B\xB7PFN_vkGetPipelineExecutablePropertiesKHR',b'\x00\x00\x0B\xB6PFN_vkGetPipelineExecutableStatisticsKHR',b'\x00\x00\x0D\x96PFN_vkGetPrivateData',b'\x00\x00\x0D\x96PFN_vkGetPrivateDataEXT',b'\x00\x00\x0B\xE3PFN_vkGetQueryPoolResults',b'\x00\x00\x0D\xE0PFN_vkGetQueueCheckpointData2NV',b'\x00\x00\x0D\xE1PFN_vkGetQueueCheckpointDataNV',b'\x00\x00\x0B\xE2PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR',b'\x00\x00\x0B\xE2PFN_vkGetRayTracingShaderGroupHandlesKHR',b'\x00\x00\x0B\xE2PFN_vkGetRayTracingShaderGroupHandlesNV',b'\x00\x00\x0D\x10PFN_vkGetRayTracingShaderGroupStackSizeKHR',b'\x00\x00\x0B\xE8PFN_vkGetRefreshCycleDurationGOOGLE',b'\x00\x00\x0D\xBBPFN_vkGetRenderAreaGranularity',b'\x00\x00\x0B\xE5PFN_vkGetSemaphoreCounterValue',b'\x00\x00\x0B\xE5PFN_vkGetSemaphoreCounterValueKHR',b'\x00\x00\x0B\xC0PFN_vkGetSemaphoreFdKHR',b'\x00\x00\x0B\xE0PFN_vkGetShaderInfoAMD',b'\x00\x00\x0B\xE9PFN_vkGetSwapchainCounterEXT',b'\x00\x00\x0B\xEBPFN_vkGetSwapchainImagesKHR',b'\x00\x00\x0B\xE7PFN_vkGetSwapchainStatusKHR',b'\x00\x00\x0B\xEEPFN_vkGetValidationCacheDataEXT',b'\x00\x00\x0C\x21PFN_vkGetWinrtDisplayNV',b'\x00\x00\x0B\xA9PFN_vkImportFenceFdKHR',b'\x00\x00\x0B\xAAPFN_vkImportSemaphoreFdKHR',b'\x00\x00\x0B\xACPFN_vkInitializePerformanceApiINTEL',b'\x00\x00\x0D\xE2PFN_vkInternalAllocationNotification',b'\x00\x00\x0D\xE2PFN_vkInternalFreeNotification',b'\x00\x00\x0B\xF4PFN_vkInvalidateMappedMemoryRanges',b'\x00\x00\x0B\xD2PFN_vkMapMemory',b'\x00\x00\x0B\xDFPFN_vkMergePipelineCaches',b'\x00\x00\x0B\xEFPFN_vkMergeValidationCachesEXT',b'\x00\x00\x0D\xDFPFN_vkQueueBeginDebugUtilsLabelEXT',b'\x00\x00\x0C\x28PFN_vkQueueBindSparse',b'\x00\x00\x0D\xDEPFN_vkQueueEndDebugUtilsLabelEXT',b'\x00\x00\x0D\xDFPFN_vkQueueInsertDebugUtilsLabelEXT',b'\x00\x00\x0C\x26PFN_vkQueuePresentKHR',b'\x00\x00\x0C\x27PFN_vkQueueSetPerformanceConfigurationINTEL',b'\x00\x00\x0C\x29PFN_vkQueueSubmit',b'\x00\x00\x0C\x2APFN_vkQueueSubmit2',b'\x00\x00\x0C\x2APFN_vkQueueSubmit2KHR',b'\x00\x00\x0C\x25PFN_vkQueueWaitIdle',b'\x00\x00\x0D\x1APFN_vkReallocationFunction',b'\x00\x00\x0B\x9FPFN_vkRegisterDeviceEventEXT',b'\x00\x00\x0B\xD3PFN_vkRegisterDisplayEventEXT',b'\x00\x00\x0C\x0DPFN_vkReleaseDisplayEXT',b'\x00\x00\x0B\xDAPFN_vkReleasePerformanceConfigurationINTEL',b'\x00\x00\x0D\x87PFN_vkReleaseProfilingLockKHR',b'\x00\x00\x0B\x8APFN_vkResetCommandBuffer',b'\x00\x00\x0B\xC9PFN_vkResetCommandPool',b'\x00\x00\x0B\xD0PFN_vkResetDescriptorPool',b'\x00\x00\x0B\xD5PFN_vkResetEvent',b'\x00\x00\x0B\xF7PFN_vkResetFences',b'\x00\x00\x0D\xB9PFN_vkResetQueryPool',b'\x00\x00\x0D\xB9PFN_vkResetQueryPoolEXT',b'\x00\x00\x0B\x99PFN_vkSetDebugUtilsObjectNameEXT',b'\x00\x00\x0B\x9APFN_vkSetDebugUtilsObjectTagEXT',b'\x00\x00\x0D\xA9PFN_vkSetDeviceMemoryPriorityEXT',b'\x00\x00\x0B\xD5PFN_vkSetEvent',b'\x00\x00\x0D\xC4PFN_vkSetHdrMetadataEXT',b'\x00\x00\x0D\xC1PFN_vkSetLocalDimmingAMD',b'\x00\x00\x0B\xB1PFN_vkSetPrivateData',b'\x00\x00\x0B\xB1PFN_vkSetPrivateDataEXT',b'\x00\x00\x0B\xC1PFN_vkSignalSemaphore',b'\x00\x00\x0B\xC1PFN_vkSignalSemaphoreKHR',b'\x00\x00\x0D\xC8PFN_vkSubmitDebugUtilsMessageEXT',b'\x00\x00\x0D\x9DPFN_vkTrimCommandPool',b'\x00\x00\x0D\x9DPFN_vkTrimCommandPoolKHR',b'\x00\x00\x0D\x87PFN_vkUninitializePerformanceApiINTEL',b'\x00\x00\x0D\xA7PFN_vkUnmapMemory',b'\x00\x00\x0D\xA4PFN_vkUpdateDescriptorSetWithTemplate',b'\x00\x00\x0D\xA4PFN_vkUpdateDescriptorSetWithTemplateKHR',b'\x00\x00\x0D\xC3PFN_vkUpdateDescriptorSets',b'\x00\x00\x0D\xE4PFN_vkVoidFunction',b'\x00\x00\x0B\xF8PFN_vkWaitForFences',b'\x00\x00\x0B\xEDPFN_vkWaitForPresentKHR',b'\x00\x00\x0B\xC2PFN_vkWaitSemaphores',b'\x00\x00\x0B\xC2PFN_vkWaitSemaphoresKHR',b'\x00\x00\x0B\xF6PFN_vkWriteAccelerationStructuresPropertiesKHR',b'\x00\x00\x08\x82PSECURITY_ATTRIBUTES',b'\x00\x00\x01\x6APVOID',b'\x00\x00\x08\x83SECURITY_ATTRIBUTES',b'\x00\x00\x03\xC5VisualID',b'\x00\x00\x08\x84VkAabbPositionsKHR',b'\x00\x00\x08\x84VkAabbPositionsNV',b'\x00\x00\x08\x85VkAccelerationStructureBuildGeometryInfoKHR',b'\x00\x00\x08\x87VkAccelerationStructureBuildRangeInfoKHR',b'\x00\x00\x08\x88VkAccelerationStructureBuildSizesInfoKHR',b'\x00\x00\x06\x91VkAccelerationStructureBuildTypeKHR',b'\x00\x00\x08\x89VkAccelerationStructureCompatibilityKHR',b'\x00\x00\x08\x8AVkAccelerationStructureCreateFlagBitsKHR',b'\x00\x00\x00\x1FVkAccelerationStructureCreateFlagsKHR',b'\x00\x00\x08\x8BVkAccelerationStructureCreateInfoKHR',b'\x00\x00\x08\x8CVkAccelerationStructureCreateInfoNV',b'\x00\x00\x08\x8DVkAccelerationStructureDeviceAddressInfoKHR',b'\x00\x00\x08\x8EVkAccelerationStructureGeometryAabbsDataKHR',b'\x00\x00\x08\x8FVkAccelerationStructureGeometryDataKHR',b'\x00\x00\x08\x90VkAccelerationStructureGeometryInstancesDataKHR',b'\x00\x00\x08\x93VkAccelerationStructureGeometryKHR',b'\x00\x00\x08\x94VkAccelerationStructureGeometryMotionTrianglesDataNV',b'\x00\x00\x08\x95VkAccelerationStructureGeometryTrianglesDataKHR',b'\x00\x00\x08\x96VkAccelerationStructureInfoNV',b'\x00\x00\x08\x97VkAccelerationStructureInstanceKHR',b'\x00\x00\x08\x97VkAccelerationStructureInstanceNV',b'\x00\x00\x06\xE1VkAccelerationStructureKHR',b'\x00\x00\x08\x98VkAccelerationStructureMatrixMotionInstanceNV',b'\x00\x00\x08\x99VkAccelerationStructureMemoryRequirementsInfoNV',b'\x00\x00\x08\x9AVkAccelerationStructureMemoryRequirementsTypeNV',b'\x00\x00\x00\x1FVkAccelerationStructureMotionInfoFlagsNV',b'\x00\x00\x08\x9BVkAccelerationStructureMotionInfoNV',b'\x00\x00\x08\x9CVkAccelerationStructureMotionInstanceDataNV',b'\x00\x00\x00\x1FVkAccelerationStructureMotionInstanceFlagsNV',b'\x00\x00\x08\x9DVkAccelerationStructureMotionInstanceNV',b'\x00\x00\x08\x9EVkAccelerationStructureMotionInstanceTypeNV',b'\x00\x00\x01\x68VkAccelerationStructureNV',b'\x00\x00\x08\x9FVkAccelerationStructureSRTMotionInstanceNV',b'\x00\x00\x08\xA0VkAccelerationStructureTypeKHR',b'\x00\x00\x08\xA0VkAccelerationStructureTypeNV',b'\x00\x00\x08\xA1VkAccelerationStructureVersionInfoKHR',b'\x00\x00\x08\xA2VkAccessFlagBits',b'\x00\x00\x00\xEBVkAccessFlagBits2',b'\x00\x00\x00\xEBVkAccessFlagBits2KHR',b'\x00\x00\x00\x1FVkAccessFlags',b'\x00\x00\x00\xEBVkAccessFlags2',b'\x00\x00\x00\xEBVkAccessFlags2KHR',b'\x00\x00\x08\xA3VkAcquireNextImageInfoKHR',b'\x00\x00\x08\xA4VkAcquireProfilingLockFlagBitsKHR',b'\x00\x00\x00\x1FVkAcquireProfilingLockFlagsKHR',b'\x00\x00\x08\xA5VkAcquireProfilingLockInfoKHR',b'\x00\x00\x08\xA6VkAllocationCallbacks',b'\x00\x00\x08\xA7VkAndroidHardwareBufferFormatProperties2ANDROID',b'\x00\x00\x08\xA8VkAndroidHardwareBufferFormatPropertiesANDROID',b'\x00\x00\x08\xA9VkAndroidHardwareBufferPropertiesANDROID',b'\x00\x00\x08\xAAVkAndroidHardwareBufferUsageANDROID',b'\x00\x00\x00\x1FVkAndroidSurfaceCreateFlagsKHR',b'\x00\x00\x08\xABVkAndroidSurfaceCreateInfoKHR',b'\x00\x00\x08\xADVkApplicationInfo',b'\x00\x00\x08\xB1VkAttachmentDescription',b'\x00\x00\x08\xB0VkAttachmentDescription2',b'\x00\x00\x08\xB0VkAttachmentDescription2KHR',b'\x00\x00\x08\xB2VkAttachmentDescriptionFlagBits',b'\x00\x00\x00\x1FVkAttachmentDescriptionFlags',b'\x00\x00\x08\xB3VkAttachmentDescriptionStencilLayout',b'\x00\x00\x08\xB3VkAttachmentDescriptionStencilLayoutKHR',b'\x00\x00\x08\xB4VkAttachmentLoadOp',b'\x00\x00\x08\xB8VkAttachmentReference',b'\x00\x00\x08\xB7VkAttachmentReference2',b'\x00\x00\x08\xB7VkAttachmentReference2KHR',b'\x00\x00\x08\xB9VkAttachmentReferenceStencilLayout',b'\x00\x00\x08\xB9VkAttachmentReferenceStencilLayoutKHR',b'\x00\x00\x08\xBAVkAttachmentSampleCountInfoAMD',b'\x00\x00\x08\xBAVkAttachmentSampleCountInfoNV',b'\x00\x00\x08\xBCVkAttachmentSampleLocationsEXT',b'\x00\x00\x08\xBDVkAttachmentStoreOp',b'\x00\x00\x08\xBFVkBaseInStructure',b'\x00\x00\x08\xC1VkBaseOutStructure',b'\x00\x00\x08\xC2VkBindAccelerationStructureMemoryInfoNV',b'\x00\x00\x08\xC3VkBindBufferMemoryDeviceGroupInfo',b'\x00\x00\x08\xC3VkBindBufferMemoryDeviceGroupInfoKHR',b'\x00\x00\x08\xC4VkBindBufferMemoryInfo',b'\x00\x00\x08\xC4VkBindBufferMemoryInfoKHR',b'\x00\x00\x08\xC5VkBindImageMemoryDeviceGroupInfo',b'\x00\x00\x08\xC5VkBindImageMemoryDeviceGroupInfoKHR',b'\x00\x00\x08\xC6VkBindImageMemoryInfo',b'\x00\x00\x08\xC6VkBindImageMemoryInfoKHR',b'\x00\x00\x08\xC7VkBindImageMemorySwapchainInfoKHR',b'\x00\x00\x08\xC8VkBindImagePlaneMemoryInfo',b'\x00\x00\x08\xC8VkBindImagePlaneMemoryInfoKHR',b'\x00\x00\x08\xC9VkBindIndexBufferIndirectCommandNV',b'\x00\x00\x08\xCAVkBindShaderGroupIndirectCommandNV',b'\x00\x00\x08\xCBVkBindSparseInfo',b'\x00\x00\x08\xCCVkBindVertexBufferIndirectCommandNV',b'\x00\x00\x08\xCDVkBlendFactor',b'\x00\x00\x08\xCEVkBlendOp',b'\x00\x00\x08\xCFVkBlendOverlapEXT',b'\x00\x00\x08\xD0VkBlitImageInfo2',b'\x00\x00\x08\xD0VkBlitImageInfo2KHR',b'\x00\x00\x00\x1FVkBool32',b'\x00\x00\x08\xD1VkBorderColor',b'\x00\x00\x01\x6EVkBuffer',b'\x00\x00\x08\xD4VkBufferCopy',b'\x00\x00\x08\xD3VkBufferCopy2',b'\x00\x00\x08\xD3VkBufferCopy2KHR',b'\x00\x00\x08\xD5VkBufferCreateFlagBits',b'\x00\x00\x00\x1FVkBufferCreateFlags',b'\x00\x00\x08\xD6VkBufferCreateInfo',b'\x00\x00\x08\xD7VkBufferDeviceAddressCreateInfoEXT',b'\x00\x00\x08\xD8VkBufferDeviceAddressInfo',b'\x00\x00\x08\xD8VkBufferDeviceAddressInfoEXT',b'\x00\x00\x08\xD8VkBufferDeviceAddressInfoKHR',b'\x00\x00\x08\xDBVkBufferImageCopy',b'\x00\x00\x08\xDAVkBufferImageCopy2',b'\x00\x00\x08\xDAVkBufferImageCopy2KHR',b'\x00\x00\x08\xDEVkBufferMemoryBarrier',b'\x00\x00\x08\xDDVkBufferMemoryBarrier2',b'\x00\x00\x08\xDDVkBufferMemoryBarrier2KHR',b'\x00\x00\x08\xDFVkBufferMemoryRequirementsInfo2',b'\x00\x00\x08\xDFVkBufferMemoryRequirementsInfo2KHR',b'\x00\x00\x08\xE0VkBufferOpaqueCaptureAddressCreateInfo',b'\x00\x00\x08\xE0VkBufferOpaqueCaptureAddressCreateInfoKHR',b'\x00\x00\x08\xE1VkBufferUsageFlagBits',b'\x00\x00\x00\x1FVkBufferUsageFlags',b'\x00\x00\x06\xEBVkBufferView',b'\x00\x00\x00\x1FVkBufferViewCreateFlags',b'\x00\x00\x08\xE2VkBufferViewCreateInfo',b'\x00\x00\x08\xE3VkBuildAccelerationStructureFlagBitsKHR',b'\x00\x00\x08\xE3VkBuildAccelerationStructureFlagBitsNV',b'\x00\x00\x00\x1FVkBuildAccelerationStructureFlagsKHR',b'\x00\x00\x00\x1FVkBuildAccelerationStructureFlagsNV',b'\x00\x00\x08\xE4VkBuildAccelerationStructureModeKHR',b'\x00\x00\x08\xE5VkCalibratedTimestampInfoEXT',b'\x00\x00\x08\xE6VkCheckpointData2NV',b'\x00\x00\x08\xE7VkCheckpointDataNV',b'\x00\x00\x08\xE8VkChromaLocation',b'\x00\x00\x08\xE8VkChromaLocationKHR',b'\x00\x00\x08\xE9VkClearAttachment',b'\x00\x00\x08\xEAVkClearColorValue',b'\x00\x00\x08\xEBVkClearDepthStencilValue',b'\x00\x00\x08\xECVkClearRect',b'\x00\x00\x08\xEEVkClearValue',b'\x00\x00\x08\xF0VkCoarseSampleLocationNV',b'\x00\x00\x08\xF1VkCoarseSampleOrderCustomNV',b'\x00\x00\x04\x13VkCoarseSampleOrderTypeNV',b'\x00\x00\x08\xF2VkColorComponentFlagBits',b'\x00\x00\x00\x1FVkColorComponentFlags',b'\x00\x00\x08\xF3VkColorSpaceKHR',b'\x00\x00\x00\x0BVkCommandBuffer',b'\x00\x00\x08\xF4VkCommandBufferAllocateInfo',b'\x00\x00\x08\xF5VkCommandBufferBeginInfo',b'\x00\x00\x08\xF6VkCommandBufferInheritanceConditionalRenderingInfoEXT',b'\x00\x00\x08\xF8VkCommandBufferInheritanceInfo',b'\x00\x00\x08\xF9VkCommandBufferInheritanceRenderPassTransformInfoQCOM',b'\x00\x00\x08\xFAVkCommandBufferInheritanceRenderingInfo',b'\x00\x00\x08\xFAVkCommandBufferInheritanceRenderingInfoKHR',b'\x00\x00\x08\xFBVkCommandBufferInheritanceViewportScissorInfoNV',b'\x00\x00\x08\xFCVkCommandBufferLevel',b'\x00\x00\x08\xFDVkCommandBufferResetFlagBits',b'\x00\x00\x00\x1FVkCommandBufferResetFlags',b'\x00\x00\x08\xFFVkCommandBufferSubmitInfo',b'\x00\x00\x08\xFFVkCommandBufferSubmitInfoKHR',b'\x00\x00\x09\x00VkCommandBufferUsageFlagBits',b'\x00\x00\x00\x1FVkCommandBufferUsageFlags',b'\x00\x00\x01\x74VkCommandPool',b'\x00\x00\x09\x01VkCommandPoolCreateFlagBits',b'\x00\x00\x00\x1FVkCommandPoolCreateFlags',b'\x00\x00\x09\x02VkCommandPoolCreateInfo',b'\x00\x00\x09\x03VkCommandPoolResetFlagBits',b'\x00\x00\x00\x1FVkCommandPoolResetFlags',b'\x00\x00\x00\x1FVkCommandPoolTrimFlags',b'\x00\x00\x00\x1FVkCommandPoolTrimFlagsKHR',b'\x00\x00\x04\x19VkCompareOp',b'\x00\x00\x09\x04VkComponentMapping',b'\x00\x00\x09\x05VkComponentSwizzle',b'\x00\x00\x09\x06VkComponentTypeNV',b'\x00\x00\x09\x07VkCompositeAlphaFlagBitsKHR',b'\x00\x00\x00\x1FVkCompositeAlphaFlagsKHR',b'\x00\x00\x09\x08VkComputePipelineCreateInfo',b'\x00\x00\x09\x09VkConditionalRenderingBeginInfoEXT',b'\x00\x00\x09\x0AVkConditionalRenderingFlagBitsEXT',b'\x00\x00\x00\x1FVkConditionalRenderingFlagsEXT',b'\x00\x00\x09\x0BVkConformanceVersion',b'\x00\x00\x09\x0BVkConformanceVersionKHR',b'\x00\x00\x09\x0CVkConservativeRasterizationModeEXT',b'\x00\x00\x09\x0DVkCooperativeMatrixPropertiesNV',b'\x00\x00\x09\x0EVkCopyAccelerationStructureInfoKHR',b'\x00\x00\x04\xDBVkCopyAccelerationStructureModeKHR',b'\x00\x00\x04\xDBVkCopyAccelerationStructureModeNV',b'\x00\x00\x09\x0FVkCopyAccelerationStructureToMemoryInfoKHR',b'\x00\x00\x09\x10VkCopyBufferInfo2',b'\x00\x00\x09\x10VkCopyBufferInfo2KHR',b'\x00\x00\x09\x11VkCopyBufferToImageInfo2',b'\x00\x00\x09\x11VkCopyBufferToImageInfo2KHR',b'\x00\x00\x09\x12VkCopyCommandTransformInfoQCOM',b'\x00\x00\x09\x13VkCopyDescriptorSet',b'\x00\x00\x09\x14VkCopyImageInfo2',b'\x00\x00\x09\x14VkCopyImageInfo2KHR',b'\x00\x00\x09\x15VkCopyImageToBufferInfo2',b'\x00\x00\x09\x15VkCopyImageToBufferInfo2KHR',b'\x00\x00\x09\x16VkCopyMemoryToAccelerationStructureInfoKHR',b'\x00\x00\x09\x17VkCoverageModulationModeNV',b'\x00\x00\x09\x18VkCoverageReductionModeNV',b'\x00\x00\x09\x19VkCuFunctionCreateInfoNVX',b'\x00\x00\x07\x0AVkCuFunctionNVX',b'\x00\x00\x09\x1AVkCuLaunchInfoNVX',b'\x00\x00\x09\x1BVkCuModuleCreateInfoNVX',b'\x00\x00\x07\x0FVkCuModuleNVX',b'\x00\x00\x09\x1CVkCullModeFlagBits',b'\x00\x00\x00\x1FVkCullModeFlags',b'\x00\x00\x09\x1DVkDebugMarkerMarkerInfoEXT',b'\x00\x00\x09\x1EVkDebugMarkerObjectNameInfoEXT',b'\x00\x00\x09\x1FVkDebugMarkerObjectTagInfoEXT',b'\x00\x00\x09\x20VkDebugReportCallbackCreateInfoEXT',b'\x00\x00\x07\xE5VkDebugReportCallbackEXT',b'\x00\x00\x09\x21VkDebugReportFlagBitsEXT',b'\x00\x00\x00\x1FVkDebugReportFlagsEXT',b'\x00\x00\x03\xD4VkDebugReportObjectTypeEXT',b'\x00\x00\x09\x22VkDebugUtilsLabelEXT',b'\x00\x00\x03\xB4VkDebugUtilsMessageSeverityFlagBitsEXT',b'\x00\x00\x00\x1FVkDebugUtilsMessageSeverityFlagsEXT',b'\x00\x00\x09\x23VkDebugUtilsMessageTypeFlagBitsEXT',b'\x00\x00\x00\x1FVkDebugUtilsMessageTypeFlagsEXT',b'\x00\x00\x09\x24VkDebugUtilsMessengerCallbackDataEXT',b'\x00\x00\x00\x1FVkDebugUtilsMessengerCallbackDataFlagsEXT',b'\x00\x00\x00\x1FVkDebugUtilsMessengerCreateFlagsEXT',b'\x00\x00\x09\x25VkDebugUtilsMessengerCreateInfoEXT',b'\x00\x00\x07\xEAVkDebugUtilsMessengerEXT',b'\x00\x00\x09\x26VkDebugUtilsObjectNameInfoEXT',b'\x00\x00\x09\x27VkDebugUtilsObjectTagInfoEXT',b'\x00\x00\x09\x28VkDedicatedAllocationBufferCreateInfoNV',b'\x00\x00\x09\x29VkDedicatedAllocationImageCreateInfoNV',b'\x00\x00\x09\x2AVkDedicatedAllocationMemoryAllocateInfoNV',b'\x00\x00\x01\x79VkDeferredOperationKHR',b'\x00\x00\x09\x2BVkDependencyFlagBits',b'\x00\x00\x00\x1FVkDependencyFlags',b'\x00\x00\x09\x2CVkDependencyInfo',b'\x00\x00\x09\x2CVkDependencyInfoKHR',b'\x00\x00\x09\x2DVkDescriptorBindingFlagBits',b'\x00\x00\x09\x2DVkDescriptorBindingFlagBitsEXT',b'\x00\x00\x00\x1FVkDescriptorBindingFlags',b'\x00\x00\x00\x1FVkDescriptorBindingFlagsEXT',b'\x00\x00\x09\x2FVkDescriptorBufferInfo',b'\x00\x00\x09\x31VkDescriptorImageInfo',b'\x00\x00\x01\x9CVkDescriptorPool',b'\x00\x00\x09\x32VkDescriptorPoolCreateFlagBits',b'\x00\x00\x00\x1FVkDescriptorPoolCreateFlags',b'\x00\x00\x09\x33VkDescriptorPoolCreateInfo',b'\x00\x00\x09\x34VkDescriptorPoolInlineUniformBlockCreateInfo',b'\x00\x00\x09\x34VkDescriptorPoolInlineUniformBlockCreateInfoEXT',b'\x00\x00\x00\x1FVkDescriptorPoolResetFlags',b'\x00\x00\x09\x36VkDescriptorPoolSize',b'\x00\x00\x07\x23VkDescriptorSet',b'\x00\x00\x09\x37VkDescriptorSetAllocateInfo',b'\x00\x00\x09\x38VkDescriptorSetBindingReferenceVALVE',b'\x00\x00\x07\x1EVkDescriptorSetLayout',b'\x00\x00\x09\x3AVkDescriptorSetLayoutBinding',b'\x00\x00\x09\x3BVkDescriptorSetLayoutBindingFlagsCreateInfo',b'\x00\x00\x09\x3BVkDescriptorSetLayoutBindingFlagsCreateInfoEXT',b'\x00\x00\x09\x3CVkDescriptorSetLayoutCreateFlagBits',b'\x00\x00\x00\x1FVkDescriptorSetLayoutCreateFlags',b'\x00\x00\x09\x3DVkDescriptorSetLayoutCreateInfo',b'\x00\x00\x09\x3EVkDescriptorSetLayoutHostMappingInfoVALVE',b'\x00\x00\x09\x3FVkDescriptorSetLayoutSupport',b'\x00\x00\x09\x3FVkDescriptorSetLayoutSupportKHR',b'\x00\x00\x09\x40VkDescriptorSetVariableDescriptorCountAllocateInfo',b'\x00\x00\x09\x40VkDescriptorSetVariableDescriptorCountAllocateInfoEXT',b'\x00\x00\x09\x41VkDescriptorSetVariableDescriptorCountLayoutSupport',b'\x00\x00\x09\x41VkDescriptorSetVariableDescriptorCountLayoutSupportEXT',b'\x00\x00\x09\x43VkDescriptorType',b'\x00\x00\x05\x28VkDescriptorUpdateTemplate',b'\x00\x00\x00\x1FVkDescriptorUpdateTemplateCreateFlags',b'\x00\x00\x00\x1FVkDescriptorUpdateTemplateCreateFlagsKHR',b'\x00\x00\x09\x44VkDescriptorUpdateTemplateCreateInfo',b'\x00\x00\x09\x44VkDescriptorUpdateTemplateCreateInfoKHR',b'\x00\x00\x09\x46VkDescriptorUpdateTemplateEntry',b'\x00\x00\x09\x46VkDescriptorUpdateTemplateEntryKHR',b'\x00\x00\x05\x28VkDescriptorUpdateTemplateKHR',b'\x00\x00\x09\x47VkDescriptorUpdateTemplateType',b'\x00\x00\x09\x47VkDescriptorUpdateTemplateTypeKHR',b'\x00\x00\x00\x22VkDevice',b'\x00\x00\x00\xEBVkDeviceAddress',b'\x00\x00\x09\x48VkDeviceBufferMemoryRequirements',b'\x00\x00\x09\x48VkDeviceBufferMemoryRequirementsKHR',b'\x00\x00\x00\x1FVkDeviceCreateFlags',b'\x00\x00\x09\x49VkDeviceCreateInfo',b'\x00\x00\x09\x4AVkDeviceDeviceMemoryReportCreateInfoEXT',b'\x00\x00\x09\x4BVkDeviceDiagnosticsConfigCreateInfoNV',b'\x00\x00\x09\x4CVkDeviceDiagnosticsConfigFlagBitsNV',b'\x00\x00\x00\x1FVkDeviceDiagnosticsConfigFlagsNV',b'\x00\x00\x09\x4DVkDeviceEventInfoEXT',b'\x00\x00\x09\x4EVkDeviceEventTypeEXT',b'\x00\x00\x09\x4FVkDeviceGroupBindSparseInfo',b'\x00\x00\x09\x4FVkDeviceGroupBindSparseInfoKHR',b'\x00\x00\x09\x50VkDeviceGroupCommandBufferBeginInfo',b'\x00\x00\x09\x50VkDeviceGroupCommandBufferBeginInfoKHR',b'\x00\x00\x09\x51VkDeviceGroupDeviceCreateInfo',b'\x00\x00\x09\x51VkDeviceGroupDeviceCreateInfoKHR',b'\x00\x00\x09\x52VkDeviceGroupPresentCapabilitiesKHR',b'\x00\x00\x09\x53VkDeviceGroupPresentInfoKHR',b'\x00\x00\x09\x54VkDeviceGroupPresentModeFlagBitsKHR',b'\x00\x00\x00\x1FVkDeviceGroupPresentModeFlagsKHR',b'\x00\x00\x09\x55VkDeviceGroupRenderPassBeginInfo',b'\x00\x00\x09\x55VkDeviceGroupRenderPassBeginInfoKHR',b'\x00\x00\x09\x56VkDeviceGroupSubmitInfo',b'\x00\x00\x09\x56VkDeviceGroupSubmitInfoKHR',b'\x00\x00\x09\x57VkDeviceGroupSwapchainCreateInfoKHR',b'\x00\x00\x09\x58VkDeviceImageMemoryRequirements',b'\x00\x00\x09\x58VkDeviceImageMemoryRequirementsKHR',b'\x00\x00\x01\x6FVkDeviceMemory',b'\x00\x00\x09\x59VkDeviceMemoryOpaqueCaptureAddressInfo',b'\x00\x00\x09\x59VkDeviceMemoryOpaqueCaptureAddressInfoKHR',b'\x00\x00\x09\x5AVkDeviceMemoryOverallocationCreateInfoAMD',b'\x00\x00\x09\x5BVkDeviceMemoryReportCallbackDataEXT',b'\x00\x00\x09\x5CVkDeviceMemoryReportEventTypeEXT',b'\x00\x00\x00\x1FVkDeviceMemoryReportFlagsEXT',b'\x00\x00\x09\x5DVkDeviceOrHostAddressConstKHR',b'\x00\x00\x09\x5EVkDeviceOrHostAddressKHR',b'\x00\x00\x09\x5FVkDevicePrivateDataCreateInfo',b'\x00\x00\x09\x5FVkDevicePrivateDataCreateInfoEXT',b'\x00\x00\x09\x60VkDeviceQueueCreateFlagBits',b'\x00\x00\x00\x1FVkDeviceQueueCreateFlags',b'\x00\x00\x09\x62VkDeviceQueueCreateInfo',b'\x00\x00\x09\x63VkDeviceQueueGlobalPriorityCreateInfoEXT',b'\x00\x00\x09\x63VkDeviceQueueGlobalPriorityCreateInfoKHR',b'\x00\x00\x09\x64VkDeviceQueueInfo2',b'\x00\x00\x00\xEBVkDeviceSize',b'\x00\x00\x09\x65VkDiscardRectangleModeEXT',b'\x00\x00\x09\x66VkDispatchIndirectCommand',b'\x00\x00\x09\x67VkDisplayEventInfoEXT',b'\x00\x00\x09\x68VkDisplayEventTypeEXT',b'\x00\x00\x01\xAFVkDisplayKHR',b'\x00\x00\x00\x1FVkDisplayModeCreateFlagsKHR',b'\x00\x00\x09\x69VkDisplayModeCreateInfoKHR',b'\x00\x00\x03\x25VkDisplayModeKHR',b'\x00\x00\x09\x6AVkDisplayModeParametersKHR',b'\x00\x00\x09\x6BVkDisplayModeProperties2KHR',b'\x00\x00\x09\x6CVkDisplayModePropertiesKHR',b'\x00\x00\x09\x6DVkDisplayNativeHdrSurfaceCapabilitiesAMD',b'\x00\x00\x09\x6EVkDisplayPlaneAlphaFlagBitsKHR',b'\x00\x00\x00\x1FVkDisplayPlaneAlphaFlagsKHR',b'\x00\x00\x09\x6FVkDisplayPlaneCapabilities2KHR',b'\x00\x00\x09\x70VkDisplayPlaneCapabilitiesKHR',b'\x00\x00\x09\x71VkDisplayPlaneInfo2KHR',b'\x00\x00\x09\x72VkDisplayPlaneProperties2KHR',b'\x00\x00\x09\x73VkDisplayPlanePropertiesKHR',b'\x00\x00\x09\x74VkDisplayPowerInfoEXT',b'\x00\x00\x09\x75VkDisplayPowerStateEXT',b'\x00\x00\x09\x76VkDisplayPresentInfoKHR',b'\x00\x00\x09\x77VkDisplayProperties2KHR',b'\x00\x00\x09\x78VkDisplayPropertiesKHR',b'\x00\x00\x00\x1FVkDisplaySurfaceCreateFlagsKHR',b'\x00\x00\x09\x79VkDisplaySurfaceCreateInfoKHR',b'\x00\x00\x09\x7AVkDrawIndexedIndirectCommand',b'\x00\x00\x09\x7BVkDrawIndirectCommand',b'\x00\x00\x09\x7CVkDrawMeshTasksIndirectCommandNV',b'\x00\x00\x09\x7DVkDriverId',b'\x00\x00\x09\x7DVkDriverIdKHR',b'\x00\x00\x09\x7FVkDrmFormatModifierProperties2EXT',b'\x00\x00\x09\x81VkDrmFormatModifierPropertiesEXT',b'\x00\x00\x09\x82VkDrmFormatModifierPropertiesList2EXT',b'\x00\x00\x09\x83VkDrmFormatModifierPropertiesListEXT',b'\x00\x00\x09\x85VkDynamicState',b'\x00\x00\x01\xBBVkEvent',b'\x00\x00\x09\x86VkEventCreateFlagBits',b'\x00\x00\x00\x1FVkEventCreateFlags',b'\x00\x00\x09\x87VkEventCreateInfo',b'\x00\x00\x09\x88VkExportFenceCreateInfo',b'\x00\x00\x09\x88VkExportFenceCreateInfoKHR',b'\x00\x00\x09\x89VkExportMemoryAllocateInfo',b'\x00\x00\x09\x89VkExportMemoryAllocateInfoKHR',b'\x00\x00\x09\x8AVkExportMemoryAllocateInfoNV',b'\x00\x00\x09\x8BVkExportSemaphoreCreateInfo',b'\x00\x00\x09\x8BVkExportSemaphoreCreateInfoKHR',b'\x00\x00\x09\x8CVkExtensionProperties',b'\x00\x00\x09\x8DVkExtent2D',b'\x00\x00\x09\x8EVkExtent3D',b'\x00\x00\x09\x8FVkExternalBufferProperties',b'\x00\x00\x09\x8FVkExternalBufferPropertiesKHR',b'\x00\x00\x09\x90VkExternalFenceFeatureFlagBits',b'\x00\x00\x09\x90VkExternalFenceFeatureFlagBitsKHR',b'\x00\x00\x00\x1FVkExternalFenceFeatureFlags',b'\x00\x00\x00\x1FVkExternalFenceFeatureFlagsKHR',b'\x00\x00\x09\x91VkExternalFenceHandleTypeFlagBits',b'\x00\x00\x09\x91VkExternalFenceHandleTypeFlagBitsKHR',b'\x00\x00\x00\x1FVkExternalFenceHandleTypeFlags',b'\x00\x00\x00\x1FVkExternalFenceHandleTypeFlagsKHR',b'\x00\x00\x09\x92VkExternalFenceProperties',b'\x00\x00\x09\x92VkExternalFencePropertiesKHR',b'\x00\x00\x09\x93VkExternalFormatANDROID',b'\x00\x00\x09\x94VkExternalImageFormatProperties',b'\x00\x00\x09\x94VkExternalImageFormatPropertiesKHR',b'\x00\x00\x09\x95VkExternalImageFormatPropertiesNV',b'\x00\x00\x09\x96VkExternalMemoryBufferCreateInfo',b'\x00\x00\x09\x96VkExternalMemoryBufferCreateInfoKHR',b'\x00\x00\x09\x97VkExternalMemoryFeatureFlagBits',b'\x00\x00\x09\x97VkExternalMemoryFeatureFlagBitsKHR',b'\x00\x00\x09\x98VkExternalMemoryFeatureFlagBitsNV',b'\x00\x00\x00\x1FVkExternalMemoryFeatureFlags',b'\x00\x00\x00\x1FVkExternalMemoryFeatureFlagsKHR',b'\x00\x00\x00\x1FVkExternalMemoryFeatureFlagsNV',b'\x00\x00\x00\x9AVkExternalMemoryHandleTypeFlagBits',b'\x00\x00\x00\x9AVkExternalMemoryHandleTypeFlagBitsKHR',b'\x00\x00\x09\x99VkExternalMemoryHandleTypeFlagBitsNV',b'\x00\x00\x00\x1FVkExternalMemoryHandleTypeFlags',b'\x00\x00\x00\x1FVkExternalMemoryHandleTypeFlagsKHR',b'\x00\x00\x00\x1FVkExternalMemoryHandleTypeFlagsNV',b'\x00\x00\x09\x9AVkExternalMemoryImageCreateInfo',b'\x00\x00\x09\x9AVkExternalMemoryImageCreateInfoKHR',b'\x00\x00\x09\x9BVkExternalMemoryImageCreateInfoNV',b'\x00\x00\x09\x9CVkExternalMemoryProperties',b'\x00\x00\x09\x9CVkExternalMemoryPropertiesKHR',b'\x00\x00\x09\x9DVkExternalSemaphoreFeatureFlagBits',b'\x00\x00\x09\x9DVkExternalSemaphoreFeatureFlagBitsKHR',b'\x00\x00\x00\x1FVkExternalSemaphoreFeatureFlags',b'\x00\x00\x00\x1FVkExternalSemaphoreFeatureFlagsKHR',b'\x00\x00\x09\x9EVkExternalSemaphoreHandleTypeFlagBits',b'\x00\x00\x09\x9EVkExternalSemaphoreHandleTypeFlagBitsKHR',b'\x00\x00\x00\x1FVkExternalSemaphoreHandleTypeFlags',b'\x00\x00\x00\x1FVkExternalSemaphoreHandleTypeFlagsKHR',b'\x00\x00\x09\x9FVkExternalSemaphoreProperties',b'\x00\x00\x09\x9FVkExternalSemaphorePropertiesKHR',b'\x00\x00\x01\xBFVkFence',b'\x00\x00\x09\xA0VkFenceCreateFlagBits',b'\x00\x00\x00\x1FVkFenceCreateFlags',b'\x00\x00\x09\xA1VkFenceCreateInfo',b'\x00\x00\x09\xA2VkFenceGetFdInfoKHR',b'\x00\x00\x09\xA3VkFenceImportFlagBits',b'\x00\x00\x09\xA3VkFenceImportFlagBitsKHR',b'\x00\x00\x00\x1FVkFenceImportFlags',b'\x00\x00\x00\x1FVkFenceImportFlagsKHR',b'\x00\x00\x05\x61VkFilter',b'\x00\x00\x09\xA4VkFilterCubicImageViewImageFormatPropertiesEXT',b'\x00\x00\x00\x1FVkFlags',b'\x00\x00\x00\xEBVkFlags64',b'\x00\x00\x02\xDAVkFormat',b'\x00\x00\x09\xA6VkFormatFeatureFlagBits',b'\x00\x00\x00\xEBVkFormatFeatureFlagBits2',b'\x00\x00\x00\xEBVkFormatFeatureFlagBits2KHR',b'\x00\x00\x00\x1FVkFormatFeatureFlags',b'\x00\x00\x00\xEBVkFormatFeatureFlags2',b'\x00\x00\x00\xEBVkFormatFeatureFlags2KHR',b'\x00\x00\x09\xA9VkFormatProperties',b'\x00\x00\x09\xA7VkFormatProperties2',b'\x00\x00\x09\xA7VkFormatProperties2KHR',b'\x00\x00\x09\xA8VkFormatProperties3',b'\x00\x00\x09\xA8VkFormatProperties3KHR',b'\x00\x00\x09\xAAVkFragmentShadingRateAttachmentInfoKHR',b'\x00\x00\x09\xABVkFragmentShadingRateCombinerOpKHR',b'\x00\x00\x04\x52VkFragmentShadingRateNV',b'\x00\x00\x09\xAEVkFragmentShadingRateTypeNV',b'\x00\x00\x07\x50VkFramebuffer',b'\x00\x00\x09\xB0VkFramebufferAttachmentImageInfo',b'\x00\x00\x09\xB0VkFramebufferAttachmentImageInfoKHR',b'\x00\x00\x09\xB1VkFramebufferAttachmentsCreateInfo',b'\x00\x00\x09\xB1VkFramebufferAttachmentsCreateInfoKHR',b'\x00\x00\x09\xB2VkFramebufferCreateFlagBits',b'\x00\x00\x00\x1FVkFramebufferCreateFlags',b'\x00\x00\x09\xB3VkFramebufferCreateInfo',b'\x00\x00\x09\xB4VkFramebufferMixedSamplesCombinationNV',b'\x00\x00\x04\x57VkFrontFace',b'\x00\x00\x09\xB5VkGeneratedCommandsInfoNV',b'\x00\x00\x09\xB6VkGeneratedCommandsMemoryRequirementsInfoNV',b'\x00\x00\x09\xB7VkGeometryAABBNV',b'\x00\x00\x09\xB8VkGeometryDataNV',b'\x00\x00\x09\xB9VkGeometryFlagBitsKHR',b'\x00\x00\x09\xB9VkGeometryFlagBitsNV',b'\x00\x00\x00\x1FVkGeometryFlagsKHR',b'\x00\x00\x00\x1FVkGeometryFlagsNV',b'\x00\x00\x09\xBAVkGeometryInstanceFlagBitsKHR',b'\x00\x00\x09\xBAVkGeometryInstanceFlagBitsNV',b'\x00\x00\x00\x1FVkGeometryInstanceFlagsKHR',b'\x00\x00\x00\x1FVkGeometryInstanceFlagsNV',b'\x00\x00\x09\xBCVkGeometryNV',b'\x00\x00\x09\xBDVkGeometryTrianglesNV',b'\x00\x00\x09\xBEVkGeometryTypeKHR',b'\x00\x00\x09\xBEVkGeometryTypeNV',b'\x00\x00\x09\xBFVkGraphicsPipelineCreateInfo',b'\x00\x00\x09\xC0VkGraphicsPipelineLibraryCreateInfoEXT',b'\x00\x00\x09\xC1VkGraphicsPipelineLibraryFlagBitsEXT',b'\x00\x00\x00\x1FVkGraphicsPipelineLibraryFlagsEXT',b'\x00\x00\x09\xC2VkGraphicsPipelineShaderGroupsCreateInfoNV',b'\x00\x00\x09\xC4VkGraphicsShaderGroupCreateInfoNV',b'\x00\x00\x09\xC5VkHdrMetadataEXT',b'\x00\x00\x00\x1FVkHeadlessSurfaceCreateFlagsEXT',b'\x00\x00\x09\xC6VkHeadlessSurfaceCreateInfoEXT',b'\x00\x00\x01\xC8VkImage',b'\x00\x00\x09\xC7VkImageAspectFlagBits',b'\x00\x00\x00\x1FVkImageAspectFlags',b'\x00\x00\x09\xCAVkImageBlit',b'\x00\x00\x09\xC9VkImageBlit2',b'\x00\x00\x09\xC9VkImageBlit2KHR',b'\x00\x00\x09\xCDVkImageCopy',b'\x00\x00\x09\xCCVkImageCopy2',b'\x00\x00\x09\xCCVkImageCopy2KHR',b'\x00\x00\x09\xCEVkImageCreateFlagBits',b'\x00\x00\x00\x1FVkImageCreateFlags',b'\x00\x00\x09\xCFVkImageCreateInfo',b'\x00\x00\x09\xD0VkImageDrmFormatModifierExplicitCreateInfoEXT',b'\x00\x00\x09\xD1VkImageDrmFormatModifierListCreateInfoEXT',b'\x00\x00\x09\xD2VkImageDrmFormatModifierPropertiesEXT',b'\x00\x00\x09\xD3VkImageFormatListCreateInfo',b'\x00\x00\x09\xD3VkImageFormatListCreateInfoKHR',b'\x00\x00\x09\xD5VkImageFormatProperties',b'\x00\x00\x09\xD4VkImageFormatProperties2',b'\x00\x00\x09\xD4VkImageFormatProperties2KHR',b'\x00\x00\x04\xE8VkImageLayout',b'\x00\x00\x09\xD8VkImageMemoryBarrier',b'\x00\x00\x09\xD7VkImageMemoryBarrier2',b'\x00\x00\x09\xD7VkImageMemoryBarrier2KHR',b'\x00\x00\x09\xD9VkImageMemoryRequirementsInfo2',b'\x00\x00\x09\xD9VkImageMemoryRequirementsInfo2KHR',b'\x00\x00\x09\xDAVkImagePlaneMemoryRequirementsInfo',b'\x00\x00\x09\xDAVkImagePlaneMemoryRequirementsInfoKHR',b'\x00\x00\x09\xDDVkImageResolve',b'\x00\x00\x09\xDCVkImageResolve2',b'\x00\x00\x09\xDCVkImageResolve2KHR',b'\x00\x00\x09\xDEVkImageSparseMemoryRequirementsInfo2',b'\x00\x00\x09\xDEVkImageSparseMemoryRequirementsInfo2KHR',b'\x00\x00\x09\xDFVkImageStencilUsageCreateInfo',b'\x00\x00\x09\xDFVkImageStencilUsageCreateInfoEXT',b'\x00\x00\x09\xE0VkImageSubresource',b'\x00\x00\x09\xE1VkImageSubresourceLayers',b'\x00\x00\x09\xE2VkImageSubresourceRange',b'\x00\x00\x09\xE3VkImageSwapchainCreateInfoKHR',b'\x00\x00\x02\xDCVkImageTiling',b'\x00\x00\x02\xDBVkImageType',b'\x00\x00\x09\xE4VkImageUsageFlagBits',b'\x00\x00\x00\x1FVkImageUsageFlags',b'\x00\x00\x01\xC3VkImageView',b'\x00\x00\x09\xE5VkImageViewASTCDecodeModeEXT',b'\x00\x00\x09\xE6VkImageViewAddressPropertiesNVX',b'\x00\x00\x09\xE7VkImageViewCreateFlagBits',b'\x00\x00\x00\x1FVkImageViewCreateFlags',b'\x00\x00\x09\xE8VkImageViewCreateInfo',b'\x00\x00\x09\xE9VkImageViewHandleInfoNVX',b'\x00\x00\x09\xEAVkImageViewMinLodCreateInfoEXT',b'\x00\x00\x09\xEBVkImageViewType',b'\x00\x00\x09\xECVkImageViewUsageCreateInfo',b'\x00\x00\x09\xECVkImageViewUsageCreateInfoKHR',b'\x00\x00\x09\xEDVkImportAndroidHardwareBufferInfoANDROID',b'\x00\x00\x09\xEEVkImportFenceFdInfoKHR',b'\x00\x00\x09\xEFVkImportMemoryFdInfoKHR',b'\x00\x00\x09\xF0VkImportMemoryHostPointerInfoEXT',b'\x00\x00\x09\xF1VkImportSemaphoreFdInfoKHR',b'\x00\x00\x04\xF5VkIndexType',b'\x00\x00\x09\xF3VkIndirectCommandsLayoutCreateInfoNV',b'\x00\x00\x07\x70VkIndirectCommandsLayoutNV',b'\x00\x00\x09\xF5VkIndirectCommandsLayoutTokenNV',b'\x00\x00\x09\xF6VkIndirectCommandsLayoutUsageFlagBitsNV',b'\x00\x00\x00\x1FVkIndirectCommandsLayoutUsageFlagsNV',b'\x00\x00\x09\xF8VkIndirectCommandsStreamNV',b'\x00\x00\x09\xF9VkIndirectCommandsTokenTypeNV',b'\x00\x00\x09\xFAVkIndirectStateFlagBitsNV',b'\x00\x00\x00\x1FVkIndirectStateFlagsNV',b'\x00\x00\x09\xFBVkInitializePerformanceApiInfoINTEL',b'\x00\x00\x09\xFDVkInputAttachmentAspectReference',b'\x00\x00\x09\xFDVkInputAttachmentAspectReferenceKHR',b'\x00\x00\x02\x94VkInstance',b'\x00\x00\x09\xFEVkInstanceCreateFlagBits',b'\x00\x00\x00\x1FVkInstanceCreateFlags',b'\x00\x00\x09\xFFVkInstanceCreateInfo',b'\x00\x00\x08\x65VkInternalAllocationType',b'\x00\x00\x0A\x00VkLayerProperties',b'\x00\x00\x0A\x01VkLineRasterizationModeEXT',b'\x00\x00\x04\x5FVkLogicOp',b'\x00\x00\x0A\x02VkMappedMemoryRange',b'\x00\x00\x0A\x03VkMemoryAllocateFlagBits',b'\x00\x00\x0A\x03VkMemoryAllocateFlagBitsKHR',b'\x00\x00\x00\x1FVkMemoryAllocateFlags',b'\x00\x00\x0A\x04VkMemoryAllocateFlagsInfo',b'\x00\x00\x0A\x04VkMemoryAllocateFlagsInfoKHR',b'\x00\x00\x00\x1FVkMemoryAllocateFlagsKHR',b'\x00\x00\x0A\x05VkMemoryAllocateInfo',b'\x00\x00\x0A\x08VkMemoryBarrier',b'\x00\x00\x0A\x07VkMemoryBarrier2',b'\x00\x00\x0A\x07VkMemoryBarrier2KHR',b'\x00\x00\x0A\x09VkMemoryDedicatedAllocateInfo',b'\x00\x00\x0A\x09VkMemoryDedicatedAllocateInfoKHR',b'\x00\x00\x0A\x0AVkMemoryDedicatedRequirements',b'\x00\x00\x0A\x0AVkMemoryDedicatedRequirementsKHR',b'\x00\x00\x0A\x0BVkMemoryFdPropertiesKHR',b'\x00\x00\x0A\x0CVkMemoryGetAndroidHardwareBufferInfoANDROID',b'\x00\x00\x0A\x0DVkMemoryGetFdInfoKHR',b'\x00\x00\x0A\x0EVkMemoryGetRemoteAddressInfoNV',b'\x00\x00\x0A\x0FVkMemoryHeap',b'\x00\x00\x0A\x10VkMemoryHeapFlagBits',b'\x00\x00\x00\x1FVkMemoryHeapFlags',b'\x00\x00\x0A\x13VkMemoryHostPointerPropertiesEXT',b'\x00\x00\x00\x1FVkMemoryMapFlags',b'\x00\x00\x0A\x14VkMemoryOpaqueCaptureAddressAllocateInfo',b'\x00\x00\x0A\x14VkMemoryOpaqueCaptureAddressAllocateInfoKHR',b'\x00\x00\x0A\x15VkMemoryOverallocationBehaviorAMD',b'\x00\x00\x0A\x16VkMemoryPriorityAllocateInfoEXT',b'\x00\x00\x0A\x17VkMemoryPropertyFlagBits',b'\x00\x00\x00\x1FVkMemoryPropertyFlags',b'\x00\x00\x0A\x19VkMemoryRequirements',b'\x00\x00\x0A\x18VkMemoryRequirements2',b'\x00\x00\x0A\x18VkMemoryRequirements2KHR',b'\x00\x00\x0A\x1AVkMemoryType',b'\x00\x00\x0A\x1DVkMultiDrawIndexedInfoEXT',b'\x00\x00\x0A\x1EVkMultiDrawInfoEXT',b'\x00\x00\x0A\x1FVkMultisamplePropertiesEXT',b'\x00\x00\x0A\x20VkMultiviewPerViewAttributesInfoNVX',b'\x00\x00\x0A\x21VkMutableDescriptorTypeCreateInfoVALVE',b'\x00\x00\x0A\x23VkMutableDescriptorTypeListVALVE',b'\x00\x00\x00\xEAVkObjectType',b'\x00\x00\x0A\x25VkOffset2D',b'\x00\x00\x0A\x26VkOffset3D',b'\x00\x00\x0A\x29VkPastPresentationTimingGOOGLE',b'\x00\x00\x0A\x2AVkPeerMemoryFeatureFlagBits',b'\x00\x00\x0A\x2AVkPeerMemoryFeatureFlagBitsKHR',b'\x00\x00\x00\x1FVkPeerMemoryFeatureFlags',b'\x00\x00\x00\x1FVkPeerMemoryFeatureFlagsKHR',b'\x00\x00\x0A\x2BVkPerformanceConfigurationAcquireInfoINTEL',b'\x00\x00\x01\xD3VkPerformanceConfigurationINTEL',b'\x00\x00\x0A\x2CVkPerformanceConfigurationTypeINTEL',b'\x00\x00\x0A\x2DVkPerformanceCounterDescriptionFlagBitsKHR',b'\x00\x00\x00\x1FVkPerformanceCounterDescriptionFlagsKHR',b'\x00\x00\x0A\x2EVkPerformanceCounterDescriptionKHR',b'\x00\x00\x0A\x2FVkPerformanceCounterKHR',b'\x00\x00\x0A\x30VkPerformanceCounterResultKHR',b'\x00\x00\x0A\x31VkPerformanceCounterScopeKHR',b'\x00\x00\x0A\x32VkPerformanceCounterStorageKHR',b'\x00\x00\x0A\x33VkPerformanceCounterUnitKHR',b'\x00\x00\x0A\x34VkPerformanceMarkerInfoINTEL',b'\x00\x00\x0A\x35VkPerformanceOverrideInfoINTEL',b'\x00\x00\x0A\x36VkPerformanceOverrideTypeINTEL',b'\x00\x00\x00\xF6VkPerformanceParameterTypeINTEL',b'\x00\x00\x0A\x37VkPerformanceQuerySubmitInfoKHR',b'\x00\x00\x0A\x38VkPerformanceStreamMarkerInfoINTEL',b'\x00\x00\x0A\x39VkPerformanceValueDataINTEL',b'\x00\x00\x0A\x3AVkPerformanceValueINTEL',b'\x00\x00\x0A\x3BVkPerformanceValueTypeINTEL',b'\x00\x00\x02\xCEVkPhysicalDevice',b'\x00\x00\x0A\x3CVkPhysicalDevice16BitStorageFeatures',b'\x00\x00\x0A\x3CVkPhysicalDevice16BitStorageFeaturesKHR',b'\x00\x00\x0A\x3DVkPhysicalDevice4444FormatsFeaturesEXT',b'\x00\x00\x0A\x3EVkPhysicalDevice8BitStorageFeatures',b'\x00\x00\x0A\x3EVkPhysicalDevice8BitStorageFeaturesKHR',b'\x00\x00\x0A\x3FVkPhysicalDeviceASTCDecodeFeaturesEXT',b'\x00\x00\x0A\x40VkPhysicalDeviceAccelerationStructureFeaturesKHR',b'\x00\x00\x0A\x41VkPhysicalDeviceAccelerationStructurePropertiesKHR',b'\x00\x00\x0A\x42VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT',b'\x00\x00\x0A\x43VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT',b'\x00\x00\x0A\x44VkPhysicalDeviceBorderColorSwizzleFeaturesEXT',b'\x00\x00\x0A\x46VkPhysicalDeviceBufferAddressFeaturesEXT',b'\x00\x00\x0A\x45VkPhysicalDeviceBufferDeviceAddressFeatures',b'\x00\x00\x0A\x46VkPhysicalDeviceBufferDeviceAddressFeaturesEXT',b'\x00\x00\x0A\x45VkPhysicalDeviceBufferDeviceAddressFeaturesKHR',b'\x00\x00\x0A\x47VkPhysicalDeviceCoherentMemoryFeaturesAMD',b'\x00\x00\x0A\x48VkPhysicalDeviceColorWriteEnableFeaturesEXT',b'\x00\x00\x0A\x49VkPhysicalDeviceComputeShaderDerivativesFeaturesNV',b'\x00\x00\x0A\x4AVkPhysicalDeviceConditionalRenderingFeaturesEXT',b'\x00\x00\x0A\x4BVkPhysicalDeviceConservativeRasterizationPropertiesEXT',b'\x00\x00\x0A\x4CVkPhysicalDeviceCooperativeMatrixFeaturesNV',b'\x00\x00\x0A\x4DVkPhysicalDeviceCooperativeMatrixPropertiesNV',b'\x00\x00\x0A\x4EVkPhysicalDeviceCornerSampledImageFeaturesNV',b'\x00\x00\x0A\x4FVkPhysicalDeviceCoverageReductionModeFeaturesNV',b'\x00\x00\x0A\x50VkPhysicalDeviceCustomBorderColorFeaturesEXT',b'\x00\x00\x0A\x51VkPhysicalDeviceCustomBorderColorPropertiesEXT',b'\x00\x00\x0A\x52VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV',b'\x00\x00\x0A\x53VkPhysicalDeviceDepthClipControlFeaturesEXT',b'\x00\x00\x0A\x54VkPhysicalDeviceDepthClipEnableFeaturesEXT',b'\x00\x00\x0A\x55VkPhysicalDeviceDepthStencilResolveProperties',b'\x00\x00\x0A\x55VkPhysicalDeviceDepthStencilResolvePropertiesKHR',b'\x00\x00\x0A\x56VkPhysicalDeviceDescriptorIndexingFeatures',b'\x00\x00\x0A\x56VkPhysicalDeviceDescriptorIndexingFeaturesEXT',b'\x00\x00\x0A\x57VkPhysicalDeviceDescriptorIndexingProperties',b'\x00\x00\x0A\x57VkPhysicalDeviceDescriptorIndexingPropertiesEXT',b'\x00\x00\x0A\x58VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE',b'\x00\x00\x0A\x59VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV',b'\x00\x00\x0A\x5AVkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV',b'\x00\x00\x0A\x5BVkPhysicalDeviceDeviceMemoryReportFeaturesEXT',b'\x00\x00\x0A\x5CVkPhysicalDeviceDiagnosticsConfigFeaturesNV',b'\x00\x00\x0A\x5DVkPhysicalDeviceDiscardRectanglePropertiesEXT',b'\x00\x00\x0A\x5EVkPhysicalDeviceDriverProperties',b'\x00\x00\x0A\x5EVkPhysicalDeviceDriverPropertiesKHR',b'\x00\x00\x0A\x5FVkPhysicalDeviceDrmPropertiesEXT',b'\x00\x00\x0A\x60VkPhysicalDeviceDynamicRenderingFeatures',b'\x00\x00\x0A\x60VkPhysicalDeviceDynamicRenderingFeaturesKHR',b'\x00\x00\x0A\x61VkPhysicalDeviceExclusiveScissorFeaturesNV',b'\x00\x00\x0A\x62VkPhysicalDeviceExtendedDynamicState2FeaturesEXT',b'\x00\x00\x0A\x63VkPhysicalDeviceExtendedDynamicStateFeaturesEXT',b'\x00\x00\x0A\x64VkPhysicalDeviceExternalBufferInfo',b'\x00\x00\x0A\x64VkPhysicalDeviceExternalBufferInfoKHR',b'\x00\x00\x0A\x65VkPhysicalDeviceExternalFenceInfo',b'\x00\x00\x0A\x65VkPhysicalDeviceExternalFenceInfoKHR',b'\x00\x00\x0A\x66VkPhysicalDeviceExternalImageFormatInfo',b'\x00\x00\x0A\x66VkPhysicalDeviceExternalImageFormatInfoKHR',b'\x00\x00\x0A\x67VkPhysicalDeviceExternalMemoryHostPropertiesEXT',b'\x00\x00\x0A\x68VkPhysicalDeviceExternalMemoryRDMAFeaturesNV',b'\x00\x00\x0A\x69VkPhysicalDeviceExternalSemaphoreInfo',b'\x00\x00\x0A\x69VkPhysicalDeviceExternalSemaphoreInfoKHR',b'\x00\x00\x0A\x6CVkPhysicalDeviceFeatures',b'\x00\x00\x0A\x6BVkPhysicalDeviceFeatures2',b'\x00\x00\x0A\x6BVkPhysicalDeviceFeatures2KHR',b'\x00\x00\x0A\xCAVkPhysicalDeviceFloat16Int8FeaturesKHR',b'\x00\x00\x0A\x6DVkPhysicalDeviceFloatControlsProperties',b'\x00\x00\x0A\x6DVkPhysicalDeviceFloatControlsPropertiesKHR',b'\x00\x00\x0A\x6EVkPhysicalDeviceFragmentDensityMap2FeaturesEXT',b'\x00\x00\x0A\x6FVkPhysicalDeviceFragmentDensityMap2PropertiesEXT',b'\x00\x00\x0A\x70VkPhysicalDeviceFragmentDensityMapFeaturesEXT',b'\x00\x00\x0A\x71VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM',b'\x00\x00\x0A\x72VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM',b'\x00\x00\x0A\x73VkPhysicalDeviceFragmentDensityMapPropertiesEXT',b'\x00\x00\x0A\x74VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV',b'\x00\x00\x0A\x75VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT',b'\x00\x00\x0A\x76VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV',b'\x00\x00\x0A\x77VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV',b'\x00\x00\x0A\x78VkPhysicalDeviceFragmentShadingRateFeaturesKHR',b'\x00\x00\x0A\x79VkPhysicalDeviceFragmentShadingRateKHR',b'\x00\x00\x0A\x7AVkPhysicalDeviceFragmentShadingRatePropertiesKHR',b'\x00\x00\x0A\x7BVkPhysicalDeviceGlobalPriorityQueryFeaturesEXT',b'\x00\x00\x0A\x7BVkPhysicalDeviceGlobalPriorityQueryFeaturesKHR',b'\x00\x00\x0A\x7CVkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT',b'\x00\x00\x0A\x7DVkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT',b'\x00\x00\x0A\x7EVkPhysicalDeviceGroupProperties',b'\x00\x00\x0A\x7EVkPhysicalDeviceGroupPropertiesKHR',b'\x00\x00\x0A\x7FVkPhysicalDeviceHostQueryResetFeatures',b'\x00\x00\x0A\x7FVkPhysicalDeviceHostQueryResetFeaturesEXT',b'\x00\x00\x0A\x80VkPhysicalDeviceIDProperties',b'\x00\x00\x0A\x80VkPhysicalDeviceIDPropertiesKHR',b'\x00\x00\x0A\x81VkPhysicalDeviceImage2DViewOf3DFeaturesEXT',b'\x00\x00\x0A\x82VkPhysicalDeviceImageDrmFormatModifierInfoEXT',b'\x00\x00\x0A\x83VkPhysicalDeviceImageFormatInfo2',b'\x00\x00\x0A\x83VkPhysicalDeviceImageFormatInfo2KHR',b'\x00\x00\x0A\x84VkPhysicalDeviceImageRobustnessFeatures',b'\x00\x00\x0A\x84VkPhysicalDeviceImageRobustnessFeaturesEXT',b'\x00\x00\x0A\x85VkPhysicalDeviceImageViewImageFormatInfoEXT',b'\x00\x00\x0A\x86VkPhysicalDeviceImageViewMinLodFeaturesEXT',b'\x00\x00\x0A\x87VkPhysicalDeviceImagelessFramebufferFeatures',b'\x00\x00\x0A\x87VkPhysicalDeviceImagelessFramebufferFeaturesKHR',b'\x00\x00\x0A\x88VkPhysicalDeviceIndexTypeUint8FeaturesEXT',b'\x00\x00\x0A\x89VkPhysicalDeviceInheritedViewportScissorFeaturesNV',b'\x00\x00\x0A\x8AVkPhysicalDeviceInlineUniformBlockFeatures',b'\x00\x00\x0A\x8AVkPhysicalDeviceInlineUniformBlockFeaturesEXT',b'\x00\x00\x0A\x8BVkPhysicalDeviceInlineUniformBlockProperties',b'\x00\x00\x0A\x8BVkPhysicalDeviceInlineUniformBlockPropertiesEXT',b'\x00\x00\x0A\x8CVkPhysicalDeviceInvocationMaskFeaturesHUAWEI',b'\x00\x00\x0A\x8DVkPhysicalDeviceLimits',b'\x00\x00\x0A\x8EVkPhysicalDeviceLineRasterizationFeaturesEXT',b'\x00\x00\x0A\x8FVkPhysicalDeviceLineRasterizationPropertiesEXT',b'\x00\x00\x0A\x90VkPhysicalDeviceLinearColorAttachmentFeaturesNV',b'\x00\x00\x0A\x91VkPhysicalDeviceMaintenance3Properties',b'\x00\x00\x0A\x91VkPhysicalDeviceMaintenance3PropertiesKHR',b'\x00\x00\x0A\x92VkPhysicalDeviceMaintenance4Features',b'\x00\x00\x0A\x92VkPhysicalDeviceMaintenance4FeaturesKHR',b'\x00\x00\x0A\x93VkPhysicalDeviceMaintenance4Properties',b'\x00\x00\x0A\x93VkPhysicalDeviceMaintenance4PropertiesKHR',b'\x00\x00\x0A\x94VkPhysicalDeviceMemoryBudgetPropertiesEXT',b'\x00\x00\x0A\x95VkPhysicalDeviceMemoryPriorityFeaturesEXT',b'\x00\x00\x0A\x97VkPhysicalDeviceMemoryProperties',b'\x00\x00\x0A\x96VkPhysicalDeviceMemoryProperties2',b'\x00\x00\x0A\x96VkPhysicalDeviceMemoryProperties2KHR',b'\x00\x00\x0A\x98VkPhysicalDeviceMeshShaderFeaturesNV',b'\x00\x00\x0A\x99VkPhysicalDeviceMeshShaderPropertiesNV',b'\x00\x00\x0A\x9AVkPhysicalDeviceMultiDrawFeaturesEXT',b'\x00\x00\x0A\x9BVkPhysicalDeviceMultiDrawPropertiesEXT',b'\x00\x00\x0A\x9CVkPhysicalDeviceMultiviewFeatures',b'\x00\x00\x0A\x9CVkPhysicalDeviceMultiviewFeaturesKHR',b'\x00\x00\x0A\x9DVkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX',b'\x00\x00\x0A\x9EVkPhysicalDeviceMultiviewProperties',b'\x00\x00\x0A\x9EVkPhysicalDeviceMultiviewPropertiesKHR',b'\x00\x00\x0A\x9FVkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE',b'\x00\x00\x0A\xA0VkPhysicalDevicePCIBusInfoPropertiesEXT',b'\x00\x00\x0A\xA1VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT',b'\x00\x00\x0A\xA2VkPhysicalDevicePerformanceQueryFeaturesKHR',b'\x00\x00\x0A\xA3VkPhysicalDevicePerformanceQueryPropertiesKHR',b'\x00\x00\x0A\xA4VkPhysicalDevicePipelineCreationCacheControlFeatures',b'\x00\x00\x0A\xA4VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT',b'\x00\x00\x0A\xA5VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR',b'\x00\x00\x0A\xA6VkPhysicalDevicePointClippingProperties',b'\x00\x00\x0A\xA6VkPhysicalDevicePointClippingPropertiesKHR',b'\x00\x00\x0A\xA7VkPhysicalDevicePresentIdFeaturesKHR',b'\x00\x00\x0A\xA8VkPhysicalDevicePresentWaitFeaturesKHR',b'\x00\x00\x0A\xA9VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT',b'\x00\x00\x0A\xAAVkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT',b'\x00\x00\x0A\xABVkPhysicalDevicePrivateDataFeatures',b'\x00\x00\x0A\xABVkPhysicalDevicePrivateDataFeaturesEXT',b'\x00\x00\x0A\xADVkPhysicalDeviceProperties',b'\x00\x00\x0A\xACVkPhysicalDeviceProperties2',b'\x00\x00\x0A\xACVkPhysicalDeviceProperties2KHR',b'\x00\x00\x0A\xAEVkPhysicalDeviceProtectedMemoryFeatures',b'\x00\x00\x0A\xAFVkPhysicalDeviceProtectedMemoryProperties',b'\x00\x00\x0A\xB0VkPhysicalDeviceProvokingVertexFeaturesEXT',b'\x00\x00\x0A\xB1VkPhysicalDeviceProvokingVertexPropertiesEXT',b'\x00\x00\x0A\xB2VkPhysicalDevicePushDescriptorPropertiesKHR',b'\x00\x00\x0A\xB3VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT',b'\x00\x00\x0A\xB4VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM',b'\x00\x00\x0A\xB5VkPhysicalDeviceRayQueryFeaturesKHR',b'\x00\x00\x0A\xB6VkPhysicalDeviceRayTracingMotionBlurFeaturesNV',b'\x00\x00\x0A\xB7VkPhysicalDeviceRayTracingPipelineFeaturesKHR',b'\x00\x00\x0A\xB8VkPhysicalDeviceRayTracingPipelinePropertiesKHR',b'\x00\x00\x0A\xB9VkPhysicalDeviceRayTracingPropertiesNV',b'\x00\x00\x0A\xBAVkPhysicalDeviceRepresentativeFragmentTestFeaturesNV',b'\x00\x00\x0A\xBBVkPhysicalDeviceRobustness2FeaturesEXT',b'\x00\x00\x0A\xBCVkPhysicalDeviceRobustness2PropertiesEXT',b'\x00\x00\x0A\xBDVkPhysicalDeviceSampleLocationsPropertiesEXT',b'\x00\x00\x0A\xBEVkPhysicalDeviceSamplerFilterMinmaxProperties',b'\x00\x00\x0A\xBEVkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT',b'\x00\x00\x0A\xBFVkPhysicalDeviceSamplerYcbcrConversionFeatures',b'\x00\x00\x0A\xBFVkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR',b'\x00\x00\x0A\xC0VkPhysicalDeviceScalarBlockLayoutFeatures',b'\x00\x00\x0A\xC0VkPhysicalDeviceScalarBlockLayoutFeaturesEXT',b'\x00\x00\x0A\xC1VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures',b'\x00\x00\x0A\xC1VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR',b'\x00\x00\x0A\xC2VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT',b'\x00\x00\x0A\xC3VkPhysicalDeviceShaderAtomicFloatFeaturesEXT',b'\x00\x00\x0A\xC4VkPhysicalDeviceShaderAtomicInt64Features',b'\x00\x00\x0A\xC4VkPhysicalDeviceShaderAtomicInt64FeaturesKHR',b'\x00\x00\x0A\xC5VkPhysicalDeviceShaderClockFeaturesKHR',b'\x00\x00\x0A\xC6VkPhysicalDeviceShaderCoreProperties2AMD',b'\x00\x00\x0A\xC7VkPhysicalDeviceShaderCorePropertiesAMD',b'\x00\x00\x0A\xC8VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures',b'\x00\x00\x0A\xC8VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT',b'\x00\x00\x0A\xC9VkPhysicalDeviceShaderDrawParameterFeatures',b'\x00\x00\x0A\xC9VkPhysicalDeviceShaderDrawParametersFeatures',b'\x00\x00\x0A\xCAVkPhysicalDeviceShaderFloat16Int8Features',b'\x00\x00\x0A\xCAVkPhysicalDeviceShaderFloat16Int8FeaturesKHR',b'\x00\x00\x0A\xCBVkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT',b'\x00\x00\x0A\xCCVkPhysicalDeviceShaderImageFootprintFeaturesNV',b'\x00\x00\x0A\xCDVkPhysicalDeviceShaderIntegerDotProductFeatures',b'\x00\x00\x0A\xCDVkPhysicalDeviceShaderIntegerDotProductFeaturesKHR',b'\x00\x00\x0A\xCEVkPhysicalDeviceShaderIntegerDotProductProperties',b'\x00\x00\x0A\xCEVkPhysicalDeviceShaderIntegerDotProductPropertiesKHR',b'\x00\x00\x0A\xCFVkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL',b'\x00\x00\x0A\xD0VkPhysicalDeviceShaderSMBuiltinsFeaturesNV',b'\x00\x00\x0A\xD1VkPhysicalDeviceShaderSMBuiltinsPropertiesNV',b'\x00\x00\x0A\xD2VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures',b'\x00\x00\x0A\xD2VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR',b'\x00\x00\x0A\xD3VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR',b'\x00\x00\x0A\xD4VkPhysicalDeviceShaderTerminateInvocationFeatures',b'\x00\x00\x0A\xD4VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR',b'\x00\x00\x0A\xD5VkPhysicalDeviceShadingRateImageFeaturesNV',b'\x00\x00\x0A\xD6VkPhysicalDeviceShadingRateImagePropertiesNV',b'\x00\x00\x0A\xD7VkPhysicalDeviceSparseImageFormatInfo2',b'\x00\x00\x0A\xD7VkPhysicalDeviceSparseImageFormatInfo2KHR',b'\x00\x00\x0A\xD8VkPhysicalDeviceSparseProperties',b'\x00\x00\x0A\xD9VkPhysicalDeviceSubgroupProperties',b'\x00\x00\x0A\xDAVkPhysicalDeviceSubgroupSizeControlFeatures',b'\x00\x00\x0A\xDAVkPhysicalDeviceSubgroupSizeControlFeaturesEXT',b'\x00\x00\x0A\xDBVkPhysicalDeviceSubgroupSizeControlProperties',b'\x00\x00\x0A\xDBVkPhysicalDeviceSubgroupSizeControlPropertiesEXT',b'\x00\x00\x0A\xDCVkPhysicalDeviceSubpassShadingFeaturesHUAWEI',b'\x00\x00\x0A\xDDVkPhysicalDeviceSubpassShadingPropertiesHUAWEI',b'\x00\x00\x0A\xDEVkPhysicalDeviceSurfaceInfo2KHR',b'\x00\x00\x0A\xDFVkPhysicalDeviceSynchronization2Features',b'\x00\x00\x0A\xDFVkPhysicalDeviceSynchronization2FeaturesKHR',b'\x00\x00\x0A\xE0VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT',b'\x00\x00\x0A\xE1VkPhysicalDeviceTexelBufferAlignmentProperties',b'\x00\x00\x0A\xE1VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT',b'\x00\x00\x0A\xE2VkPhysicalDeviceTextureCompressionASTCHDRFeatures',b'\x00\x00\x0A\xE2VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT',b'\x00\x00\x0A\xE3VkPhysicalDeviceTimelineSemaphoreFeatures',b'\x00\x00\x0A\xE3VkPhysicalDeviceTimelineSemaphoreFeaturesKHR',b'\x00\x00\x0A\xE4VkPhysicalDeviceTimelineSemaphoreProperties',b'\x00\x00\x0A\xE4VkPhysicalDeviceTimelineSemaphorePropertiesKHR',b'\x00\x00\x0A\xE5VkPhysicalDeviceToolProperties',b'\x00\x00\x0A\xE5VkPhysicalDeviceToolPropertiesEXT',b'\x00\x00\x0A\xE6VkPhysicalDeviceTransformFeedbackFeaturesEXT',b'\x00\x00\x0A\xE7VkPhysicalDeviceTransformFeedbackPropertiesEXT',b'\x00\x00\x0A\xE8VkPhysicalDeviceType',b'\x00\x00\x0A\xE9VkPhysicalDeviceUniformBufferStandardLayoutFeatures',b'\x00\x00\x0A\xE9VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR',b'\x00\x00\x0A\xEAVkPhysicalDeviceVariablePointerFeatures',b'\x00\x00\x0A\xEAVkPhysicalDeviceVariablePointerFeaturesKHR',b'\x00\x00\x0A\xEAVkPhysicalDeviceVariablePointersFeatures',b'\x00\x00\x0A\xEAVkPhysicalDeviceVariablePointersFeaturesKHR',b'\x00\x00\x0A\xEBVkPhysicalDeviceVertexAttributeDivisorFeaturesEXT',b'\x00\x00\x0A\xECVkPhysicalDeviceVertexAttributeDivisorPropertiesEXT',b'\x00\x00\x0A\xEDVkPhysicalDeviceVertexInputDynamicStateFeaturesEXT',b'\x00\x00\x0A\xEEVkPhysicalDeviceVulkan11Features',b'\x00\x00\x0A\xEFVkPhysicalDeviceVulkan11Properties',b'\x00\x00\x0A\xF0VkPhysicalDeviceVulkan12Features',b'\x00\x00\x0A\xF1VkPhysicalDeviceVulkan12Properties',b'\x00\x00\x0A\xF2VkPhysicalDeviceVulkan13Features',b'\x00\x00\x0A\xF3VkPhysicalDeviceVulkan13Properties',b'\x00\x00\x0A\xF4VkPhysicalDeviceVulkanMemoryModelFeatures',b'\x00\x00\x0A\xF4VkPhysicalDeviceVulkanMemoryModelFeaturesKHR',b'\x00\x00\x0A\xF5VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR',b'\x00\x00\x0A\xF6VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT',b'\x00\x00\x0A\xF7VkPhysicalDeviceYcbcrImageArraysFeaturesEXT',b'\x00\x00\x0A\xF8VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures',b'\x00\x00\x0A\xF8VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR',b'\x00\x00\x01\xFBVkPipeline',b'\x00\x00\x04\x63VkPipelineBindPoint',b'\x00\x00\x01\x8DVkPipelineCache',b'\x00\x00\x0A\xF9VkPipelineCacheCreateFlagBits',b'\x00\x00\x00\x1FVkPipelineCacheCreateFlags',b'\x00\x00\x0A\xFAVkPipelineCacheCreateInfo',b'\x00\x00\x0A\xFBVkPipelineCacheHeaderVersion',b'\x00\x00\x0A\xFCVkPipelineCacheHeaderVersionOne',b'\x00\x00\x0A\xFDVkPipelineColorBlendAdvancedStateCreateInfoEXT',b'\x00\x00\x0A\xFFVkPipelineColorBlendAttachmentState',b'\x00\x00\x0B\x00VkPipelineColorBlendStateCreateFlagBits',b'\x00\x00\x00\x1FVkPipelineColorBlendStateCreateFlags',b'\x00\x00\x0B\x02VkPipelineColorBlendStateCreateInfo',b'\x00\x00\x0B\x03VkPipelineColorWriteCreateInfoEXT',b'\x00\x00\x0B\x04VkPipelineCompilerControlCreateInfoAMD',b'\x00\x00\x0B\x05VkPipelineCompilerControlFlagBitsAMD',b'\x00\x00\x00\x1FVkPipelineCompilerControlFlagsAMD',b'\x00\x00\x00\x1FVkPipelineCoverageModulationStateCreateFlagsNV',b'\x00\x00\x0B\x06VkPipelineCoverageModulationStateCreateInfoNV',b'\x00\x00\x00\x1FVkPipelineCoverageReductionStateCreateFlagsNV',b'\x00\x00\x0B\x07VkPipelineCoverageReductionStateCreateInfoNV',b'\x00\x00\x00\x1FVkPipelineCoverageToColorStateCreateFlagsNV',b'\x00\x00\x0B\x08VkPipelineCoverageToColorStateCreateInfoNV',b'\x00\x00\x0B\x09VkPipelineCreateFlagBits',b'\x00\x00\x00\x1FVkPipelineCreateFlags',b'\x00\x00\x0B\x0BVkPipelineCreationFeedback',b'\x00\x00\x0B\x0CVkPipelineCreationFeedbackCreateInfo',b'\x00\x00\x0B\x0CVkPipelineCreationFeedbackCreateInfoEXT',b'\x00\x00\x0B\x0BVkPipelineCreationFeedbackEXT',b'\x00\x00\x0B\x0DVkPipelineCreationFeedbackFlagBits',b'\x00\x00\x0B\x0DVkPipelineCreationFeedbackFlagBitsEXT',b'\x00\x00\x00\x1FVkPipelineCreationFeedbackFlags',b'\x00\x00\x00\x1FVkPipelineCreationFeedbackFlagsEXT',b'\x00\x00\x0B\x0EVkPipelineDepthStencilStateCreateFlagBits',b'\x00\x00\x00\x1FVkPipelineDepthStencilStateCreateFlags',b'\x00\x00\x0B\x10VkPipelineDepthStencilStateCreateInfo',b'\x00\x00\x00\x1FVkPipelineDiscardRectangleStateCreateFlagsEXT',b'\x00\x00\x0B\x11VkPipelineDiscardRectangleStateCreateInfoEXT',b'\x00\x00\x00\x1FVkPipelineDynamicStateCreateFlags',b'\x00\x00\x0B\x13VkPipelineDynamicStateCreateInfo',b'\x00\x00\x0B\x14VkPipelineExecutableInfoKHR',b'\x00\x00\x0B\x15VkPipelineExecutableInternalRepresentationKHR',b'\x00\x00\x0B\x16VkPipelineExecutablePropertiesKHR',b'\x00\x00\x0B\x17VkPipelineExecutableStatisticFormatKHR',b'\x00\x00\x0B\x18VkPipelineExecutableStatisticKHR',b'\x00\x00\x0B\x19VkPipelineExecutableStatisticValueKHR',b'\x00\x00\x0B\x1AVkPipelineFragmentShadingRateEnumStateCreateInfoNV',b'\x00\x00\x0B\x1BVkPipelineFragmentShadingRateStateCreateInfoKHR',b'\x00\x00\x0B\x1CVkPipelineInfoKHR',b'\x00\x00\x00\x1FVkPipelineInputAssemblyStateCreateFlags',b'\x00\x00\x0B\x1EVkPipelineInputAssemblyStateCreateInfo',b'\x00\x00\x04\x64VkPipelineLayout',b'\x00\x00\x0B\x1FVkPipelineLayoutCreateFlagBits',b'\x00\x00\x00\x1FVkPipelineLayoutCreateFlags',b'\x00\x00\x0B\x20VkPipelineLayoutCreateInfo',b'\x00\x00\x0B\x22VkPipelineLibraryCreateInfoKHR',b'\x00\x00\x00\x1FVkPipelineMultisampleStateCreateFlags',b'\x00\x00\x0B\x24VkPipelineMultisampleStateCreateInfo',b'\x00\x00\x00\x1FVkPipelineRasterizationConservativeStateCreateFlagsEXT',b'\x00\x00\x0B\x25VkPipelineRasterizationConservativeStateCreateInfoEXT',b'\x00\x00\x00\x1FVkPipelineRasterizationDepthClipStateCreateFlagsEXT',b'\x00\x00\x0B\x26VkPipelineRasterizationDepthClipStateCreateInfoEXT',b'\x00\x00\x0B\x27VkPipelineRasterizationLineStateCreateInfoEXT',b'\x00\x00\x0B\x28VkPipelineRasterizationProvokingVertexStateCreateInfoEXT',b'\x00\x00\x00\x1FVkPipelineRasterizationStateCreateFlags',b'\x00\x00\x0B\x2AVkPipelineRasterizationStateCreateInfo',b'\x00\x00\x0B\x2BVkPipelineRasterizationStateRasterizationOrderAMD',b'\x00\x00\x00\x1FVkPipelineRasterizationStateStreamCreateFlagsEXT',b'\x00\x00\x0B\x2CVkPipelineRasterizationStateStreamCreateInfoEXT',b'\x00\x00\x0B\x2DVkPipelineRenderingCreateInfo',b'\x00\x00\x0B\x2DVkPipelineRenderingCreateInfoKHR',b'\x00\x00\x0B\x2EVkPipelineRepresentativeFragmentTestStateCreateInfoNV',b'\x00\x00\x0B\x2FVkPipelineSampleLocationsStateCreateInfoEXT',b'\x00\x00\x0B\x30VkPipelineShaderStageCreateFlagBits',b'\x00\x00\x00\x1FVkPipelineShaderStageCreateFlags',b'\x00\x00\x0B\x32VkPipelineShaderStageCreateInfo',b'\x00\x00\x0B\x33VkPipelineShaderStageRequiredSubgroupSizeCreateInfo',b'\x00\x00\x0B\x33VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT',b'\x00\x00\x04\x80VkPipelineStageFlagBits',b'\x00\x00\x00\xEBVkPipelineStageFlagBits2',b'\x00\x00\x00\xEBVkPipelineStageFlagBits2KHR',b'\x00\x00\x00\x1FVkPipelineStageFlags',b'\x00\x00\x00\xEBVkPipelineStageFlags2',b'\x00\x00\x00\xEBVkPipelineStageFlags2KHR',b'\x00\x00\x0B\x34VkPipelineTessellationDomainOriginStateCreateInfo',b'\x00\x00\x0B\x34VkPipelineTessellationDomainOriginStateCreateInfoKHR',b'\x00\x00\x00\x1FVkPipelineTessellationStateCreateFlags',b'\x00\x00\x0B\x36VkPipelineTessellationStateCreateInfo',b'\x00\x00\x0B\x37VkPipelineVertexInputDivisorStateCreateInfoEXT',b'\x00\x00\x00\x1FVkPipelineVertexInputStateCreateFlags',b'\x00\x00\x0B\x39VkPipelineVertexInputStateCreateInfo',b'\x00\x00\x0B\x3AVkPipelineViewportCoarseSampleOrderStateCreateInfoNV',b'\x00\x00\x0B\x3BVkPipelineViewportDepthClipControlCreateInfoEXT',b'\x00\x00\x0B\x3CVkPipelineViewportExclusiveScissorStateCreateInfoNV',b'\x00\x00\x0B\x3DVkPipelineViewportShadingRateImageStateCreateInfoNV',b'\x00\x00\x00\x1FVkPipelineViewportStateCreateFlags',b'\x00\x00\x0B\x3FVkPipelineViewportStateCreateInfo',b'\x00\x00\x00\x1FVkPipelineViewportSwizzleStateCreateFlagsNV',b'\x00\x00\x0B\x40VkPipelineViewportSwizzleStateCreateInfoNV',b'\x00\x00\x0B\x41VkPipelineViewportWScalingStateCreateInfoNV',b'\x00\x00\x0B\x42VkPointClippingBehavior',b'\x00\x00\x0B\x42VkPointClippingBehaviorKHR',b'\x00\x00\x0B\x43VkPolygonMode',b'\x00\x00\x0B\x44VkPresentIdKHR',b'\x00\x00\x0B\x45VkPresentInfoKHR',b'\x00\x00\x0B\x46VkPresentModeKHR',b'\x00\x00\x0B\x48VkPresentRegionKHR',b'\x00\x00\x0B\x49VkPresentRegionsKHR',b'\x00\x00\x0B\x4BVkPresentTimeGOOGLE',b'\x00\x00\x0B\x4CVkPresentTimesInfoGOOGLE',b'\x00\x00\x04\x8DVkPrimitiveTopology',b'\x00\x00\x00\xECVkPrivateDataSlot',b'\x00\x00\x00\x1FVkPrivateDataSlotCreateFlags',b'\x00\x00\x00\x1FVkPrivateDataSlotCreateFlagsEXT',b'\x00\x00\x0B\x4DVkPrivateDataSlotCreateInfo',b'\x00\x00\x0B\x4DVkPrivateDataSlotCreateInfoEXT',b'\x00\x00\x00\xECVkPrivateDataSlotEXT',b'\x00\x00\x0B\x4EVkProtectedSubmitInfo',b'\x00\x00\x0B\x4FVkProvokingVertexModeEXT',b'\x00\x00\x0B\x51VkPushConstantRange',b'\x00\x00\x0B\x52VkQueryControlFlagBits',b'\x00\x00\x00\x1FVkQueryControlFlags',b'\x00\x00\x0B\x53VkQueryPipelineStatisticFlagBits',b'\x00\x00\x00\x1FVkQueryPipelineStatisticFlags',b'\x00\x00\x02\x10VkQueryPool',b'\x00\x00\x00\x1FVkQueryPoolCreateFlags',b'\x00\x00\x0B\x54VkQueryPoolCreateInfo',b'\x00\x00\x0B\x56VkQueryPoolCreateInfoINTEL',b'\x00\x00\x0B\x55VkQueryPoolPerformanceCreateInfoKHR',b'\x00\x00\x0B\x56VkQueryPoolPerformanceQueryCreateInfoINTEL',b'\x00\x00\x0B\x57VkQueryPoolSamplingModeINTEL',b'\x00\x00\x0B\x58VkQueryResultFlagBits',b'\x00\x00\x00\x1FVkQueryResultFlags',b'\x00\x00\x02\x82VkQueryType',b'\x00\x00\x03\x90VkQueue',b'\x00\x00\x0B\x59VkQueueFamilyCheckpointProperties2NV',b'\x00\x00\x0B\x5AVkQueueFamilyCheckpointPropertiesNV',b'\x00\x00\x0B\x5BVkQueueFamilyGlobalPriorityPropertiesEXT',b'\x00\x00\x0B\x5BVkQueueFamilyGlobalPriorityPropertiesKHR',b'\x00\x00\x0B\x5DVkQueueFamilyProperties',b'\x00\x00\x0B\x5CVkQueueFamilyProperties2',b'\x00\x00\x0B\x5CVkQueueFamilyProperties2KHR',b'\x00\x00\x0B\x5EVkQueueFlagBits',b'\x00\x00\x00\x1FVkQueueFlags',b'\x00\x00\x0B\x5FVkQueueGlobalPriorityEXT',b'\x00\x00\x0B\x5FVkQueueGlobalPriorityKHR',b'\x00\x00\x0B\x62VkRasterizationOrderAMD',b'\x00\x00\x0B\x63VkRayTracingPipelineCreateInfoKHR',b'\x00\x00\x0B\x64VkRayTracingPipelineCreateInfoNV',b'\x00\x00\x0B\x66VkRayTracingPipelineInterfaceCreateInfoKHR',b'\x00\x00\x0B\x68VkRayTracingShaderGroupCreateInfoKHR',b'\x00\x00\x0B\x6AVkRayTracingShaderGroupCreateInfoNV',b'\x00\x00\x0B\x6BVkRayTracingShaderGroupTypeKHR',b'\x00\x00\x0B\x6BVkRayTracingShaderGroupTypeNV',b'\x00\x00\x0B\x6CVkRect2D',b'\x00\x00\x0B\x6EVkRectLayerKHR',b'\x00\x00\x0B\x6FVkRefreshCycleDurationGOOGLE',b'\x00\x00\x01\x6AVkRemoteAddressNV',b'\x00\x00\x02\x1AVkRenderPass',b'\x00\x00\x0B\x70VkRenderPassAttachmentBeginInfo',b'\x00\x00\x0B\x70VkRenderPassAttachmentBeginInfoKHR',b'\x00\x00\x0B\x71VkRenderPassBeginInfo',b'\x00\x00\x0B\x72VkRenderPassCreateFlagBits',b'\x00\x00\x00\x1FVkRenderPassCreateFlags',b'\x00\x00\x0B\x74VkRenderPassCreateInfo',b'\x00\x00\x0B\x73VkRenderPassCreateInfo2',b'\x00\x00\x0B\x73VkRenderPassCreateInfo2KHR',b'\x00\x00\x0B\x75VkRenderPassFragmentDensityMapCreateInfoEXT',b'\x00\x00\x0B\x76VkRenderPassInputAttachmentAspectCreateInfo',b'\x00\x00\x0B\x76VkRenderPassInputAttachmentAspectCreateInfoKHR',b'\x00\x00\x0B\x77VkRenderPassMultiviewCreateInfo',b'\x00\x00\x0B\x77VkRenderPassMultiviewCreateInfoKHR',b'\x00\x00\x0B\x78VkRenderPassSampleLocationsBeginInfoEXT',b'\x00\x00\x0B\x79VkRenderPassTransformBeginInfoQCOM',b'\x00\x00\x0B\x7BVkRenderingAttachmentInfo',b'\x00\x00\x0B\x7BVkRenderingAttachmentInfoKHR',b'\x00\x00\x0B\x7CVkRenderingFlagBits',b'\x00\x00\x0B\x7CVkRenderingFlagBitsKHR',b'\x00\x00\x00\x1FVkRenderingFlags',b'\x00\x00\x00\x1FVkRenderingFlagsKHR',b'\x00\x00\x0B\x7DVkRenderingFragmentDensityMapAttachmentInfoEXT',b'\x00\x00\x0B\x7EVkRenderingFragmentShadingRateAttachmentInfoKHR',b'\x00\x00\x0B\x7FVkRenderingInfo',b'\x00\x00\x0B\x7FVkRenderingInfoKHR',b'\x00\x00\x0B\x80VkResolveImageInfo2',b'\x00\x00\x0B\x80VkResolveImageInfo2KHR',b'\x00\x00\x0B\x81VkResolveModeFlagBits',b'\x00\x00\x0B\x81VkResolveModeFlagBitsKHR',b'\x00\x00\x00\x1FVkResolveModeFlags',b'\x00\x00\x00\x1FVkResolveModeFlagsKHR',b'\x00\x00\x0C\x2DVkResult',b'\x00\x00\x0C\x2EVkSRTDataNV',b'\x00\x00\x08\x0AVkSampleCountFlagBits',b'\x00\x00\x00\x1FVkSampleCountFlags',b'\x00\x00\x0C\x31VkSampleLocationEXT',b'\x00\x00\x0C\x32VkSampleLocationsInfoEXT',b'\x00\x00\x00\x1FVkSampleMask',b'\x00\x00\x07\xA3VkSampler',b'\x00\x00\x0C\x33VkSamplerAddressMode',b'\x00\x00\x0C\x34VkSamplerBorderColorComponentMappingCreateInfoEXT',b'\x00\x00\x0C\x35VkSamplerCreateFlagBits',b'\x00\x00\x00\x1FVkSamplerCreateFlags',b'\x00\x00\x0C\x36VkSamplerCreateInfo',b'\x00\x00\x0C\x37VkSamplerCustomBorderColorCreateInfoEXT',b'\x00\x00\x0C\x38VkSamplerMipmapMode',b'\x00\x00\x0C\x39VkSamplerReductionMode',b'\x00\x00\x0C\x3AVkSamplerReductionModeCreateInfo',b'\x00\x00\x0C\x3AVkSamplerReductionModeCreateInfoEXT',b'\x00\x00\x0C\x39VkSamplerReductionModeEXT',b'\x00\x00\x07\x9EVkSamplerYcbcrConversion',b'\x00\x00\x0C\x3BVkSamplerYcbcrConversionCreateInfo',b'\x00\x00\x0C\x3BVkSamplerYcbcrConversionCreateInfoKHR',b'\x00\x00\x0C\x3CVkSamplerYcbcrConversionImageFormatProperties',b'\x00\x00\x0C\x3CVkSamplerYcbcrConversionImageFormatPropertiesKHR',b'\x00\x00\x0C\x3DVkSamplerYcbcrConversionInfo',b'\x00\x00\x0C\x3DVkSamplerYcbcrConversionInfoKHR',b'\x00\x00\x07\x9EVkSamplerYcbcrConversionKHR',b'\x00\x00\x0C\x3EVkSamplerYcbcrModelConversion',b'\x00\x00\x0C\x3EVkSamplerYcbcrModelConversionKHR',b'\x00\x00\x0C\x3FVkSamplerYcbcrRange',b'\x00\x00\x0C\x3FVkSamplerYcbcrRangeKHR',b'\x00\x00\x0C\x40VkScopeNV',b'\x00\x00\x02\x1FVkSemaphore',b'\x00\x00\x00\x1FVkSemaphoreCreateFlags',b'\x00\x00\x0C\x41VkSemaphoreCreateInfo',b'\x00\x00\x0C\x42VkSemaphoreGetFdInfoKHR',b'\x00\x00\x0C\x43VkSemaphoreImportFlagBits',b'\x00\x00\x0C\x43VkSemaphoreImportFlagBitsKHR',b'\x00\x00\x00\x1FVkSemaphoreImportFlags',b'\x00\x00\x00\x1FVkSemaphoreImportFlagsKHR',b'\x00\x00\x0C\x44VkSemaphoreSignalInfo',b'\x00\x00\x0C\x44VkSemaphoreSignalInfoKHR',b'\x00\x00\x0C\x46VkSemaphoreSubmitInfo',b'\x00\x00\x0C\x46VkSemaphoreSubmitInfoKHR',b'\x00\x00\x0C\x47VkSemaphoreType',b'\x00\x00\x0C\x48VkSemaphoreTypeCreateInfo',b'\x00\x00\x0C\x48VkSemaphoreTypeCreateInfoKHR',b'\x00\x00\x0C\x47VkSemaphoreTypeKHR',b'\x00\x00\x0C\x49VkSemaphoreWaitFlagBits',b'\x00\x00\x0C\x49VkSemaphoreWaitFlagBitsKHR',b'\x00\x00\x00\x1FVkSemaphoreWaitFlags',b'\x00\x00\x00\x1FVkSemaphoreWaitFlagsKHR',b'\x00\x00\x0C\x4AVkSemaphoreWaitInfo',b'\x00\x00\x0C\x4AVkSemaphoreWaitInfoKHR',b'\x00\x00\x0C\x4BVkSetStateFlagsIndirectCommandNV',b'\x00\x00\x0C\x4CVkShaderCorePropertiesFlagBitsAMD',b'\x00\x00\x00\x1FVkShaderCorePropertiesFlagsAMD',b'\x00\x00\x0C\x4DVkShaderFloatControlsIndependence',b'\x00\x00\x0C\x4DVkShaderFloatControlsIndependenceKHR',b'\x00\x00\x03\xECVkShaderGroupShaderKHR',b'\x00\x00\x01\xFDVkShaderInfoTypeAMD',b'\x00\x00\x07\xADVkShaderModule',b'\x00\x00\x00\x1FVkShaderModuleCreateFlags',b'\x00\x00\x0C\x4EVkShaderModuleCreateInfo',b'\x00\x00\x0C\x4FVkShaderModuleValidationCacheCreateInfoEXT',b'\x00\x00\x0C\x50VkShaderResourceUsageAMD',b'\x00\x00\x01\xFCVkShaderStageFlagBits',b'\x00\x00\x00\x1FVkShaderStageFlags',b'\x00\x00\x0C\x51VkShaderStatisticsInfoAMD',b'\x00\x00\x0C\x53VkShadingRatePaletteEntryNV',b'\x00\x00\x0C\x54VkShadingRatePaletteNV',b'\x00\x00\x0C\x55VkSharedPresentSurfaceCapabilitiesKHR',b'\x00\x00\x0C\x56VkSharingMode',b'\x00\x00\x0C\x58VkSparseBufferMemoryBindInfo',b'\x00\x00\x0C\x59VkSparseImageFormatFlagBits',b'\x00\x00\x00\x1FVkSparseImageFormatFlags',b'\x00\x00\x0C\x5BVkSparseImageFormatProperties',b'\x00\x00\x0C\x5AVkSparseImageFormatProperties2',b'\x00\x00\x0C\x5AVkSparseImageFormatProperties2KHR',b'\x00\x00\x0C\x5DVkSparseImageMemoryBind',b'\x00\x00\x0C\x5FVkSparseImageMemoryBindInfo',b'\x00\x00\x0C\x61VkSparseImageMemoryRequirements',b'\x00\x00\x0C\x60VkSparseImageMemoryRequirements2',b'\x00\x00\x0C\x60VkSparseImageMemoryRequirements2KHR',b'\x00\x00\x0C\x63VkSparseImageOpaqueMemoryBindInfo',b'\x00\x00\x0C\x65VkSparseMemoryBind',b'\x00\x00\x0C\x66VkSparseMemoryBindFlagBits',b'\x00\x00\x00\x1FVkSparseMemoryBindFlags',b'\x00\x00\x0C\x68VkSpecializationInfo',b'\x00\x00\x0C\x6AVkSpecializationMapEntry',b'\x00\x00\x0C\x6BVkStencilFaceFlagBits',b'\x00\x00\x00\x1FVkStencilFaceFlags',b'\x00\x00\x05\xD0VkStencilOp',b'\x00\x00\x0C\x6CVkStencilOpState',b'\x00\x00\x0C\x6DVkStridedDeviceAddressRegionKHR',b'\x00\x00\x0C\x6EVkStructureType',b'\x00\x00\x0C\x6FVkSubgroupFeatureFlagBits',b'\x00\x00\x00\x1FVkSubgroupFeatureFlags',b'\x00\x00\x0C\x70VkSubmitFlagBits',b'\x00\x00\x0C\x70VkSubmitFlagBitsKHR',b'\x00\x00\x00\x1FVkSubmitFlags',b'\x00\x00\x00\x1FVkSubmitFlagsKHR',b'\x00\x00\x0C\x72VkSubmitInfo',b'\x00\x00\x0C\x71VkSubmitInfo2',b'\x00\x00\x0C\x71VkSubmitInfo2KHR',b'\x00\x00\x0C\x73VkSubpassBeginInfo',b'\x00\x00\x0C\x73VkSubpassBeginInfoKHR',b'\x00\x00\x04\x97VkSubpassContents',b'\x00\x00\x0C\x77VkSubpassDependency',b'\x00\x00\x0C\x76VkSubpassDependency2',b'\x00\x00\x0C\x76VkSubpassDependency2KHR',b'\x00\x00\x0C\x7BVkSubpassDescription',b'\x00\x00\x0C\x7AVkSubpassDescription2',b'\x00\x00\x0C\x7AVkSubpassDescription2KHR',b'\x00\x00\x0C\x7CVkSubpassDescriptionDepthStencilResolve',b'\x00\x00\x0C\x7CVkSubpassDescriptionDepthStencilResolveKHR',b'\x00\x00\x0C\x7DVkSubpassDescriptionFlagBits',b'\x00\x00\x00\x1FVkSubpassDescriptionFlags',b'\x00\x00\x0C\x7EVkSubpassEndInfo',b'\x00\x00\x0C\x7EVkSubpassEndInfoKHR',b'\x00\x00\x0C\x7FVkSubpassFragmentDensityMapOffsetEndInfoQCOM',b'\x00\x00\x0C\x81VkSubpassSampleLocationsEXT',b'\x00\x00\x0C\x82VkSubpassShadingPipelineCreateInfoHUAWEI',b'\x00\x00\x0C\x84VkSubresourceLayout',b'\x00\x00\x0C\x85VkSurfaceCapabilities2EXT',b'\x00\x00\x0C\x86VkSurfaceCapabilities2KHR',b'\x00\x00\x0C\x87VkSurfaceCapabilitiesKHR',b'\x00\x00\x02\x33VkSurfaceCounterFlagBitsEXT',b'\x00\x00\x00\x1FVkSurfaceCounterFlagsEXT',b'\x00\x00\x0C\x88VkSurfaceFormat2KHR',b'\x00\x00\x0C\x89VkSurfaceFormatKHR',b'\x00\x00\x02\x24VkSurfaceKHR',b'\x00\x00\x0C\x8AVkSurfaceProtectedCapabilitiesKHR',b'\x00\x00\x0C\x8BVkSurfaceTransformFlagBitsKHR',b'\x00\x00\x00\x1FVkSurfaceTransformFlagsKHR',b'\x00\x00\x0C\x8CVkSwapchainCounterCreateInfoEXT',b'\x00\x00\x0C\x8DVkSwapchainCreateFlagBitsKHR',b'\x00\x00\x00\x1FVkSwapchainCreateFlagsKHR',b'\x00\x00\x0C\x8EVkSwapchainCreateInfoKHR',b'\x00\x00\x0C\x8FVkSwapchainDisplayNativeHdrCreateInfoAMD',b'\x00\x00\x02\x29VkSwapchainKHR',b'\x00\x00\x03\xF2VkSystemAllocationScope',b'\x00\x00\x0C\x90VkTessellationDomainOrigin',b'\x00\x00\x0C\x90VkTessellationDomainOriginKHR',b'\x00\x00\x0C\x91VkTextureLODGatherFormatPropertiesAMD',b'\x00\x00\x0C\x92VkTimeDomainEXT',b'\x00\x00\x0C\x93VkTimelineSemaphoreSubmitInfo',b'\x00\x00\x0C\x93VkTimelineSemaphoreSubmitInfoKHR',b'\x00\x00\x0C\x94VkToolPurposeFlagBits',b'\x00\x00\x0C\x94VkToolPurposeFlagBitsEXT',b'\x00\x00\x00\x1FVkToolPurposeFlags',b'\x00\x00\x00\x1FVkToolPurposeFlagsEXT',b'\x00\x00\x0C\x95VkTraceRaysIndirectCommandKHR',b'\x00\x00\x0C\x96VkTransformMatrixKHR',b'\x00\x00\x0C\x96VkTransformMatrixNV',b'\x00\x00\x00\x1FVkValidationCacheCreateFlagsEXT',b'\x00\x00\x0C\x97VkValidationCacheCreateInfoEXT',b'\x00\x00\x02\x52VkValidationCacheEXT',b'\x00\x00\x0C\x98VkValidationCacheHeaderVersionEXT',b'\x00\x00\x0C\x9AVkValidationCheckEXT',b'\x00\x00\x0C\x9CVkValidationFeatureDisableEXT',b'\x00\x00\x0C\x9EVkValidationFeatureEnableEXT',b'\x00\x00\x0C\x9FVkValidationFeaturesEXT',b'\x00\x00\x0C\xA0VkValidationFlagsEXT',b'\x00\x00\x0C\xA1VkVendorId',b'\x00\x00\x0C\xA4VkVertexInputAttributeDescription',b'\x00\x00\x0C\xA3VkVertexInputAttributeDescription2EXT',b'\x00\x00\x0C\xA7VkVertexInputBindingDescription',b'\x00\x00\x0C\xA6VkVertexInputBindingDescription2EXT',b'\x00\x00\x0C\xA9VkVertexInputBindingDivisorDescriptionEXT',b'\x00\x00\x0C\xAAVkVertexInputRate',b'\x00\x00\x0C\xABVkViewport',b'\x00\x00\x0C\xACVkViewportCoordinateSwizzleNV',b'\x00\x00\x0C\xAEVkViewportSwizzleNV',b'\x00\x00\x0C\xAFVkViewportWScalingNV',b'\x00\x00\x00\x1FVkWaylandSurfaceCreateFlagsKHR',b'\x00\x00\x0C\xB0VkWaylandSurfaceCreateInfoKHR',b'\x00\x00\x0C\xB1VkWriteDescriptorSet',b'\x00\x00\x0C\xB2VkWriteDescriptorSetAccelerationStructureKHR',b'\x00\x00\x0C\xB3VkWriteDescriptorSetAccelerationStructureNV',b'\x00\x00\x0C\xB4VkWriteDescriptorSetInlineUniformBlock',b'\x00\x00\x0C\xB4VkWriteDescriptorSetInlineUniformBlockEXT',b'\x00\x00\x0C\xB5VkXYColorEXT',b'\x00\x00\x00\x1FVkXcbSurfaceCreateFlagsKHR',b'\x00\x00\x0C\xB6VkXcbSurfaceCreateInfoKHR',b'\x00\x00\x00\x1FVkXlibSurfaceCreateFlagsKHR',b'\x00\x00\x0C\xB7VkXlibSurfaceCreateInfoKHR',b'\x00\x00\x0D\xE7WCHAR',b'\x00\x00\x03\xC5Window',b'\x00\x00\x03\xC5XID',b'\x00\x00\x00\x9Bva_list',b'\x00\x00\x0D\xE8xcb_connection_t',b'\x00\x00\x00\x1Fxcb_visualid_t',b'\x00\x00\x00\x1Fxcb_window_t'),
)

from ctypes import *


jvulkanLib = ffi.dlopen("/home/julian/Documents/sodll/vulkan/libvulkan.so")
jvulkanInterface = ffi
jvulkanCtypes = CDLL("/home/julian/Documents/sodll/vulkan/libvulkan.so") 

def cdataStr(instr):
    return ffi.new("char[]", instr.encode('ascii'))
	
# Generate Constants (ex VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR)
UNSTATABLE = []
try:
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_BUILD_TYPE_MAX_ENUM_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_BUILD_TYPE_MAX_ENUM_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_BUILD_TYPE_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_BUILD_TYPE_MAX_ENUM_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_COMPATIBILITY_MAX_ENUM_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_COMPATIBILITY_MAX_ENUM_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_COMPATIBILITY_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_COMPATIBILITY_MAX_ENUM_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_CREATE_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_CREATE_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_CREATE_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_CREATE_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV
    #print("statd VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV"]
try:
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV
    #print("statd VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV"]
try:
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV
    #print("statd VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV"]
try:
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV
    #print("statd VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV"]
try:
    VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV
    #print("statd VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV"]
try:
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV
    #print("statd VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV"]
try:
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MAX_ENUM_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MAX_ENUM_NV
    #print("statd VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MAX_ENUM_NV"]
try:
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV
    #print("statd VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV"]
try:
    VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV
    #print("statd VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV"]
try:
    VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV
    #print("statd VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV"]
try:
    VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR = jvulkanLib.VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR
    #print("statd VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR"]
try:
    VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV = jvulkanLib.VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV
    #print("statd VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV"]
try:
    VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR
    #print("statd VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR"]
try:
    VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV = jvulkanLib.VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV
    #print("statd VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV"]
try:
    VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR = jvulkanLib.VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR
    #print("statd VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR"]
try:
    VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV = jvulkanLib.VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV
    #print("statd VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV"]
try:
    VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT = jvulkanLib.VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT
    #print("statd VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT"]
try:
    VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR
    #print("statd VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR"]
try:
    VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = jvulkanLib.VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT
    #print("statd VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT"]
try:
    VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT = jvulkanLib.VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT
    #print("statd VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT"]
try:
    VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR = jvulkanLib.VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR
    #print("statd VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR"]
try:
    VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV = jvulkanLib.VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV
    #print("statd VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV"]
try:
    VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV = jvulkanLib.VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV
    #print("statd VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV"]
try:
    VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT = jvulkanLib.VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT
    #print("statd VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT"]
try:
    VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT = jvulkanLib.VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT
    #print("statd VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT"]
try:
    VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR
    #print("statd VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR"]
try:
    VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = jvulkanLib.VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT
    #print("statd VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"]
try:
    VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR = jvulkanLib.VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR
    #print("statd VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR"]
try:
    VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT = jvulkanLib.VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT
    #print("statd VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT"]
try:
    VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR
    #print("statd VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR"]
try:
    VK_ACCESS_2_HOST_READ_BIT = jvulkanLib.VK_ACCESS_2_HOST_READ_BIT
    #print("statd VK_ACCESS_2_HOST_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_HOST_READ_BIT"]
try:
    VK_ACCESS_2_HOST_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_HOST_READ_BIT_KHR
    #print("statd VK_ACCESS_2_HOST_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_HOST_READ_BIT_KHR"]
try:
    VK_ACCESS_2_HOST_WRITE_BIT = jvulkanLib.VK_ACCESS_2_HOST_WRITE_BIT
    #print("statd VK_ACCESS_2_HOST_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_HOST_WRITE_BIT"]
try:
    VK_ACCESS_2_HOST_WRITE_BIT_KHR = jvulkanLib.VK_ACCESS_2_HOST_WRITE_BIT_KHR
    #print("statd VK_ACCESS_2_HOST_WRITE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_HOST_WRITE_BIT_KHR"]
try:
    VK_ACCESS_2_INDEX_READ_BIT = jvulkanLib.VK_ACCESS_2_INDEX_READ_BIT
    #print("statd VK_ACCESS_2_INDEX_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_INDEX_READ_BIT"]
try:
    VK_ACCESS_2_INDEX_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_INDEX_READ_BIT_KHR
    #print("statd VK_ACCESS_2_INDEX_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_INDEX_READ_BIT_KHR"]
try:
    VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT = jvulkanLib.VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT
    #print("statd VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT"]
try:
    VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR
    #print("statd VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR"]
try:
    VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT = jvulkanLib.VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT
    #print("statd VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT"]
try:
    VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR
    #print("statd VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR"]
try:
    VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI = jvulkanLib.VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI
    #print("statd VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI"]
try:
    VK_ACCESS_2_MEMORY_READ_BIT = jvulkanLib.VK_ACCESS_2_MEMORY_READ_BIT
    #print("statd VK_ACCESS_2_MEMORY_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_MEMORY_READ_BIT"]
try:
    VK_ACCESS_2_MEMORY_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_MEMORY_READ_BIT_KHR
    #print("statd VK_ACCESS_2_MEMORY_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_MEMORY_READ_BIT_KHR"]
try:
    VK_ACCESS_2_MEMORY_WRITE_BIT = jvulkanLib.VK_ACCESS_2_MEMORY_WRITE_BIT
    #print("statd VK_ACCESS_2_MEMORY_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_MEMORY_WRITE_BIT"]
try:
    VK_ACCESS_2_MEMORY_WRITE_BIT_KHR = jvulkanLib.VK_ACCESS_2_MEMORY_WRITE_BIT_KHR
    #print("statd VK_ACCESS_2_MEMORY_WRITE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_MEMORY_WRITE_BIT_KHR"]
try:
    VK_ACCESS_2_NONE = jvulkanLib.VK_ACCESS_2_NONE
    #print("statd VK_ACCESS_2_NONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_NONE"]
try:
    VK_ACCESS_2_NONE_KHR = jvulkanLib.VK_ACCESS_2_NONE_KHR
    #print("statd VK_ACCESS_2_NONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_NONE_KHR"]
try:
    VK_ACCESS_2_SHADER_READ_BIT = jvulkanLib.VK_ACCESS_2_SHADER_READ_BIT
    #print("statd VK_ACCESS_2_SHADER_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADER_READ_BIT"]
try:
    VK_ACCESS_2_SHADER_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_SHADER_READ_BIT_KHR
    #print("statd VK_ACCESS_2_SHADER_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADER_READ_BIT_KHR"]
try:
    VK_ACCESS_2_SHADER_SAMPLED_READ_BIT = jvulkanLib.VK_ACCESS_2_SHADER_SAMPLED_READ_BIT
    #print("statd VK_ACCESS_2_SHADER_SAMPLED_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADER_SAMPLED_READ_BIT"]
try:
    VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR
    #print("statd VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR"]
try:
    VK_ACCESS_2_SHADER_STORAGE_READ_BIT = jvulkanLib.VK_ACCESS_2_SHADER_STORAGE_READ_BIT
    #print("statd VK_ACCESS_2_SHADER_STORAGE_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADER_STORAGE_READ_BIT"]
try:
    VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR
    #print("statd VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR"]
try:
    VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT = jvulkanLib.VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT
    #print("statd VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT"]
try:
    VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR = jvulkanLib.VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR
    #print("statd VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR"]
try:
    VK_ACCESS_2_SHADER_WRITE_BIT = jvulkanLib.VK_ACCESS_2_SHADER_WRITE_BIT
    #print("statd VK_ACCESS_2_SHADER_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADER_WRITE_BIT"]
try:
    VK_ACCESS_2_SHADER_WRITE_BIT_KHR = jvulkanLib.VK_ACCESS_2_SHADER_WRITE_BIT_KHR
    #print("statd VK_ACCESS_2_SHADER_WRITE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADER_WRITE_BIT_KHR"]
try:
    VK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV = jvulkanLib.VK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV
    #print("statd VK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV"]
try:
    VK_ACCESS_2_TRANSFER_READ_BIT = jvulkanLib.VK_ACCESS_2_TRANSFER_READ_BIT
    #print("statd VK_ACCESS_2_TRANSFER_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_TRANSFER_READ_BIT"]
try:
    VK_ACCESS_2_TRANSFER_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_TRANSFER_READ_BIT_KHR
    #print("statd VK_ACCESS_2_TRANSFER_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_TRANSFER_READ_BIT_KHR"]
try:
    VK_ACCESS_2_TRANSFER_WRITE_BIT = jvulkanLib.VK_ACCESS_2_TRANSFER_WRITE_BIT
    #print("statd VK_ACCESS_2_TRANSFER_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_TRANSFER_WRITE_BIT"]
try:
    VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR = jvulkanLib.VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR
    #print("statd VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR"]
try:
    VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = jvulkanLib.VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT
    #print("statd VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT"]
try:
    VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = jvulkanLib.VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT
    #print("statd VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT"]
try:
    VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT = jvulkanLib.VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT
    #print("statd VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT"]
try:
    VK_ACCESS_2_UNIFORM_READ_BIT = jvulkanLib.VK_ACCESS_2_UNIFORM_READ_BIT
    #print("statd VK_ACCESS_2_UNIFORM_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_UNIFORM_READ_BIT"]
try:
    VK_ACCESS_2_UNIFORM_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_UNIFORM_READ_BIT_KHR
    #print("statd VK_ACCESS_2_UNIFORM_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_UNIFORM_READ_BIT_KHR"]
try:
    VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT = jvulkanLib.VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT
    #print("statd VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT"]
try:
    VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR = jvulkanLib.VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR
    #print("statd VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR"]
try:
    VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR = jvulkanLib.VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR
    #print("statd VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR"]
try:
    VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV = jvulkanLib.VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV
    #print("statd VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV"]
try:
    VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR = jvulkanLib.VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR
    #print("statd VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR"]
try:
    VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV = jvulkanLib.VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV
    #print("statd VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV"]
try:
    VK_ACCESS_COLOR_ATTACHMENT_READ_BIT = jvulkanLib.VK_ACCESS_COLOR_ATTACHMENT_READ_BIT
    #print("statd VK_ACCESS_COLOR_ATTACHMENT_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_COLOR_ATTACHMENT_READ_BIT"]
try:
    VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = jvulkanLib.VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT
    #print("statd VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT"]
try:
    VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT = jvulkanLib.VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT
    #print("statd VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT"]
try:
    VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV = jvulkanLib.VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV
    #print("statd VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV"]
try:
    VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV = jvulkanLib.VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV
    #print("statd VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV"]
try:
    VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT = jvulkanLib.VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT
    #print("statd VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT"]
try:
    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = jvulkanLib.VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT
    #print("statd VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT"]
try:
    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = jvulkanLib.VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT
    #print("statd VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"]
try:
    VK_ACCESS_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_ACCESS_FLAG_BITS_MAX_ENUM
    #print("statd VK_ACCESS_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_FLAG_BITS_MAX_ENUM"]
try:
    VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT = jvulkanLib.VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT
    #print("statd VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT"]
try:
    VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = jvulkanLib.VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR
    #print("statd VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR"]
try:
    VK_ACCESS_HOST_READ_BIT = jvulkanLib.VK_ACCESS_HOST_READ_BIT
    #print("statd VK_ACCESS_HOST_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_HOST_READ_BIT"]
try:
    VK_ACCESS_HOST_WRITE_BIT = jvulkanLib.VK_ACCESS_HOST_WRITE_BIT
    #print("statd VK_ACCESS_HOST_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_HOST_WRITE_BIT"]
try:
    VK_ACCESS_INDEX_READ_BIT = jvulkanLib.VK_ACCESS_INDEX_READ_BIT
    #print("statd VK_ACCESS_INDEX_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_INDEX_READ_BIT"]
try:
    VK_ACCESS_INDIRECT_COMMAND_READ_BIT = jvulkanLib.VK_ACCESS_INDIRECT_COMMAND_READ_BIT
    #print("statd VK_ACCESS_INDIRECT_COMMAND_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_INDIRECT_COMMAND_READ_BIT"]
try:
    VK_ACCESS_INPUT_ATTACHMENT_READ_BIT = jvulkanLib.VK_ACCESS_INPUT_ATTACHMENT_READ_BIT
    #print("statd VK_ACCESS_INPUT_ATTACHMENT_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_INPUT_ATTACHMENT_READ_BIT"]
try:
    VK_ACCESS_MEMORY_READ_BIT = jvulkanLib.VK_ACCESS_MEMORY_READ_BIT
    #print("statd VK_ACCESS_MEMORY_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_MEMORY_READ_BIT"]
try:
    VK_ACCESS_MEMORY_WRITE_BIT = jvulkanLib.VK_ACCESS_MEMORY_WRITE_BIT
    #print("statd VK_ACCESS_MEMORY_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_MEMORY_WRITE_BIT"]
try:
    VK_ACCESS_NONE = jvulkanLib.VK_ACCESS_NONE
    #print("statd VK_ACCESS_NONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_NONE"]
try:
    VK_ACCESS_NONE_KHR = jvulkanLib.VK_ACCESS_NONE_KHR
    #print("statd VK_ACCESS_NONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_NONE_KHR"]
try:
    VK_ACCESS_SHADER_READ_BIT = jvulkanLib.VK_ACCESS_SHADER_READ_BIT
    #print("statd VK_ACCESS_SHADER_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_SHADER_READ_BIT"]
try:
    VK_ACCESS_SHADER_WRITE_BIT = jvulkanLib.VK_ACCESS_SHADER_WRITE_BIT
    #print("statd VK_ACCESS_SHADER_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_SHADER_WRITE_BIT"]
try:
    VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV = jvulkanLib.VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV
    #print("statd VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV"]
try:
    VK_ACCESS_TRANSFER_READ_BIT = jvulkanLib.VK_ACCESS_TRANSFER_READ_BIT
    #print("statd VK_ACCESS_TRANSFER_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_TRANSFER_READ_BIT"]
try:
    VK_ACCESS_TRANSFER_WRITE_BIT = jvulkanLib.VK_ACCESS_TRANSFER_WRITE_BIT
    #print("statd VK_ACCESS_TRANSFER_WRITE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_TRANSFER_WRITE_BIT"]
try:
    VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = jvulkanLib.VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT
    #print("statd VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT"]
try:
    VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = jvulkanLib.VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT
    #print("statd VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT"]
try:
    VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT = jvulkanLib.VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT
    #print("statd VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT"]
try:
    VK_ACCESS_UNIFORM_READ_BIT = jvulkanLib.VK_ACCESS_UNIFORM_READ_BIT
    #print("statd VK_ACCESS_UNIFORM_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_UNIFORM_READ_BIT"]
try:
    VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT = jvulkanLib.VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT
    #print("statd VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT"]
try:
    VK_ACQUIRE_PROFILING_LOCK_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_ACQUIRE_PROFILING_LOCK_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_ACQUIRE_PROFILING_LOCK_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ACQUIRE_PROFILING_LOCK_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM
    #print("statd VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM"]
try:
    VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT = jvulkanLib.VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT
    #print("statd VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT"]
try:
    VK_ATTACHMENT_LOAD_OP_CLEAR = jvulkanLib.VK_ATTACHMENT_LOAD_OP_CLEAR
    #print("statd VK_ATTACHMENT_LOAD_OP_CLEAR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_LOAD_OP_CLEAR"]
try:
    VK_ATTACHMENT_LOAD_OP_DONT_CARE = jvulkanLib.VK_ATTACHMENT_LOAD_OP_DONT_CARE
    #print("statd VK_ATTACHMENT_LOAD_OP_DONT_CARE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_LOAD_OP_DONT_CARE"]
try:
    VK_ATTACHMENT_LOAD_OP_LOAD = jvulkanLib.VK_ATTACHMENT_LOAD_OP_LOAD
    #print("statd VK_ATTACHMENT_LOAD_OP_LOAD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_LOAD_OP_LOAD"]
try:
    VK_ATTACHMENT_LOAD_OP_MAX_ENUM = jvulkanLib.VK_ATTACHMENT_LOAD_OP_MAX_ENUM
    #print("statd VK_ATTACHMENT_LOAD_OP_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_LOAD_OP_MAX_ENUM"]
try:
    VK_ATTACHMENT_LOAD_OP_NONE_EXT = jvulkanLib.VK_ATTACHMENT_LOAD_OP_NONE_EXT
    #print("statd VK_ATTACHMENT_LOAD_OP_NONE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_LOAD_OP_NONE_EXT"]
try:
    VK_ATTACHMENT_STORE_OP_DONT_CARE = jvulkanLib.VK_ATTACHMENT_STORE_OP_DONT_CARE
    #print("statd VK_ATTACHMENT_STORE_OP_DONT_CARE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_STORE_OP_DONT_CARE"]
try:
    VK_ATTACHMENT_STORE_OP_MAX_ENUM = jvulkanLib.VK_ATTACHMENT_STORE_OP_MAX_ENUM
    #print("statd VK_ATTACHMENT_STORE_OP_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_STORE_OP_MAX_ENUM"]
try:
    VK_ATTACHMENT_STORE_OP_NONE = jvulkanLib.VK_ATTACHMENT_STORE_OP_NONE
    #print("statd VK_ATTACHMENT_STORE_OP_NONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_STORE_OP_NONE"]
try:
    VK_ATTACHMENT_STORE_OP_NONE_EXT = jvulkanLib.VK_ATTACHMENT_STORE_OP_NONE_EXT
    #print("statd VK_ATTACHMENT_STORE_OP_NONE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_STORE_OP_NONE_EXT"]
try:
    VK_ATTACHMENT_STORE_OP_NONE_KHR = jvulkanLib.VK_ATTACHMENT_STORE_OP_NONE_KHR
    #print("statd VK_ATTACHMENT_STORE_OP_NONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_STORE_OP_NONE_KHR"]
try:
    VK_ATTACHMENT_STORE_OP_NONE_QCOM = jvulkanLib.VK_ATTACHMENT_STORE_OP_NONE_QCOM
    #print("statd VK_ATTACHMENT_STORE_OP_NONE_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_STORE_OP_NONE_QCOM"]
try:
    VK_ATTACHMENT_STORE_OP_STORE = jvulkanLib.VK_ATTACHMENT_STORE_OP_STORE
    #print("statd VK_ATTACHMENT_STORE_OP_STORE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ATTACHMENT_STORE_OP_STORE"]
try:
    VK_BLEND_FACTOR_CONSTANT_ALPHA = jvulkanLib.VK_BLEND_FACTOR_CONSTANT_ALPHA
    #print("statd VK_BLEND_FACTOR_CONSTANT_ALPHA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_CONSTANT_ALPHA"]
try:
    VK_BLEND_FACTOR_CONSTANT_COLOR = jvulkanLib.VK_BLEND_FACTOR_CONSTANT_COLOR
    #print("statd VK_BLEND_FACTOR_CONSTANT_COLOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_CONSTANT_COLOR"]
try:
    VK_BLEND_FACTOR_DST_ALPHA = jvulkanLib.VK_BLEND_FACTOR_DST_ALPHA
    #print("statd VK_BLEND_FACTOR_DST_ALPHA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_DST_ALPHA"]
try:
    VK_BLEND_FACTOR_DST_COLOR = jvulkanLib.VK_BLEND_FACTOR_DST_COLOR
    #print("statd VK_BLEND_FACTOR_DST_COLOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_DST_COLOR"]
try:
    VK_BLEND_FACTOR_MAX_ENUM = jvulkanLib.VK_BLEND_FACTOR_MAX_ENUM
    #print("statd VK_BLEND_FACTOR_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_MAX_ENUM"]
try:
    VK_BLEND_FACTOR_ONE = jvulkanLib.VK_BLEND_FACTOR_ONE
    #print("statd VK_BLEND_FACTOR_ONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_ONE"]
try:
    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA = jvulkanLib.VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA
    #print("statd VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA"]
try:
    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR = jvulkanLib.VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR
    #print("statd VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR"]
try:
    VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA = jvulkanLib.VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA
    #print("statd VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA"]
try:
    VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR = jvulkanLib.VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR
    #print("statd VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR"]
try:
    VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA = jvulkanLib.VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA
    #print("statd VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA"]
try:
    VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR = jvulkanLib.VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR
    #print("statd VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR"]
try:
    VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA = jvulkanLib.VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA
    #print("statd VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA"]
try:
    VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR = jvulkanLib.VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR
    #print("statd VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR"]
try:
    VK_BLEND_FACTOR_SRC1_ALPHA = jvulkanLib.VK_BLEND_FACTOR_SRC1_ALPHA
    #print("statd VK_BLEND_FACTOR_SRC1_ALPHA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_SRC1_ALPHA"]
try:
    VK_BLEND_FACTOR_SRC1_COLOR = jvulkanLib.VK_BLEND_FACTOR_SRC1_COLOR
    #print("statd VK_BLEND_FACTOR_SRC1_COLOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_SRC1_COLOR"]
try:
    VK_BLEND_FACTOR_SRC_ALPHA = jvulkanLib.VK_BLEND_FACTOR_SRC_ALPHA
    #print("statd VK_BLEND_FACTOR_SRC_ALPHA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_SRC_ALPHA"]
try:
    VK_BLEND_FACTOR_SRC_ALPHA_SATURATE = jvulkanLib.VK_BLEND_FACTOR_SRC_ALPHA_SATURATE
    #print("statd VK_BLEND_FACTOR_SRC_ALPHA_SATURATE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_SRC_ALPHA_SATURATE"]
try:
    VK_BLEND_FACTOR_SRC_COLOR = jvulkanLib.VK_BLEND_FACTOR_SRC_COLOR
    #print("statd VK_BLEND_FACTOR_SRC_COLOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_SRC_COLOR"]
try:
    VK_BLEND_FACTOR_ZERO = jvulkanLib.VK_BLEND_FACTOR_ZERO
    #print("statd VK_BLEND_FACTOR_ZERO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_FACTOR_ZERO"]
try:
    VK_BLEND_OP_ADD = jvulkanLib.VK_BLEND_OP_ADD
    #print("statd VK_BLEND_OP_ADD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_ADD"]
try:
    VK_BLEND_OP_BLUE_EXT = jvulkanLib.VK_BLEND_OP_BLUE_EXT
    #print("statd VK_BLEND_OP_BLUE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_BLUE_EXT"]
try:
    VK_BLEND_OP_COLORBURN_EXT = jvulkanLib.VK_BLEND_OP_COLORBURN_EXT
    #print("statd VK_BLEND_OP_COLORBURN_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_COLORBURN_EXT"]
try:
    VK_BLEND_OP_COLORDODGE_EXT = jvulkanLib.VK_BLEND_OP_COLORDODGE_EXT
    #print("statd VK_BLEND_OP_COLORDODGE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_COLORDODGE_EXT"]
try:
    VK_BLEND_OP_CONTRAST_EXT = jvulkanLib.VK_BLEND_OP_CONTRAST_EXT
    #print("statd VK_BLEND_OP_CONTRAST_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_CONTRAST_EXT"]
try:
    VK_BLEND_OP_DARKEN_EXT = jvulkanLib.VK_BLEND_OP_DARKEN_EXT
    #print("statd VK_BLEND_OP_DARKEN_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_DARKEN_EXT"]
try:
    VK_BLEND_OP_DIFFERENCE_EXT = jvulkanLib.VK_BLEND_OP_DIFFERENCE_EXT
    #print("statd VK_BLEND_OP_DIFFERENCE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_DIFFERENCE_EXT"]
try:
    VK_BLEND_OP_DST_ATOP_EXT = jvulkanLib.VK_BLEND_OP_DST_ATOP_EXT
    #print("statd VK_BLEND_OP_DST_ATOP_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_DST_ATOP_EXT"]
try:
    VK_BLEND_OP_DST_EXT = jvulkanLib.VK_BLEND_OP_DST_EXT
    #print("statd VK_BLEND_OP_DST_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_DST_EXT"]
try:
    VK_BLEND_OP_DST_IN_EXT = jvulkanLib.VK_BLEND_OP_DST_IN_EXT
    #print("statd VK_BLEND_OP_DST_IN_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_DST_IN_EXT"]
try:
    VK_BLEND_OP_DST_OUT_EXT = jvulkanLib.VK_BLEND_OP_DST_OUT_EXT
    #print("statd VK_BLEND_OP_DST_OUT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_DST_OUT_EXT"]
try:
    VK_BLEND_OP_DST_OVER_EXT = jvulkanLib.VK_BLEND_OP_DST_OVER_EXT
    #print("statd VK_BLEND_OP_DST_OVER_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_DST_OVER_EXT"]
try:
    VK_BLEND_OP_EXCLUSION_EXT = jvulkanLib.VK_BLEND_OP_EXCLUSION_EXT
    #print("statd VK_BLEND_OP_EXCLUSION_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_EXCLUSION_EXT"]
try:
    VK_BLEND_OP_GREEN_EXT = jvulkanLib.VK_BLEND_OP_GREEN_EXT
    #print("statd VK_BLEND_OP_GREEN_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_GREEN_EXT"]
try:
    VK_BLEND_OP_HARDLIGHT_EXT = jvulkanLib.VK_BLEND_OP_HARDLIGHT_EXT
    #print("statd VK_BLEND_OP_HARDLIGHT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_HARDLIGHT_EXT"]
try:
    VK_BLEND_OP_HARDMIX_EXT = jvulkanLib.VK_BLEND_OP_HARDMIX_EXT
    #print("statd VK_BLEND_OP_HARDMIX_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_HARDMIX_EXT"]
try:
    VK_BLEND_OP_HSL_COLOR_EXT = jvulkanLib.VK_BLEND_OP_HSL_COLOR_EXT
    #print("statd VK_BLEND_OP_HSL_COLOR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_HSL_COLOR_EXT"]
try:
    VK_BLEND_OP_HSL_HUE_EXT = jvulkanLib.VK_BLEND_OP_HSL_HUE_EXT
    #print("statd VK_BLEND_OP_HSL_HUE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_HSL_HUE_EXT"]
try:
    VK_BLEND_OP_HSL_LUMINOSITY_EXT = jvulkanLib.VK_BLEND_OP_HSL_LUMINOSITY_EXT
    #print("statd VK_BLEND_OP_HSL_LUMINOSITY_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_HSL_LUMINOSITY_EXT"]
try:
    VK_BLEND_OP_HSL_SATURATION_EXT = jvulkanLib.VK_BLEND_OP_HSL_SATURATION_EXT
    #print("statd VK_BLEND_OP_HSL_SATURATION_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_HSL_SATURATION_EXT"]
try:
    VK_BLEND_OP_INVERT_EXT = jvulkanLib.VK_BLEND_OP_INVERT_EXT
    #print("statd VK_BLEND_OP_INVERT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_INVERT_EXT"]
try:
    VK_BLEND_OP_INVERT_OVG_EXT = jvulkanLib.VK_BLEND_OP_INVERT_OVG_EXT
    #print("statd VK_BLEND_OP_INVERT_OVG_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_INVERT_OVG_EXT"]
try:
    VK_BLEND_OP_INVERT_RGB_EXT = jvulkanLib.VK_BLEND_OP_INVERT_RGB_EXT
    #print("statd VK_BLEND_OP_INVERT_RGB_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_INVERT_RGB_EXT"]
try:
    VK_BLEND_OP_LIGHTEN_EXT = jvulkanLib.VK_BLEND_OP_LIGHTEN_EXT
    #print("statd VK_BLEND_OP_LIGHTEN_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_LIGHTEN_EXT"]
try:
    VK_BLEND_OP_LINEARBURN_EXT = jvulkanLib.VK_BLEND_OP_LINEARBURN_EXT
    #print("statd VK_BLEND_OP_LINEARBURN_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_LINEARBURN_EXT"]
try:
    VK_BLEND_OP_LINEARDODGE_EXT = jvulkanLib.VK_BLEND_OP_LINEARDODGE_EXT
    #print("statd VK_BLEND_OP_LINEARDODGE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_LINEARDODGE_EXT"]
try:
    VK_BLEND_OP_LINEARLIGHT_EXT = jvulkanLib.VK_BLEND_OP_LINEARLIGHT_EXT
    #print("statd VK_BLEND_OP_LINEARLIGHT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_LINEARLIGHT_EXT"]
try:
    VK_BLEND_OP_MAX = jvulkanLib.VK_BLEND_OP_MAX
    #print("statd VK_BLEND_OP_MAX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_MAX"]
try:
    VK_BLEND_OP_MAX_ENUM = jvulkanLib.VK_BLEND_OP_MAX_ENUM
    #print("statd VK_BLEND_OP_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_MAX_ENUM"]
try:
    VK_BLEND_OP_MIN = jvulkanLib.VK_BLEND_OP_MIN
    #print("statd VK_BLEND_OP_MIN")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_MIN"]
try:
    VK_BLEND_OP_MINUS_CLAMPED_EXT = jvulkanLib.VK_BLEND_OP_MINUS_CLAMPED_EXT
    #print("statd VK_BLEND_OP_MINUS_CLAMPED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_MINUS_CLAMPED_EXT"]
try:
    VK_BLEND_OP_MINUS_EXT = jvulkanLib.VK_BLEND_OP_MINUS_EXT
    #print("statd VK_BLEND_OP_MINUS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_MINUS_EXT"]
try:
    VK_BLEND_OP_MULTIPLY_EXT = jvulkanLib.VK_BLEND_OP_MULTIPLY_EXT
    #print("statd VK_BLEND_OP_MULTIPLY_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_MULTIPLY_EXT"]
try:
    VK_BLEND_OP_OVERLAY_EXT = jvulkanLib.VK_BLEND_OP_OVERLAY_EXT
    #print("statd VK_BLEND_OP_OVERLAY_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_OVERLAY_EXT"]
try:
    VK_BLEND_OP_PINLIGHT_EXT = jvulkanLib.VK_BLEND_OP_PINLIGHT_EXT
    #print("statd VK_BLEND_OP_PINLIGHT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_PINLIGHT_EXT"]
try:
    VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT = jvulkanLib.VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT
    #print("statd VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT"]
try:
    VK_BLEND_OP_PLUS_CLAMPED_EXT = jvulkanLib.VK_BLEND_OP_PLUS_CLAMPED_EXT
    #print("statd VK_BLEND_OP_PLUS_CLAMPED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_PLUS_CLAMPED_EXT"]
try:
    VK_BLEND_OP_PLUS_DARKER_EXT = jvulkanLib.VK_BLEND_OP_PLUS_DARKER_EXT
    #print("statd VK_BLEND_OP_PLUS_DARKER_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_PLUS_DARKER_EXT"]
try:
    VK_BLEND_OP_PLUS_EXT = jvulkanLib.VK_BLEND_OP_PLUS_EXT
    #print("statd VK_BLEND_OP_PLUS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_PLUS_EXT"]
try:
    VK_BLEND_OP_RED_EXT = jvulkanLib.VK_BLEND_OP_RED_EXT
    #print("statd VK_BLEND_OP_RED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_RED_EXT"]
try:
    VK_BLEND_OP_REVERSE_SUBTRACT = jvulkanLib.VK_BLEND_OP_REVERSE_SUBTRACT
    #print("statd VK_BLEND_OP_REVERSE_SUBTRACT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_REVERSE_SUBTRACT"]
try:
    VK_BLEND_OP_SCREEN_EXT = jvulkanLib.VK_BLEND_OP_SCREEN_EXT
    #print("statd VK_BLEND_OP_SCREEN_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_SCREEN_EXT"]
try:
    VK_BLEND_OP_SOFTLIGHT_EXT = jvulkanLib.VK_BLEND_OP_SOFTLIGHT_EXT
    #print("statd VK_BLEND_OP_SOFTLIGHT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_SOFTLIGHT_EXT"]
try:
    VK_BLEND_OP_SRC_ATOP_EXT = jvulkanLib.VK_BLEND_OP_SRC_ATOP_EXT
    #print("statd VK_BLEND_OP_SRC_ATOP_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_SRC_ATOP_EXT"]
try:
    VK_BLEND_OP_SRC_EXT = jvulkanLib.VK_BLEND_OP_SRC_EXT
    #print("statd VK_BLEND_OP_SRC_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_SRC_EXT"]
try:
    VK_BLEND_OP_SRC_IN_EXT = jvulkanLib.VK_BLEND_OP_SRC_IN_EXT
    #print("statd VK_BLEND_OP_SRC_IN_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_SRC_IN_EXT"]
try:
    VK_BLEND_OP_SRC_OUT_EXT = jvulkanLib.VK_BLEND_OP_SRC_OUT_EXT
    #print("statd VK_BLEND_OP_SRC_OUT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_SRC_OUT_EXT"]
try:
    VK_BLEND_OP_SRC_OVER_EXT = jvulkanLib.VK_BLEND_OP_SRC_OVER_EXT
    #print("statd VK_BLEND_OP_SRC_OVER_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_SRC_OVER_EXT"]
try:
    VK_BLEND_OP_SUBTRACT = jvulkanLib.VK_BLEND_OP_SUBTRACT
    #print("statd VK_BLEND_OP_SUBTRACT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_SUBTRACT"]
try:
    VK_BLEND_OP_VIVIDLIGHT_EXT = jvulkanLib.VK_BLEND_OP_VIVIDLIGHT_EXT
    #print("statd VK_BLEND_OP_VIVIDLIGHT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_VIVIDLIGHT_EXT"]
try:
    VK_BLEND_OP_XOR_EXT = jvulkanLib.VK_BLEND_OP_XOR_EXT
    #print("statd VK_BLEND_OP_XOR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_XOR_EXT"]
try:
    VK_BLEND_OP_ZERO_EXT = jvulkanLib.VK_BLEND_OP_ZERO_EXT
    #print("statd VK_BLEND_OP_ZERO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OP_ZERO_EXT"]
try:
    VK_BLEND_OVERLAP_CONJOINT_EXT = jvulkanLib.VK_BLEND_OVERLAP_CONJOINT_EXT
    #print("statd VK_BLEND_OVERLAP_CONJOINT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OVERLAP_CONJOINT_EXT"]
try:
    VK_BLEND_OVERLAP_DISJOINT_EXT = jvulkanLib.VK_BLEND_OVERLAP_DISJOINT_EXT
    #print("statd VK_BLEND_OVERLAP_DISJOINT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OVERLAP_DISJOINT_EXT"]
try:
    VK_BLEND_OVERLAP_MAX_ENUM_EXT = jvulkanLib.VK_BLEND_OVERLAP_MAX_ENUM_EXT
    #print("statd VK_BLEND_OVERLAP_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OVERLAP_MAX_ENUM_EXT"]
try:
    VK_BLEND_OVERLAP_UNCORRELATED_EXT = jvulkanLib.VK_BLEND_OVERLAP_UNCORRELATED_EXT
    #print("statd VK_BLEND_OVERLAP_UNCORRELATED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BLEND_OVERLAP_UNCORRELATED_EXT"]
try:
    VK_BORDER_COLOR_FLOAT_CUSTOM_EXT = jvulkanLib.VK_BORDER_COLOR_FLOAT_CUSTOM_EXT
    #print("statd VK_BORDER_COLOR_FLOAT_CUSTOM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BORDER_COLOR_FLOAT_CUSTOM_EXT"]
try:
    VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK = jvulkanLib.VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK
    #print("statd VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK"]
try:
    VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE = jvulkanLib.VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE
    #print("statd VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE"]
try:
    VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK = jvulkanLib.VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK
    #print("statd VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK"]
try:
    VK_BORDER_COLOR_INT_CUSTOM_EXT = jvulkanLib.VK_BORDER_COLOR_INT_CUSTOM_EXT
    #print("statd VK_BORDER_COLOR_INT_CUSTOM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BORDER_COLOR_INT_CUSTOM_EXT"]
try:
    VK_BORDER_COLOR_INT_OPAQUE_BLACK = jvulkanLib.VK_BORDER_COLOR_INT_OPAQUE_BLACK
    #print("statd VK_BORDER_COLOR_INT_OPAQUE_BLACK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BORDER_COLOR_INT_OPAQUE_BLACK"]
try:
    VK_BORDER_COLOR_INT_OPAQUE_WHITE = jvulkanLib.VK_BORDER_COLOR_INT_OPAQUE_WHITE
    #print("statd VK_BORDER_COLOR_INT_OPAQUE_WHITE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BORDER_COLOR_INT_OPAQUE_WHITE"]
try:
    VK_BORDER_COLOR_INT_TRANSPARENT_BLACK = jvulkanLib.VK_BORDER_COLOR_INT_TRANSPARENT_BLACK
    #print("statd VK_BORDER_COLOR_INT_TRANSPARENT_BLACK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BORDER_COLOR_INT_TRANSPARENT_BLACK"]
try:
    VK_BORDER_COLOR_MAX_ENUM = jvulkanLib.VK_BORDER_COLOR_MAX_ENUM
    #print("statd VK_BORDER_COLOR_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BORDER_COLOR_MAX_ENUM"]
try:
    VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT = jvulkanLib.VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT
    #print("statd VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT"]
try:
    VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT = jvulkanLib.VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT
    #print("statd VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT"]
try:
    VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR = jvulkanLib.VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR
    #print("statd VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR"]
try:
    VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_BUFFER_CREATE_PROTECTED_BIT = jvulkanLib.VK_BUFFER_CREATE_PROTECTED_BIT
    #print("statd VK_BUFFER_CREATE_PROTECTED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_CREATE_PROTECTED_BIT"]
try:
    VK_BUFFER_CREATE_SPARSE_ALIASED_BIT = jvulkanLib.VK_BUFFER_CREATE_SPARSE_ALIASED_BIT
    #print("statd VK_BUFFER_CREATE_SPARSE_ALIASED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_CREATE_SPARSE_ALIASED_BIT"]
try:
    VK_BUFFER_CREATE_SPARSE_BINDING_BIT = jvulkanLib.VK_BUFFER_CREATE_SPARSE_BINDING_BIT
    #print("statd VK_BUFFER_CREATE_SPARSE_BINDING_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_CREATE_SPARSE_BINDING_BIT"]
try:
    VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT = jvulkanLib.VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT
    #print("statd VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT"]
try:
    VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR = jvulkanLib.VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR
    #print("statd VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR"]
try:
    VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR = jvulkanLib.VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR
    #print("statd VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR"]
try:
    VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT = jvulkanLib.VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT
    #print("statd VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT"]
try:
    VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM
    #print("statd VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM"]
try:
    VK_BUFFER_USAGE_INDEX_BUFFER_BIT = jvulkanLib.VK_BUFFER_USAGE_INDEX_BUFFER_BIT
    #print("statd VK_BUFFER_USAGE_INDEX_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_INDEX_BUFFER_BIT"]
try:
    VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT = jvulkanLib.VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT
    #print("statd VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT"]
try:
    VK_BUFFER_USAGE_RAY_TRACING_BIT_NV = jvulkanLib.VK_BUFFER_USAGE_RAY_TRACING_BIT_NV
    #print("statd VK_BUFFER_USAGE_RAY_TRACING_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_RAY_TRACING_BIT_NV"]
try:
    VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR = jvulkanLib.VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR
    #print("statd VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR"]
try:
    VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT = jvulkanLib.VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT
    #print("statd VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT"]
try:
    VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT = jvulkanLib.VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT
    #print("statd VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT"]
try:
    VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR = jvulkanLib.VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR
    #print("statd VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR"]
try:
    VK_BUFFER_USAGE_STORAGE_BUFFER_BIT = jvulkanLib.VK_BUFFER_USAGE_STORAGE_BUFFER_BIT
    #print("statd VK_BUFFER_USAGE_STORAGE_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_STORAGE_BUFFER_BIT"]
try:
    VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT = jvulkanLib.VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT
    #print("statd VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT"]
try:
    VK_BUFFER_USAGE_TRANSFER_DST_BIT = jvulkanLib.VK_BUFFER_USAGE_TRANSFER_DST_BIT
    #print("statd VK_BUFFER_USAGE_TRANSFER_DST_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_TRANSFER_DST_BIT"]
try:
    VK_BUFFER_USAGE_TRANSFER_SRC_BIT = jvulkanLib.VK_BUFFER_USAGE_TRANSFER_SRC_BIT
    #print("statd VK_BUFFER_USAGE_TRANSFER_SRC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_TRANSFER_SRC_BIT"]
try:
    VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT = jvulkanLib.VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT
    #print("statd VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT"]
try:
    VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT = jvulkanLib.VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT
    #print("statd VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT"]
try:
    VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT = jvulkanLib.VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT
    #print("statd VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT"]
try:
    VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT = jvulkanLib.VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT
    #print("statd VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT"]
try:
    VK_BUFFER_USAGE_VERTEX_BUFFER_BIT = jvulkanLib.VK_BUFFER_USAGE_VERTEX_BUFFER_BIT
    #print("statd VK_BUFFER_USAGE_VERTEX_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUFFER_USAGE_VERTEX_BUFFER_BIT"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR"]
try:
    VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV = jvulkanLib.VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV
    #print("statd VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV"]
try:
    VK_CHROMA_LOCATION_COSITED_EVEN = jvulkanLib.VK_CHROMA_LOCATION_COSITED_EVEN
    #print("statd VK_CHROMA_LOCATION_COSITED_EVEN")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CHROMA_LOCATION_COSITED_EVEN"]
try:
    VK_CHROMA_LOCATION_COSITED_EVEN_KHR = jvulkanLib.VK_CHROMA_LOCATION_COSITED_EVEN_KHR
    #print("statd VK_CHROMA_LOCATION_COSITED_EVEN_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CHROMA_LOCATION_COSITED_EVEN_KHR"]
try:
    VK_CHROMA_LOCATION_MAX_ENUM = jvulkanLib.VK_CHROMA_LOCATION_MAX_ENUM
    #print("statd VK_CHROMA_LOCATION_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CHROMA_LOCATION_MAX_ENUM"]
try:
    VK_CHROMA_LOCATION_MIDPOINT = jvulkanLib.VK_CHROMA_LOCATION_MIDPOINT
    #print("statd VK_CHROMA_LOCATION_MIDPOINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CHROMA_LOCATION_MIDPOINT"]
try:
    VK_CHROMA_LOCATION_MIDPOINT_KHR = jvulkanLib.VK_CHROMA_LOCATION_MIDPOINT_KHR
    #print("statd VK_CHROMA_LOCATION_MIDPOINT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CHROMA_LOCATION_MIDPOINT_KHR"]
try:
    VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV = jvulkanLib.VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV
    #print("statd VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV"]
try:
    VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV = jvulkanLib.VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV
    #print("statd VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV"]
try:
    VK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV = jvulkanLib.VK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV
    #print("statd VK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV"]
try:
    VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV = jvulkanLib.VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV
    #print("statd VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV"]
try:
    VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV = jvulkanLib.VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV
    #print("statd VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV"]
try:
    VK_COLORSPACE_SRGB_NONLINEAR_KHR = jvulkanLib.VK_COLORSPACE_SRGB_NONLINEAR_KHR
    #print("statd VK_COLORSPACE_SRGB_NONLINEAR_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLORSPACE_SRGB_NONLINEAR_KHR"]
try:
    VK_COLOR_COMPONENT_A_BIT = jvulkanLib.VK_COLOR_COMPONENT_A_BIT
    #print("statd VK_COLOR_COMPONENT_A_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_COMPONENT_A_BIT"]
try:
    VK_COLOR_COMPONENT_B_BIT = jvulkanLib.VK_COLOR_COMPONENT_B_BIT
    #print("statd VK_COLOR_COMPONENT_B_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_COMPONENT_B_BIT"]
try:
    VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM
    #print("statd VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM"]
try:
    VK_COLOR_COMPONENT_G_BIT = jvulkanLib.VK_COLOR_COMPONENT_G_BIT
    #print("statd VK_COLOR_COMPONENT_G_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_COMPONENT_G_BIT"]
try:
    VK_COLOR_COMPONENT_R_BIT = jvulkanLib.VK_COLOR_COMPONENT_R_BIT
    #print("statd VK_COLOR_COMPONENT_R_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_COMPONENT_R_BIT"]
try:
    VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT
    #print("statd VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT"]
try:
    VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT
    #print("statd VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT"]
try:
    VK_COLOR_SPACE_BT2020_LINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_BT2020_LINEAR_EXT
    #print("statd VK_COLOR_SPACE_BT2020_LINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_BT2020_LINEAR_EXT"]
try:
    VK_COLOR_SPACE_BT709_LINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_BT709_LINEAR_EXT
    #print("statd VK_COLOR_SPACE_BT709_LINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_BT709_LINEAR_EXT"]
try:
    VK_COLOR_SPACE_BT709_NONLINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_BT709_NONLINEAR_EXT
    #print("statd VK_COLOR_SPACE_BT709_NONLINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_BT709_NONLINEAR_EXT"]
try:
    VK_COLOR_SPACE_DCI_P3_LINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_DCI_P3_LINEAR_EXT
    #print("statd VK_COLOR_SPACE_DCI_P3_LINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_DCI_P3_LINEAR_EXT"]
try:
    VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT
    #print("statd VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT"]
try:
    VK_COLOR_SPACE_DISPLAY_NATIVE_AMD = jvulkanLib.VK_COLOR_SPACE_DISPLAY_NATIVE_AMD
    #print("statd VK_COLOR_SPACE_DISPLAY_NATIVE_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_DISPLAY_NATIVE_AMD"]
try:
    VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT
    #print("statd VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT"]
try:
    VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT
    #print("statd VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT"]
try:
    VK_COLOR_SPACE_DOLBYVISION_EXT = jvulkanLib.VK_COLOR_SPACE_DOLBYVISION_EXT
    #print("statd VK_COLOR_SPACE_DOLBYVISION_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_DOLBYVISION_EXT"]
try:
    VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT
    #print("statd VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT"]
try:
    VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT = jvulkanLib.VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT
    #print("statd VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT"]
try:
    VK_COLOR_SPACE_HDR10_HLG_EXT = jvulkanLib.VK_COLOR_SPACE_HDR10_HLG_EXT
    #print("statd VK_COLOR_SPACE_HDR10_HLG_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_HDR10_HLG_EXT"]
try:
    VK_COLOR_SPACE_HDR10_ST2084_EXT = jvulkanLib.VK_COLOR_SPACE_HDR10_ST2084_EXT
    #print("statd VK_COLOR_SPACE_HDR10_ST2084_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_HDR10_ST2084_EXT"]
try:
    VK_COLOR_SPACE_MAX_ENUM_KHR = jvulkanLib.VK_COLOR_SPACE_MAX_ENUM_KHR
    #print("statd VK_COLOR_SPACE_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_MAX_ENUM_KHR"]
try:
    VK_COLOR_SPACE_PASS_THROUGH_EXT = jvulkanLib.VK_COLOR_SPACE_PASS_THROUGH_EXT
    #print("statd VK_COLOR_SPACE_PASS_THROUGH_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_PASS_THROUGH_EXT"]
try:
    VK_COLOR_SPACE_SRGB_NONLINEAR_KHR = jvulkanLib.VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
    #print("statd VK_COLOR_SPACE_SRGB_NONLINEAR_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COLOR_SPACE_SRGB_NONLINEAR_KHR"]
try:
    VK_COMMAND_BUFFER_LEVEL_MAX_ENUM = jvulkanLib.VK_COMMAND_BUFFER_LEVEL_MAX_ENUM
    #print("statd VK_COMMAND_BUFFER_LEVEL_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_BUFFER_LEVEL_MAX_ENUM"]
try:
    VK_COMMAND_BUFFER_LEVEL_PRIMARY = jvulkanLib.VK_COMMAND_BUFFER_LEVEL_PRIMARY
    #print("statd VK_COMMAND_BUFFER_LEVEL_PRIMARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_BUFFER_LEVEL_PRIMARY"]
try:
    VK_COMMAND_BUFFER_LEVEL_SECONDARY = jvulkanLib.VK_COMMAND_BUFFER_LEVEL_SECONDARY
    #print("statd VK_COMMAND_BUFFER_LEVEL_SECONDARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_BUFFER_LEVEL_SECONDARY"]
try:
    VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM
    #print("statd VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM"]
try:
    VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT = jvulkanLib.VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT
    #print("statd VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT"]
try:
    VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM
    #print("statd VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM"]
try:
    VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT = jvulkanLib.VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT
    #print("statd VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT"]
try:
    VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT = jvulkanLib.VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT
    #print("statd VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT"]
try:
    VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT = jvulkanLib.VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT
    #print("statd VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT"]
try:
    VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_COMMAND_POOL_CREATE_PROTECTED_BIT = jvulkanLib.VK_COMMAND_POOL_CREATE_PROTECTED_BIT
    #print("statd VK_COMMAND_POOL_CREATE_PROTECTED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_POOL_CREATE_PROTECTED_BIT"]
try:
    VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT = jvulkanLib.VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT
    #print("statd VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT"]
try:
    VK_COMMAND_POOL_CREATE_TRANSIENT_BIT = jvulkanLib.VK_COMMAND_POOL_CREATE_TRANSIENT_BIT
    #print("statd VK_COMMAND_POOL_CREATE_TRANSIENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_POOL_CREATE_TRANSIENT_BIT"]
try:
    VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM
    #print("statd VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM"]
try:
    VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT = jvulkanLib.VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT
    #print("statd VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT"]
try:
    VK_COMPARE_OP_ALWAYS = jvulkanLib.VK_COMPARE_OP_ALWAYS
    #print("statd VK_COMPARE_OP_ALWAYS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPARE_OP_ALWAYS"]
try:
    VK_COMPARE_OP_EQUAL = jvulkanLib.VK_COMPARE_OP_EQUAL
    #print("statd VK_COMPARE_OP_EQUAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPARE_OP_EQUAL"]
try:
    VK_COMPARE_OP_GREATER = jvulkanLib.VK_COMPARE_OP_GREATER
    #print("statd VK_COMPARE_OP_GREATER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPARE_OP_GREATER"]
try:
    VK_COMPARE_OP_GREATER_OR_EQUAL = jvulkanLib.VK_COMPARE_OP_GREATER_OR_EQUAL
    #print("statd VK_COMPARE_OP_GREATER_OR_EQUAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPARE_OP_GREATER_OR_EQUAL"]
try:
    VK_COMPARE_OP_LESS = jvulkanLib.VK_COMPARE_OP_LESS
    #print("statd VK_COMPARE_OP_LESS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPARE_OP_LESS"]
try:
    VK_COMPARE_OP_LESS_OR_EQUAL = jvulkanLib.VK_COMPARE_OP_LESS_OR_EQUAL
    #print("statd VK_COMPARE_OP_LESS_OR_EQUAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPARE_OP_LESS_OR_EQUAL"]
try:
    VK_COMPARE_OP_MAX_ENUM = jvulkanLib.VK_COMPARE_OP_MAX_ENUM
    #print("statd VK_COMPARE_OP_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPARE_OP_MAX_ENUM"]
try:
    VK_COMPARE_OP_NEVER = jvulkanLib.VK_COMPARE_OP_NEVER
    #print("statd VK_COMPARE_OP_NEVER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPARE_OP_NEVER"]
try:
    VK_COMPARE_OP_NOT_EQUAL = jvulkanLib.VK_COMPARE_OP_NOT_EQUAL
    #print("statd VK_COMPARE_OP_NOT_EQUAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPARE_OP_NOT_EQUAL"]
try:
    VK_COMPONENT_SWIZZLE_A = jvulkanLib.VK_COMPONENT_SWIZZLE_A
    #print("statd VK_COMPONENT_SWIZZLE_A")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_SWIZZLE_A"]
try:
    VK_COMPONENT_SWIZZLE_B = jvulkanLib.VK_COMPONENT_SWIZZLE_B
    #print("statd VK_COMPONENT_SWIZZLE_B")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_SWIZZLE_B"]
try:
    VK_COMPONENT_SWIZZLE_G = jvulkanLib.VK_COMPONENT_SWIZZLE_G
    #print("statd VK_COMPONENT_SWIZZLE_G")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_SWIZZLE_G"]
try:
    VK_COMPONENT_SWIZZLE_IDENTITY = jvulkanLib.VK_COMPONENT_SWIZZLE_IDENTITY
    #print("statd VK_COMPONENT_SWIZZLE_IDENTITY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_SWIZZLE_IDENTITY"]
try:
    VK_COMPONENT_SWIZZLE_MAX_ENUM = jvulkanLib.VK_COMPONENT_SWIZZLE_MAX_ENUM
    #print("statd VK_COMPONENT_SWIZZLE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_SWIZZLE_MAX_ENUM"]
try:
    VK_COMPONENT_SWIZZLE_ONE = jvulkanLib.VK_COMPONENT_SWIZZLE_ONE
    #print("statd VK_COMPONENT_SWIZZLE_ONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_SWIZZLE_ONE"]
try:
    VK_COMPONENT_SWIZZLE_R = jvulkanLib.VK_COMPONENT_SWIZZLE_R
    #print("statd VK_COMPONENT_SWIZZLE_R")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_SWIZZLE_R"]
try:
    VK_COMPONENT_SWIZZLE_ZERO = jvulkanLib.VK_COMPONENT_SWIZZLE_ZERO
    #print("statd VK_COMPONENT_SWIZZLE_ZERO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_SWIZZLE_ZERO"]
try:
    VK_COMPONENT_TYPE_FLOAT16_NV = jvulkanLib.VK_COMPONENT_TYPE_FLOAT16_NV
    #print("statd VK_COMPONENT_TYPE_FLOAT16_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_FLOAT16_NV"]
try:
    VK_COMPONENT_TYPE_FLOAT32_NV = jvulkanLib.VK_COMPONENT_TYPE_FLOAT32_NV
    #print("statd VK_COMPONENT_TYPE_FLOAT32_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_FLOAT32_NV"]
try:
    VK_COMPONENT_TYPE_FLOAT64_NV = jvulkanLib.VK_COMPONENT_TYPE_FLOAT64_NV
    #print("statd VK_COMPONENT_TYPE_FLOAT64_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_FLOAT64_NV"]
try:
    VK_COMPONENT_TYPE_MAX_ENUM_NV = jvulkanLib.VK_COMPONENT_TYPE_MAX_ENUM_NV
    #print("statd VK_COMPONENT_TYPE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_MAX_ENUM_NV"]
try:
    VK_COMPONENT_TYPE_SINT16_NV = jvulkanLib.VK_COMPONENT_TYPE_SINT16_NV
    #print("statd VK_COMPONENT_TYPE_SINT16_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_SINT16_NV"]
try:
    VK_COMPONENT_TYPE_SINT32_NV = jvulkanLib.VK_COMPONENT_TYPE_SINT32_NV
    #print("statd VK_COMPONENT_TYPE_SINT32_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_SINT32_NV"]
try:
    VK_COMPONENT_TYPE_SINT64_NV = jvulkanLib.VK_COMPONENT_TYPE_SINT64_NV
    #print("statd VK_COMPONENT_TYPE_SINT64_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_SINT64_NV"]
try:
    VK_COMPONENT_TYPE_SINT8_NV = jvulkanLib.VK_COMPONENT_TYPE_SINT8_NV
    #print("statd VK_COMPONENT_TYPE_SINT8_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_SINT8_NV"]
try:
    VK_COMPONENT_TYPE_UINT16_NV = jvulkanLib.VK_COMPONENT_TYPE_UINT16_NV
    #print("statd VK_COMPONENT_TYPE_UINT16_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_UINT16_NV"]
try:
    VK_COMPONENT_TYPE_UINT32_NV = jvulkanLib.VK_COMPONENT_TYPE_UINT32_NV
    #print("statd VK_COMPONENT_TYPE_UINT32_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_UINT32_NV"]
try:
    VK_COMPONENT_TYPE_UINT64_NV = jvulkanLib.VK_COMPONENT_TYPE_UINT64_NV
    #print("statd VK_COMPONENT_TYPE_UINT64_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_UINT64_NV"]
try:
    VK_COMPONENT_TYPE_UINT8_NV = jvulkanLib.VK_COMPONENT_TYPE_UINT8_NV
    #print("statd VK_COMPONENT_TYPE_UINT8_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPONENT_TYPE_UINT8_NV"]
try:
    VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR = jvulkanLib.VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR
    #print("statd VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR"]
try:
    VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR = jvulkanLib.VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR
    #print("statd VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR"]
try:
    VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR = jvulkanLib.VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR
    #print("statd VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR"]
try:
    VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR = jvulkanLib.VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR
    #print("statd VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR"]
try:
    VK_CONDITIONAL_RENDERING_FLAG_BITS_MAX_ENUM_EXT = jvulkanLib.VK_CONDITIONAL_RENDERING_FLAG_BITS_MAX_ENUM_EXT
    #print("statd VK_CONDITIONAL_RENDERING_FLAG_BITS_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CONDITIONAL_RENDERING_FLAG_BITS_MAX_ENUM_EXT"]
try:
    VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT = jvulkanLib.VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT
    #print("statd VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT"]
try:
    VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT = jvulkanLib.VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT
    #print("statd VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT"]
try:
    VK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT = jvulkanLib.VK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT
    #print("statd VK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT"]
try:
    VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT = jvulkanLib.VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT
    #print("statd VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT"]
try:
    VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT = jvulkanLib.VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT
    #print("statd VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT"]
try:
    VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR = jvulkanLib.VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR
    #print("statd VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR"]
try:
    VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV = jvulkanLib.VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV
    #print("statd VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV"]
try:
    VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR = jvulkanLib.VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR
    #print("statd VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR"]
try:
    VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV = jvulkanLib.VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV
    #print("statd VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV"]
try:
    VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR = jvulkanLib.VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR
    #print("statd VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR"]
try:
    VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR = jvulkanLib.VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR
    #print("statd VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR"]
try:
    VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR = jvulkanLib.VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR
    #print("statd VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR"]
try:
    VK_COVERAGE_MODULATION_MODE_ALPHA_NV = jvulkanLib.VK_COVERAGE_MODULATION_MODE_ALPHA_NV
    #print("statd VK_COVERAGE_MODULATION_MODE_ALPHA_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COVERAGE_MODULATION_MODE_ALPHA_NV"]
try:
    VK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV = jvulkanLib.VK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV
    #print("statd VK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV"]
try:
    VK_COVERAGE_MODULATION_MODE_NONE_NV = jvulkanLib.VK_COVERAGE_MODULATION_MODE_NONE_NV
    #print("statd VK_COVERAGE_MODULATION_MODE_NONE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COVERAGE_MODULATION_MODE_NONE_NV"]
try:
    VK_COVERAGE_MODULATION_MODE_RGBA_NV = jvulkanLib.VK_COVERAGE_MODULATION_MODE_RGBA_NV
    #print("statd VK_COVERAGE_MODULATION_MODE_RGBA_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COVERAGE_MODULATION_MODE_RGBA_NV"]
try:
    VK_COVERAGE_MODULATION_MODE_RGB_NV = jvulkanLib.VK_COVERAGE_MODULATION_MODE_RGB_NV
    #print("statd VK_COVERAGE_MODULATION_MODE_RGB_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COVERAGE_MODULATION_MODE_RGB_NV"]
try:
    VK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV = jvulkanLib.VK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV
    #print("statd VK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV"]
try:
    VK_COVERAGE_REDUCTION_MODE_MERGE_NV = jvulkanLib.VK_COVERAGE_REDUCTION_MODE_MERGE_NV
    #print("statd VK_COVERAGE_REDUCTION_MODE_MERGE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COVERAGE_REDUCTION_MODE_MERGE_NV"]
try:
    VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV = jvulkanLib.VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV
    #print("statd VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV"]
try:
    VK_CULL_MODE_BACK_BIT = jvulkanLib.VK_CULL_MODE_BACK_BIT
    #print("statd VK_CULL_MODE_BACK_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CULL_MODE_BACK_BIT"]
try:
    VK_CULL_MODE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_CULL_MODE_FLAG_BITS_MAX_ENUM
    #print("statd VK_CULL_MODE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CULL_MODE_FLAG_BITS_MAX_ENUM"]
try:
    VK_CULL_MODE_FRONT_AND_BACK = jvulkanLib.VK_CULL_MODE_FRONT_AND_BACK
    #print("statd VK_CULL_MODE_FRONT_AND_BACK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CULL_MODE_FRONT_AND_BACK"]
try:
    VK_CULL_MODE_FRONT_BIT = jvulkanLib.VK_CULL_MODE_FRONT_BIT
    #print("statd VK_CULL_MODE_FRONT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CULL_MODE_FRONT_BIT"]
try:
    VK_CULL_MODE_NONE = jvulkanLib.VK_CULL_MODE_NONE
    #print("statd VK_CULL_MODE_NONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_CULL_MODE_NONE"]
try:
    VK_DEBUG_REPORT_DEBUG_BIT_EXT = jvulkanLib.VK_DEBUG_REPORT_DEBUG_BIT_EXT
    #print("statd VK_DEBUG_REPORT_DEBUG_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_DEBUG_BIT_EXT"]
try:
    VK_DEBUG_REPORT_ERROR_BIT_EXT = jvulkanLib.VK_DEBUG_REPORT_ERROR_BIT_EXT
    #print("statd VK_DEBUG_REPORT_ERROR_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_ERROR_BIT_EXT"]
try:
    VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT = jvulkanLib.VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT
    #print("statd VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT"]
try:
    VK_DEBUG_REPORT_INFORMATION_BIT_EXT = jvulkanLib.VK_DEBUG_REPORT_INFORMATION_BIT_EXT
    #print("statd VK_DEBUG_REPORT_INFORMATION_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_INFORMATION_BIT_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT"]
try:
    VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT = jvulkanLib.VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT
    #print("statd VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT"]
try:
    VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT = jvulkanLib.VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT
    #print("statd VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT"]
try:
    VK_DEBUG_REPORT_WARNING_BIT_EXT = jvulkanLib.VK_DEBUG_REPORT_WARNING_BIT_EXT
    #print("statd VK_DEBUG_REPORT_WARNING_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_REPORT_WARNING_BIT_EXT"]
try:
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT = jvulkanLib.VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT
    #print("statd VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT"]
try:
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_FLAG_BITS_MAX_ENUM_EXT = jvulkanLib.VK_DEBUG_UTILS_MESSAGE_SEVERITY_FLAG_BITS_MAX_ENUM_EXT
    #print("statd VK_DEBUG_UTILS_MESSAGE_SEVERITY_FLAG_BITS_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_UTILS_MESSAGE_SEVERITY_FLAG_BITS_MAX_ENUM_EXT"]
try:
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT = jvulkanLib.VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT
    #print("statd VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT"]
try:
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT = jvulkanLib.VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT
    #print("statd VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT"]
try:
    VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT = jvulkanLib.VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT
    #print("statd VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT"]
try:
    VK_DEBUG_UTILS_MESSAGE_TYPE_FLAG_BITS_MAX_ENUM_EXT = jvulkanLib.VK_DEBUG_UTILS_MESSAGE_TYPE_FLAG_BITS_MAX_ENUM_EXT
    #print("statd VK_DEBUG_UTILS_MESSAGE_TYPE_FLAG_BITS_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_UTILS_MESSAGE_TYPE_FLAG_BITS_MAX_ENUM_EXT"]
try:
    VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT = jvulkanLib.VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT
    #print("statd VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT"]
try:
    VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT = jvulkanLib.VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT
    #print("statd VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT"]
try:
    VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT = jvulkanLib.VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT
    #print("statd VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT"]
try:
    VK_DEPENDENCY_BY_REGION_BIT = jvulkanLib.VK_DEPENDENCY_BY_REGION_BIT
    #print("statd VK_DEPENDENCY_BY_REGION_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEPENDENCY_BY_REGION_BIT"]
try:
    VK_DEPENDENCY_DEVICE_GROUP_BIT = jvulkanLib.VK_DEPENDENCY_DEVICE_GROUP_BIT
    #print("statd VK_DEPENDENCY_DEVICE_GROUP_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEPENDENCY_DEVICE_GROUP_BIT"]
try:
    VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR = jvulkanLib.VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR
    #print("statd VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR"]
try:
    VK_DEPENDENCY_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_DEPENDENCY_FLAG_BITS_MAX_ENUM
    #print("statd VK_DEPENDENCY_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEPENDENCY_FLAG_BITS_MAX_ENUM"]
try:
    VK_DEPENDENCY_VIEW_LOCAL_BIT = jvulkanLib.VK_DEPENDENCY_VIEW_LOCAL_BIT
    #print("statd VK_DEPENDENCY_VIEW_LOCAL_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEPENDENCY_VIEW_LOCAL_BIT"]
try:
    VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR = jvulkanLib.VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR
    #print("statd VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR"]
try:
    VK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM
    #print("statd VK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM"]
try:
    VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT = jvulkanLib.VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT
    #print("statd VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT"]
try:
    VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT = jvulkanLib.VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT
    #print("statd VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT"]
try:
    VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT = jvulkanLib.VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT
    #print("statd VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT"]
try:
    VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT = jvulkanLib.VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT
    #print("statd VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT"]
try:
    VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT = jvulkanLib.VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT
    #print("statd VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT"]
try:
    VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT = jvulkanLib.VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT
    #print("statd VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT"]
try:
    VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT = jvulkanLib.VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT
    #print("statd VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT"]
try:
    VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT = jvulkanLib.VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT
    #print("statd VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT"]
try:
    VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT = jvulkanLib.VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT
    #print("statd VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT"]
try:
    VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE = jvulkanLib.VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE
    #print("statd VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE"]
try:
    VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT = jvulkanLib.VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT
    #print("statd VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT"]
try:
    VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT = jvulkanLib.VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT
    #print("statd VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT"]
try:
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE = jvulkanLib.VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE
    #print("statd VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE"]
try:
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR = jvulkanLib.VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR
    #print("statd VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR"]
try:
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT = jvulkanLib.VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT
    #print("statd VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT"]
try:
    VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT = jvulkanLib.VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT
    #print("statd VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"]
try:
    VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR = jvulkanLib.VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR
    #print("statd VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR"]
try:
    VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV = jvulkanLib.VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV
    #print("statd VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV"]
try:
    VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = jvulkanLib.VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
    #print("statd VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER"]
try:
    VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK = jvulkanLib.VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK
    #print("statd VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK"]
try:
    VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT = jvulkanLib.VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT
    #print("statd VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT"]
try:
    VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT = jvulkanLib.VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT
    #print("statd VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT"]
try:
    VK_DESCRIPTOR_TYPE_MAX_ENUM = jvulkanLib.VK_DESCRIPTOR_TYPE_MAX_ENUM
    #print("statd VK_DESCRIPTOR_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_MAX_ENUM"]
try:
    VK_DESCRIPTOR_TYPE_MUTABLE_VALVE = jvulkanLib.VK_DESCRIPTOR_TYPE_MUTABLE_VALVE
    #print("statd VK_DESCRIPTOR_TYPE_MUTABLE_VALVE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_MUTABLE_VALVE"]
try:
    VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE = jvulkanLib.VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE
    #print("statd VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE"]
try:
    VK_DESCRIPTOR_TYPE_SAMPLER = jvulkanLib.VK_DESCRIPTOR_TYPE_SAMPLER
    #print("statd VK_DESCRIPTOR_TYPE_SAMPLER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_SAMPLER"]
try:
    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER = jvulkanLib.VK_DESCRIPTOR_TYPE_STORAGE_BUFFER
    #print("statd VK_DESCRIPTOR_TYPE_STORAGE_BUFFER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_STORAGE_BUFFER"]
try:
    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = jvulkanLib.VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC
    #print("statd VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC"]
try:
    VK_DESCRIPTOR_TYPE_STORAGE_IMAGE = jvulkanLib.VK_DESCRIPTOR_TYPE_STORAGE_IMAGE
    #print("statd VK_DESCRIPTOR_TYPE_STORAGE_IMAGE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_STORAGE_IMAGE"]
try:
    VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = jvulkanLib.VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER
    #print("statd VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER"]
try:
    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER = jvulkanLib.VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER
    #print("statd VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER"]
try:
    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = jvulkanLib.VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC
    #print("statd VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC"]
try:
    VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = jvulkanLib.VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER
    #print("statd VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER"]
try:
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET = jvulkanLib.VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET
    #print("statd VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET"]
try:
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR = jvulkanLib.VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR
    #print("statd VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR"]
try:
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM = jvulkanLib.VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM
    #print("statd VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM"]
try:
    VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR = jvulkanLib.VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
    #print("statd VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR"]
try:
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV = jvulkanLib.VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV
    #print("statd VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV"]
try:
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV = jvulkanLib.VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV
    #print("statd VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV"]
try:
    VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV = jvulkanLib.VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV
    #print("statd VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV"]
try:
    VK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV = jvulkanLib.VK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV
    #print("statd VK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV"]
try:
    VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT = jvulkanLib.VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT
    #print("statd VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT"]
try:
    VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT = jvulkanLib.VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT
    #print("statd VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT"]
try:
    VK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR = jvulkanLib.VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR
    #print("statd VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR"]
try:
    VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR = jvulkanLib.VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR
    #print("statd VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR"]
try:
    VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR = jvulkanLib.VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR
    #print("statd VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR"]
try:
    VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR = jvulkanLib.VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR
    #print("statd VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR"]
try:
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT = jvulkanLib.VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT
    #print("statd VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT"]
try:
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT = jvulkanLib.VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT
    #print("statd VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT"]
try:
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT = jvulkanLib.VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT
    #print("statd VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT"]
try:
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT = jvulkanLib.VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT
    #print("statd VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT"]
try:
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_MAX_ENUM_EXT = jvulkanLib.VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_MAX_ENUM_EXT
    #print("statd VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_MAX_ENUM_EXT"]
try:
    VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT = jvulkanLib.VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT
    #print("statd VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT"]
try:
    VK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT = jvulkanLib.VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT
    #print("statd VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT"]
try:
    VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT = jvulkanLib.VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT
    #print("statd VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT"]
try:
    VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT = jvulkanLib.VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT
    #print("statd VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT"]
try:
    VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT = jvulkanLib.VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT
    #print("statd VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT"]
try:
    VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT = jvulkanLib.VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT
    #print("statd VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT"]
try:
    VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT = jvulkanLib.VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT
    #print("statd VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT"]
try:
    VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR = jvulkanLib.VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR
    #print("statd VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR"]
try:
    VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR = jvulkanLib.VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR
    #print("statd VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR"]
try:
    VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR = jvulkanLib.VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR
    #print("statd VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR"]
try:
    VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR = jvulkanLib.VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR
    #print("statd VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR"]
try:
    VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT = jvulkanLib.VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT
    #print("statd VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT"]
try:
    VK_DISPLAY_POWER_STATE_OFF_EXT = jvulkanLib.VK_DISPLAY_POWER_STATE_OFF_EXT
    #print("statd VK_DISPLAY_POWER_STATE_OFF_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_POWER_STATE_OFF_EXT"]
try:
    VK_DISPLAY_POWER_STATE_ON_EXT = jvulkanLib.VK_DISPLAY_POWER_STATE_ON_EXT
    #print("statd VK_DISPLAY_POWER_STATE_ON_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_POWER_STATE_ON_EXT"]
try:
    VK_DISPLAY_POWER_STATE_SUSPEND_EXT = jvulkanLib.VK_DISPLAY_POWER_STATE_SUSPEND_EXT
    #print("statd VK_DISPLAY_POWER_STATE_SUSPEND_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DISPLAY_POWER_STATE_SUSPEND_EXT"]
try:
    VK_DRIVER_ID_AMD_OPEN_SOURCE = jvulkanLib.VK_DRIVER_ID_AMD_OPEN_SOURCE
    #print("statd VK_DRIVER_ID_AMD_OPEN_SOURCE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_AMD_OPEN_SOURCE"]
try:
    VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR = jvulkanLib.VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR
    #print("statd VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR"]
try:
    VK_DRIVER_ID_AMD_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_AMD_PROPRIETARY
    #print("statd VK_DRIVER_ID_AMD_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_AMD_PROPRIETARY"]
try:
    VK_DRIVER_ID_AMD_PROPRIETARY_KHR = jvulkanLib.VK_DRIVER_ID_AMD_PROPRIETARY_KHR
    #print("statd VK_DRIVER_ID_AMD_PROPRIETARY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_AMD_PROPRIETARY_KHR"]
try:
    VK_DRIVER_ID_ARM_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_ARM_PROPRIETARY
    #print("statd VK_DRIVER_ID_ARM_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_ARM_PROPRIETARY"]
try:
    VK_DRIVER_ID_ARM_PROPRIETARY_KHR = jvulkanLib.VK_DRIVER_ID_ARM_PROPRIETARY_KHR
    #print("statd VK_DRIVER_ID_ARM_PROPRIETARY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_ARM_PROPRIETARY_KHR"]
try:
    VK_DRIVER_ID_BROADCOM_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_BROADCOM_PROPRIETARY
    #print("statd VK_DRIVER_ID_BROADCOM_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_BROADCOM_PROPRIETARY"]
try:
    VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR = jvulkanLib.VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR
    #print("statd VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR"]
try:
    VK_DRIVER_ID_COREAVI_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_COREAVI_PROPRIETARY
    #print("statd VK_DRIVER_ID_COREAVI_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_COREAVI_PROPRIETARY"]
try:
    VK_DRIVER_ID_GGP_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_GGP_PROPRIETARY
    #print("statd VK_DRIVER_ID_GGP_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_GGP_PROPRIETARY"]
try:
    VK_DRIVER_ID_GGP_PROPRIETARY_KHR = jvulkanLib.VK_DRIVER_ID_GGP_PROPRIETARY_KHR
    #print("statd VK_DRIVER_ID_GGP_PROPRIETARY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_GGP_PROPRIETARY_KHR"]
try:
    VK_DRIVER_ID_GOOGLE_SWIFTSHADER = jvulkanLib.VK_DRIVER_ID_GOOGLE_SWIFTSHADER
    #print("statd VK_DRIVER_ID_GOOGLE_SWIFTSHADER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_GOOGLE_SWIFTSHADER"]
try:
    VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR = jvulkanLib.VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR
    #print("statd VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR"]
try:
    VK_DRIVER_ID_IMAGINATION_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_IMAGINATION_PROPRIETARY
    #print("statd VK_DRIVER_ID_IMAGINATION_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_IMAGINATION_PROPRIETARY"]
try:
    VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR = jvulkanLib.VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR
    #print("statd VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR"]
try:
    VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA = jvulkanLib.VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA
    #print("statd VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA"]
try:
    VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR = jvulkanLib.VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR
    #print("statd VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR"]
try:
    VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS = jvulkanLib.VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS
    #print("statd VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS"]
try:
    VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR = jvulkanLib.VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR
    #print("statd VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR"]
try:
    VK_DRIVER_ID_JUICE_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_JUICE_PROPRIETARY
    #print("statd VK_DRIVER_ID_JUICE_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_JUICE_PROPRIETARY"]
try:
    VK_DRIVER_ID_MAX_ENUM = jvulkanLib.VK_DRIVER_ID_MAX_ENUM
    #print("statd VK_DRIVER_ID_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_MAX_ENUM"]
try:
    VK_DRIVER_ID_MESA_LLVMPIPE = jvulkanLib.VK_DRIVER_ID_MESA_LLVMPIPE
    #print("statd VK_DRIVER_ID_MESA_LLVMPIPE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_MESA_LLVMPIPE"]
try:
    VK_DRIVER_ID_MESA_PANVK = jvulkanLib.VK_DRIVER_ID_MESA_PANVK
    #print("statd VK_DRIVER_ID_MESA_PANVK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_MESA_PANVK"]
try:
    VK_DRIVER_ID_MESA_RADV = jvulkanLib.VK_DRIVER_ID_MESA_RADV
    #print("statd VK_DRIVER_ID_MESA_RADV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_MESA_RADV"]
try:
    VK_DRIVER_ID_MESA_RADV_KHR = jvulkanLib.VK_DRIVER_ID_MESA_RADV_KHR
    #print("statd VK_DRIVER_ID_MESA_RADV_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_MESA_RADV_KHR"]
try:
    VK_DRIVER_ID_MESA_TURNIP = jvulkanLib.VK_DRIVER_ID_MESA_TURNIP
    #print("statd VK_DRIVER_ID_MESA_TURNIP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_MESA_TURNIP"]
try:
    VK_DRIVER_ID_MESA_V3DV = jvulkanLib.VK_DRIVER_ID_MESA_V3DV
    #print("statd VK_DRIVER_ID_MESA_V3DV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_MESA_V3DV"]
try:
    VK_DRIVER_ID_MESA_VENUS = jvulkanLib.VK_DRIVER_ID_MESA_VENUS
    #print("statd VK_DRIVER_ID_MESA_VENUS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_MESA_VENUS"]
try:
    VK_DRIVER_ID_MOLTENVK = jvulkanLib.VK_DRIVER_ID_MOLTENVK
    #print("statd VK_DRIVER_ID_MOLTENVK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_MOLTENVK"]
try:
    VK_DRIVER_ID_NVIDIA_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_NVIDIA_PROPRIETARY
    #print("statd VK_DRIVER_ID_NVIDIA_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_NVIDIA_PROPRIETARY"]
try:
    VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR = jvulkanLib.VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR
    #print("statd VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR"]
try:
    VK_DRIVER_ID_QUALCOMM_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_QUALCOMM_PROPRIETARY
    #print("statd VK_DRIVER_ID_QUALCOMM_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_QUALCOMM_PROPRIETARY"]
try:
    VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR = jvulkanLib.VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR
    #print("statd VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR"]
try:
    VK_DRIVER_ID_SAMSUNG_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_SAMSUNG_PROPRIETARY
    #print("statd VK_DRIVER_ID_SAMSUNG_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_SAMSUNG_PROPRIETARY"]
try:
    VK_DRIVER_ID_VERISILICON_PROPRIETARY = jvulkanLib.VK_DRIVER_ID_VERISILICON_PROPRIETARY
    #print("statd VK_DRIVER_ID_VERISILICON_PROPRIETARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DRIVER_ID_VERISILICON_PROPRIETARY"]
try:
    VK_DYNAMIC_STATE_BLEND_CONSTANTS = jvulkanLib.VK_DYNAMIC_STATE_BLEND_CONSTANTS
    #print("statd VK_DYNAMIC_STATE_BLEND_CONSTANTS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_BLEND_CONSTANTS"]
try:
    VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT = jvulkanLib.VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT
    #print("statd VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT"]
try:
    VK_DYNAMIC_STATE_CULL_MODE = jvulkanLib.VK_DYNAMIC_STATE_CULL_MODE
    #print("statd VK_DYNAMIC_STATE_CULL_MODE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_CULL_MODE"]
try:
    VK_DYNAMIC_STATE_CULL_MODE_EXT = jvulkanLib.VK_DYNAMIC_STATE_CULL_MODE_EXT
    #print("statd VK_DYNAMIC_STATE_CULL_MODE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_CULL_MODE_EXT"]
try:
    VK_DYNAMIC_STATE_DEPTH_BIAS = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_BIAS
    #print("statd VK_DYNAMIC_STATE_DEPTH_BIAS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_BIAS"]
try:
    VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE
    #print("statd VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE"]
try:
    VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT
    #print("statd VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT"]
try:
    VK_DYNAMIC_STATE_DEPTH_BOUNDS = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_BOUNDS
    #print("statd VK_DYNAMIC_STATE_DEPTH_BOUNDS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_BOUNDS"]
try:
    VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE
    #print("statd VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE"]
try:
    VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT
    #print("statd VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT"]
try:
    VK_DYNAMIC_STATE_DEPTH_COMPARE_OP = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_COMPARE_OP
    #print("statd VK_DYNAMIC_STATE_DEPTH_COMPARE_OP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_COMPARE_OP"]
try:
    VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT
    #print("statd VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT"]
try:
    VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE
    #print("statd VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE"]
try:
    VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT
    #print("statd VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT"]
try:
    VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE
    #print("statd VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE"]
try:
    VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT = jvulkanLib.VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT
    #print("statd VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT"]
try:
    VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT = jvulkanLib.VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT
    #print("statd VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT"]
try:
    VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV = jvulkanLib.VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV
    #print("statd VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV"]
try:
    VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR = jvulkanLib.VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR
    #print("statd VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR"]
try:
    VK_DYNAMIC_STATE_FRONT_FACE = jvulkanLib.VK_DYNAMIC_STATE_FRONT_FACE
    #print("statd VK_DYNAMIC_STATE_FRONT_FACE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_FRONT_FACE"]
try:
    VK_DYNAMIC_STATE_FRONT_FACE_EXT = jvulkanLib.VK_DYNAMIC_STATE_FRONT_FACE_EXT
    #print("statd VK_DYNAMIC_STATE_FRONT_FACE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_FRONT_FACE_EXT"]
try:
    VK_DYNAMIC_STATE_LINE_STIPPLE_EXT = jvulkanLib.VK_DYNAMIC_STATE_LINE_STIPPLE_EXT
    #print("statd VK_DYNAMIC_STATE_LINE_STIPPLE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_LINE_STIPPLE_EXT"]
try:
    VK_DYNAMIC_STATE_LINE_WIDTH = jvulkanLib.VK_DYNAMIC_STATE_LINE_WIDTH
    #print("statd VK_DYNAMIC_STATE_LINE_WIDTH")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_LINE_WIDTH"]
try:
    VK_DYNAMIC_STATE_LOGIC_OP_EXT = jvulkanLib.VK_DYNAMIC_STATE_LOGIC_OP_EXT
    #print("statd VK_DYNAMIC_STATE_LOGIC_OP_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_LOGIC_OP_EXT"]
try:
    VK_DYNAMIC_STATE_MAX_ENUM = jvulkanLib.VK_DYNAMIC_STATE_MAX_ENUM
    #print("statd VK_DYNAMIC_STATE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_MAX_ENUM"]
try:
    VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT = jvulkanLib.VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT
    #print("statd VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT"]
try:
    VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE = jvulkanLib.VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE
    #print("statd VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE"]
try:
    VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT = jvulkanLib.VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT
    #print("statd VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT"]
try:
    VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY = jvulkanLib.VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY
    #print("statd VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY"]
try:
    VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT = jvulkanLib.VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT
    #print("statd VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT"]
try:
    VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE = jvulkanLib.VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE
    #print("statd VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE"]
try:
    VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT = jvulkanLib.VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT
    #print("statd VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT"]
try:
    VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR = jvulkanLib.VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR
    #print("statd VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR"]
try:
    VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT = jvulkanLib.VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT
    #print("statd VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT"]
try:
    VK_DYNAMIC_STATE_SCISSOR = jvulkanLib.VK_DYNAMIC_STATE_SCISSOR
    #print("statd VK_DYNAMIC_STATE_SCISSOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_SCISSOR"]
try:
    VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT = jvulkanLib.VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT
    #print("statd VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT"]
try:
    VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT = jvulkanLib.VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT
    #print("statd VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT"]
try:
    VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK = jvulkanLib.VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK
    #print("statd VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK"]
try:
    VK_DYNAMIC_STATE_STENCIL_OP = jvulkanLib.VK_DYNAMIC_STATE_STENCIL_OP
    #print("statd VK_DYNAMIC_STATE_STENCIL_OP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_STENCIL_OP"]
try:
    VK_DYNAMIC_STATE_STENCIL_OP_EXT = jvulkanLib.VK_DYNAMIC_STATE_STENCIL_OP_EXT
    #print("statd VK_DYNAMIC_STATE_STENCIL_OP_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_STENCIL_OP_EXT"]
try:
    VK_DYNAMIC_STATE_STENCIL_REFERENCE = jvulkanLib.VK_DYNAMIC_STATE_STENCIL_REFERENCE
    #print("statd VK_DYNAMIC_STATE_STENCIL_REFERENCE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_STENCIL_REFERENCE"]
try:
    VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE = jvulkanLib.VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE
    #print("statd VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE"]
try:
    VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT = jvulkanLib.VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT
    #print("statd VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT"]
try:
    VK_DYNAMIC_STATE_STENCIL_WRITE_MASK = jvulkanLib.VK_DYNAMIC_STATE_STENCIL_WRITE_MASK
    #print("statd VK_DYNAMIC_STATE_STENCIL_WRITE_MASK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_STENCIL_WRITE_MASK"]
try:
    VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE = jvulkanLib.VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE
    #print("statd VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE"]
try:
    VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT = jvulkanLib.VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT
    #print("statd VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT"]
try:
    VK_DYNAMIC_STATE_VERTEX_INPUT_EXT = jvulkanLib.VK_DYNAMIC_STATE_VERTEX_INPUT_EXT
    #print("statd VK_DYNAMIC_STATE_VERTEX_INPUT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_VERTEX_INPUT_EXT"]
try:
    VK_DYNAMIC_STATE_VIEWPORT = jvulkanLib.VK_DYNAMIC_STATE_VIEWPORT
    #print("statd VK_DYNAMIC_STATE_VIEWPORT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_VIEWPORT"]
try:
    VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV = jvulkanLib.VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV
    #print("statd VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV"]
try:
    VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV = jvulkanLib.VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV
    #print("statd VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV"]
try:
    VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT = jvulkanLib.VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT
    #print("statd VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT"]
try:
    VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT = jvulkanLib.VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT
    #print("statd VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT"]
try:
    VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV = jvulkanLib.VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV
    #print("statd VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV"]
try:
    VK_ERROR_DEVICE_LOST = jvulkanLib.VK_ERROR_DEVICE_LOST
    #print("statd VK_ERROR_DEVICE_LOST")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_DEVICE_LOST"]
try:
    VK_ERROR_EXTENSION_NOT_PRESENT = jvulkanLib.VK_ERROR_EXTENSION_NOT_PRESENT
    #print("statd VK_ERROR_EXTENSION_NOT_PRESENT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_EXTENSION_NOT_PRESENT"]
try:
    VK_ERROR_FEATURE_NOT_PRESENT = jvulkanLib.VK_ERROR_FEATURE_NOT_PRESENT
    #print("statd VK_ERROR_FEATURE_NOT_PRESENT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_FEATURE_NOT_PRESENT"]
try:
    VK_ERROR_FORMAT_NOT_SUPPORTED = jvulkanLib.VK_ERROR_FORMAT_NOT_SUPPORTED
    #print("statd VK_ERROR_FORMAT_NOT_SUPPORTED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_FORMAT_NOT_SUPPORTED"]
try:
    VK_ERROR_FRAGMENTATION = jvulkanLib.VK_ERROR_FRAGMENTATION
    #print("statd VK_ERROR_FRAGMENTATION")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_FRAGMENTATION"]
try:
    VK_ERROR_FRAGMENTATION_EXT = jvulkanLib.VK_ERROR_FRAGMENTATION_EXT
    #print("statd VK_ERROR_FRAGMENTATION_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_FRAGMENTATION_EXT"]
try:
    VK_ERROR_FRAGMENTED_POOL = jvulkanLib.VK_ERROR_FRAGMENTED_POOL
    #print("statd VK_ERROR_FRAGMENTED_POOL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_FRAGMENTED_POOL"]
try:
    VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT = jvulkanLib.VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT
    #print("statd VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT"]
try:
    VK_ERROR_INCOMPATIBLE_DISPLAY_KHR = jvulkanLib.VK_ERROR_INCOMPATIBLE_DISPLAY_KHR
    #print("statd VK_ERROR_INCOMPATIBLE_DISPLAY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_INCOMPATIBLE_DISPLAY_KHR"]
try:
    VK_ERROR_INCOMPATIBLE_DRIVER = jvulkanLib.VK_ERROR_INCOMPATIBLE_DRIVER
    #print("statd VK_ERROR_INCOMPATIBLE_DRIVER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_INCOMPATIBLE_DRIVER"]
try:
    VK_ERROR_INITIALIZATION_FAILED = jvulkanLib.VK_ERROR_INITIALIZATION_FAILED
    #print("statd VK_ERROR_INITIALIZATION_FAILED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_INITIALIZATION_FAILED"]
try:
    VK_ERROR_INVALID_DEVICE_ADDRESS_EXT = jvulkanLib.VK_ERROR_INVALID_DEVICE_ADDRESS_EXT
    #print("statd VK_ERROR_INVALID_DEVICE_ADDRESS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_INVALID_DEVICE_ADDRESS_EXT"]
try:
    VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT = jvulkanLib.VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT
    #print("statd VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT"]
try:
    VK_ERROR_INVALID_EXTERNAL_HANDLE = jvulkanLib.VK_ERROR_INVALID_EXTERNAL_HANDLE
    #print("statd VK_ERROR_INVALID_EXTERNAL_HANDLE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_INVALID_EXTERNAL_HANDLE"]
try:
    VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR = jvulkanLib.VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR
    #print("statd VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR"]
try:
    VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS = jvulkanLib.VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS
    #print("statd VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS"]
try:
    VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR = jvulkanLib.VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR
    #print("statd VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR"]
try:
    VK_ERROR_INVALID_SHADER_NV = jvulkanLib.VK_ERROR_INVALID_SHADER_NV
    #print("statd VK_ERROR_INVALID_SHADER_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_INVALID_SHADER_NV"]
try:
    VK_ERROR_LAYER_NOT_PRESENT = jvulkanLib.VK_ERROR_LAYER_NOT_PRESENT
    #print("statd VK_ERROR_LAYER_NOT_PRESENT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_LAYER_NOT_PRESENT"]
try:
    VK_ERROR_MEMORY_MAP_FAILED = jvulkanLib.VK_ERROR_MEMORY_MAP_FAILED
    #print("statd VK_ERROR_MEMORY_MAP_FAILED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_MEMORY_MAP_FAILED"]
try:
    VK_ERROR_NATIVE_WINDOW_IN_USE_KHR = jvulkanLib.VK_ERROR_NATIVE_WINDOW_IN_USE_KHR
    #print("statd VK_ERROR_NATIVE_WINDOW_IN_USE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_NATIVE_WINDOW_IN_USE_KHR"]
try:
    VK_ERROR_NOT_PERMITTED_EXT = jvulkanLib.VK_ERROR_NOT_PERMITTED_EXT
    #print("statd VK_ERROR_NOT_PERMITTED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_NOT_PERMITTED_EXT"]
try:
    VK_ERROR_NOT_PERMITTED_KHR = jvulkanLib.VK_ERROR_NOT_PERMITTED_KHR
    #print("statd VK_ERROR_NOT_PERMITTED_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_NOT_PERMITTED_KHR"]
try:
    VK_ERROR_OUT_OF_DATE_KHR = jvulkanLib.VK_ERROR_OUT_OF_DATE_KHR
    #print("statd VK_ERROR_OUT_OF_DATE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_OUT_OF_DATE_KHR"]
try:
    VK_ERROR_OUT_OF_DEVICE_MEMORY = jvulkanLib.VK_ERROR_OUT_OF_DEVICE_MEMORY
    #print("statd VK_ERROR_OUT_OF_DEVICE_MEMORY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_OUT_OF_DEVICE_MEMORY"]
try:
    VK_ERROR_OUT_OF_HOST_MEMORY = jvulkanLib.VK_ERROR_OUT_OF_HOST_MEMORY
    #print("statd VK_ERROR_OUT_OF_HOST_MEMORY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_OUT_OF_HOST_MEMORY"]
try:
    VK_ERROR_OUT_OF_POOL_MEMORY = jvulkanLib.VK_ERROR_OUT_OF_POOL_MEMORY
    #print("statd VK_ERROR_OUT_OF_POOL_MEMORY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_OUT_OF_POOL_MEMORY"]
try:
    VK_ERROR_OUT_OF_POOL_MEMORY_KHR = jvulkanLib.VK_ERROR_OUT_OF_POOL_MEMORY_KHR
    #print("statd VK_ERROR_OUT_OF_POOL_MEMORY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_OUT_OF_POOL_MEMORY_KHR"]
try:
    VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT = jvulkanLib.VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT
    #print("statd VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT"]
try:
    VK_ERROR_SURFACE_LOST_KHR = jvulkanLib.VK_ERROR_SURFACE_LOST_KHR
    #print("statd VK_ERROR_SURFACE_LOST_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_SURFACE_LOST_KHR"]
try:
    VK_ERROR_TOO_MANY_OBJECTS = jvulkanLib.VK_ERROR_TOO_MANY_OBJECTS
    #print("statd VK_ERROR_TOO_MANY_OBJECTS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_TOO_MANY_OBJECTS"]
try:
    VK_ERROR_UNKNOWN = jvulkanLib.VK_ERROR_UNKNOWN
    #print("statd VK_ERROR_UNKNOWN")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_UNKNOWN"]
try:
    VK_ERROR_VALIDATION_FAILED_EXT = jvulkanLib.VK_ERROR_VALIDATION_FAILED_EXT
    #print("statd VK_ERROR_VALIDATION_FAILED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_ERROR_VALIDATION_FAILED_EXT"]
try:
    VK_EVENT_CREATE_DEVICE_ONLY_BIT = jvulkanLib.VK_EVENT_CREATE_DEVICE_ONLY_BIT
    #print("statd VK_EVENT_CREATE_DEVICE_ONLY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EVENT_CREATE_DEVICE_ONLY_BIT"]
try:
    VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR = jvulkanLib.VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR
    #print("statd VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR"]
try:
    VK_EVENT_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_EVENT_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_EVENT_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EVENT_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_EVENT_RESET = jvulkanLib.VK_EVENT_RESET
    #print("statd VK_EVENT_RESET")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EVENT_RESET"]
try:
    VK_EVENT_SET = jvulkanLib.VK_EVENT_SET
    #print("statd VK_EVENT_SET")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EVENT_SET"]
try:
    VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT = jvulkanLib.VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT
    #print("statd VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT"]
try:
    VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR = jvulkanLib.VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR
    #print("statd VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR"]
try:
    VK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM
    #print("statd VK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM"]
try:
    VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT = jvulkanLib.VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT
    #print("statd VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT"]
try:
    VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR = jvulkanLib.VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR
    #print("statd VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR"]
try:
    VK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM
    #print("statd VK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM"]
try:
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT = jvulkanLib.VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT
    #print("statd VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT"]
try:
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR = jvulkanLib.VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR
    #print("statd VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR"]
try:
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT = jvulkanLib.VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT
    #print("statd VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT"]
try:
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR = jvulkanLib.VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR
    #print("statd VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR"]
try:
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = jvulkanLib.VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT
    #print("statd VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"]
try:
    VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR = jvulkanLib.VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR
    #print("statd VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR"]
try:
    VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT = jvulkanLib.VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT
    #print("statd VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT"]
try:
    VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR = jvulkanLib.VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR
    #print("statd VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV = jvulkanLib.VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV
    #print("statd VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV"]
try:
    VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA = jvulkanLib.VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA
    #print("statd VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA"]
try:
    VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT = jvulkanLib.VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT
    #print("statd VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT"]
try:
    VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR = jvulkanLib.VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR
    #print("statd VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR"]
try:
    VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM
    #print("statd VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM"]
try:
    VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT = jvulkanLib.VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT
    #print("statd VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT"]
try:
    VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR = jvulkanLib.VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR
    #print("statd VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR"]
try:
    VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA = jvulkanLib.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA
    #print("statd VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA"]
try:
    VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_FENCE_CREATE_SIGNALED_BIT = jvulkanLib.VK_FENCE_CREATE_SIGNALED_BIT
    #print("statd VK_FENCE_CREATE_SIGNALED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FENCE_CREATE_SIGNALED_BIT"]
try:
    VK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM
    #print("statd VK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM"]
try:
    VK_FENCE_IMPORT_TEMPORARY_BIT = jvulkanLib.VK_FENCE_IMPORT_TEMPORARY_BIT
    #print("statd VK_FENCE_IMPORT_TEMPORARY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FENCE_IMPORT_TEMPORARY_BIT"]
try:
    VK_FENCE_IMPORT_TEMPORARY_BIT_KHR = jvulkanLib.VK_FENCE_IMPORT_TEMPORARY_BIT_KHR
    #print("statd VK_FENCE_IMPORT_TEMPORARY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FENCE_IMPORT_TEMPORARY_BIT_KHR"]
try:
    VK_FILTER_CUBIC_EXT = jvulkanLib.VK_FILTER_CUBIC_EXT
    #print("statd VK_FILTER_CUBIC_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FILTER_CUBIC_EXT"]
try:
    VK_FILTER_CUBIC_IMG = jvulkanLib.VK_FILTER_CUBIC_IMG
    #print("statd VK_FILTER_CUBIC_IMG")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FILTER_CUBIC_IMG"]
try:
    VK_FILTER_LINEAR = jvulkanLib.VK_FILTER_LINEAR
    #print("statd VK_FILTER_LINEAR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FILTER_LINEAR"]
try:
    VK_FILTER_MAX_ENUM = jvulkanLib.VK_FILTER_MAX_ENUM
    #print("statd VK_FILTER_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FILTER_MAX_ENUM"]
try:
    VK_FILTER_NEAREST = jvulkanLib.VK_FILTER_NEAREST
    #print("statd VK_FILTER_NEAREST")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FILTER_NEAREST"]
try:
    VK_FORMAT_A1R5G5B5_UNORM_PACK16 = jvulkanLib.VK_FORMAT_A1R5G5B5_UNORM_PACK16
    #print("statd VK_FORMAT_A1R5G5B5_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A1R5G5B5_UNORM_PACK16"]
try:
    VK_FORMAT_A2B10G10R10_SINT_PACK32 = jvulkanLib.VK_FORMAT_A2B10G10R10_SINT_PACK32
    #print("statd VK_FORMAT_A2B10G10R10_SINT_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2B10G10R10_SINT_PACK32"]
try:
    VK_FORMAT_A2B10G10R10_SNORM_PACK32 = jvulkanLib.VK_FORMAT_A2B10G10R10_SNORM_PACK32
    #print("statd VK_FORMAT_A2B10G10R10_SNORM_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2B10G10R10_SNORM_PACK32"]
try:
    VK_FORMAT_A2B10G10R10_SSCALED_PACK32 = jvulkanLib.VK_FORMAT_A2B10G10R10_SSCALED_PACK32
    #print("statd VK_FORMAT_A2B10G10R10_SSCALED_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2B10G10R10_SSCALED_PACK32"]
try:
    VK_FORMAT_A2B10G10R10_UINT_PACK32 = jvulkanLib.VK_FORMAT_A2B10G10R10_UINT_PACK32
    #print("statd VK_FORMAT_A2B10G10R10_UINT_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2B10G10R10_UINT_PACK32"]
try:
    VK_FORMAT_A2B10G10R10_UNORM_PACK32 = jvulkanLib.VK_FORMAT_A2B10G10R10_UNORM_PACK32
    #print("statd VK_FORMAT_A2B10G10R10_UNORM_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2B10G10R10_UNORM_PACK32"]
try:
    VK_FORMAT_A2B10G10R10_USCALED_PACK32 = jvulkanLib.VK_FORMAT_A2B10G10R10_USCALED_PACK32
    #print("statd VK_FORMAT_A2B10G10R10_USCALED_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2B10G10R10_USCALED_PACK32"]
try:
    VK_FORMAT_A2R10G10B10_SINT_PACK32 = jvulkanLib.VK_FORMAT_A2R10G10B10_SINT_PACK32
    #print("statd VK_FORMAT_A2R10G10B10_SINT_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2R10G10B10_SINT_PACK32"]
try:
    VK_FORMAT_A2R10G10B10_SNORM_PACK32 = jvulkanLib.VK_FORMAT_A2R10G10B10_SNORM_PACK32
    #print("statd VK_FORMAT_A2R10G10B10_SNORM_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2R10G10B10_SNORM_PACK32"]
try:
    VK_FORMAT_A2R10G10B10_SSCALED_PACK32 = jvulkanLib.VK_FORMAT_A2R10G10B10_SSCALED_PACK32
    #print("statd VK_FORMAT_A2R10G10B10_SSCALED_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2R10G10B10_SSCALED_PACK32"]
try:
    VK_FORMAT_A2R10G10B10_UINT_PACK32 = jvulkanLib.VK_FORMAT_A2R10G10B10_UINT_PACK32
    #print("statd VK_FORMAT_A2R10G10B10_UINT_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2R10G10B10_UINT_PACK32"]
try:
    VK_FORMAT_A2R10G10B10_UNORM_PACK32 = jvulkanLib.VK_FORMAT_A2R10G10B10_UNORM_PACK32
    #print("statd VK_FORMAT_A2R10G10B10_UNORM_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2R10G10B10_UNORM_PACK32"]
try:
    VK_FORMAT_A2R10G10B10_USCALED_PACK32 = jvulkanLib.VK_FORMAT_A2R10G10B10_USCALED_PACK32
    #print("statd VK_FORMAT_A2R10G10B10_USCALED_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A2R10G10B10_USCALED_PACK32"]
try:
    VK_FORMAT_A4B4G4R4_UNORM_PACK16 = jvulkanLib.VK_FORMAT_A4B4G4R4_UNORM_PACK16
    #print("statd VK_FORMAT_A4B4G4R4_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A4B4G4R4_UNORM_PACK16"]
try:
    VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT = jvulkanLib.VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT
    #print("statd VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT"]
try:
    VK_FORMAT_A4R4G4B4_UNORM_PACK16 = jvulkanLib.VK_FORMAT_A4R4G4B4_UNORM_PACK16
    #print("statd VK_FORMAT_A4R4G4B4_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A4R4G4B4_UNORM_PACK16"]
try:
    VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT = jvulkanLib.VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT
    #print("statd VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT"]
try:
    VK_FORMAT_A8B8G8R8_SINT_PACK32 = jvulkanLib.VK_FORMAT_A8B8G8R8_SINT_PACK32
    #print("statd VK_FORMAT_A8B8G8R8_SINT_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A8B8G8R8_SINT_PACK32"]
try:
    VK_FORMAT_A8B8G8R8_SNORM_PACK32 = jvulkanLib.VK_FORMAT_A8B8G8R8_SNORM_PACK32
    #print("statd VK_FORMAT_A8B8G8R8_SNORM_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A8B8G8R8_SNORM_PACK32"]
try:
    VK_FORMAT_A8B8G8R8_SRGB_PACK32 = jvulkanLib.VK_FORMAT_A8B8G8R8_SRGB_PACK32
    #print("statd VK_FORMAT_A8B8G8R8_SRGB_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A8B8G8R8_SRGB_PACK32"]
try:
    VK_FORMAT_A8B8G8R8_SSCALED_PACK32 = jvulkanLib.VK_FORMAT_A8B8G8R8_SSCALED_PACK32
    #print("statd VK_FORMAT_A8B8G8R8_SSCALED_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A8B8G8R8_SSCALED_PACK32"]
try:
    VK_FORMAT_A8B8G8R8_UINT_PACK32 = jvulkanLib.VK_FORMAT_A8B8G8R8_UINT_PACK32
    #print("statd VK_FORMAT_A8B8G8R8_UINT_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A8B8G8R8_UINT_PACK32"]
try:
    VK_FORMAT_A8B8G8R8_UNORM_PACK32 = jvulkanLib.VK_FORMAT_A8B8G8R8_UNORM_PACK32
    #print("statd VK_FORMAT_A8B8G8R8_UNORM_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A8B8G8R8_UNORM_PACK32"]
try:
    VK_FORMAT_A8B8G8R8_USCALED_PACK32 = jvulkanLib.VK_FORMAT_A8B8G8R8_USCALED_PACK32
    #print("statd VK_FORMAT_A8B8G8R8_USCALED_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_A8B8G8R8_USCALED_PACK32"]
try:
    VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_10x10_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x10_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_10x10_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x10_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_10x10_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x10_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_10x10_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x10_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_10x5_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x5_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_10x5_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x5_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_10x5_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x5_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_10x5_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x5_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_10x6_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x6_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_10x6_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x6_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_10x6_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x6_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_10x6_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x6_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_10x8_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x8_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_10x8_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x8_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_10x8_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_10x8_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_10x8_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_10x8_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_12x10_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_12x10_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_12x10_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_12x10_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_12x10_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_12x10_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_12x10_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_12x10_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_12x12_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_12x12_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_12x12_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_12x12_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_12x12_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_12x12_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_12x12_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_12x12_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_4x4_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_4x4_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_4x4_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_4x4_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_4x4_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_4x4_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_4x4_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_4x4_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_5x4_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_5x4_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_5x4_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_5x4_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_5x4_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_5x4_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_5x4_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_5x4_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_5x5_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_5x5_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_5x5_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_5x5_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_5x5_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_5x5_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_5x5_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_5x5_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_6x5_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_6x5_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_6x5_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_6x5_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_6x5_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_6x5_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_6x5_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_6x5_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_6x6_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_6x6_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_6x6_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_6x6_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_6x6_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_6x6_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_6x6_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_6x6_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_8x5_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_8x5_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_8x5_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x5_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_8x5_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_8x5_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_8x5_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x5_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_8x6_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_8x6_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_8x6_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x6_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_8x6_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_8x6_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_8x6_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x6_UNORM_BLOCK"]
try:
    VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK
    #print("statd VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK"]
try:
    VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT = jvulkanLib.VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT
    #print("statd VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT"]
try:
    VK_FORMAT_ASTC_8x8_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ASTC_8x8_SRGB_BLOCK
    #print("statd VK_FORMAT_ASTC_8x8_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x8_SRGB_BLOCK"]
try:
    VK_FORMAT_ASTC_8x8_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ASTC_8x8_UNORM_BLOCK
    #print("statd VK_FORMAT_ASTC_8x8_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ASTC_8x8_UNORM_BLOCK"]
try:
    VK_FORMAT_B10G11R11_UFLOAT_PACK32 = jvulkanLib.VK_FORMAT_B10G11R11_UFLOAT_PACK32
    #print("statd VK_FORMAT_B10G11R11_UFLOAT_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B10G11R11_UFLOAT_PACK32"]
try:
    VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = jvulkanLib.VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16
    #print("statd VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16"]
try:
    VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR = jvulkanLib.VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR
    #print("statd VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR"]
try:
    VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = jvulkanLib.VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16
    #print("statd VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16"]
try:
    VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR = jvulkanLib.VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR
    #print("statd VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR"]
try:
    VK_FORMAT_B16G16R16G16_422_UNORM = jvulkanLib.VK_FORMAT_B16G16R16G16_422_UNORM
    #print("statd VK_FORMAT_B16G16R16G16_422_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B16G16R16G16_422_UNORM"]
try:
    VK_FORMAT_B16G16R16G16_422_UNORM_KHR = jvulkanLib.VK_FORMAT_B16G16R16G16_422_UNORM_KHR
    #print("statd VK_FORMAT_B16G16R16G16_422_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B16G16R16G16_422_UNORM_KHR"]
try:
    VK_FORMAT_B4G4R4A4_UNORM_PACK16 = jvulkanLib.VK_FORMAT_B4G4R4A4_UNORM_PACK16
    #print("statd VK_FORMAT_B4G4R4A4_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B4G4R4A4_UNORM_PACK16"]
try:
    VK_FORMAT_B5G5R5A1_UNORM_PACK16 = jvulkanLib.VK_FORMAT_B5G5R5A1_UNORM_PACK16
    #print("statd VK_FORMAT_B5G5R5A1_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B5G5R5A1_UNORM_PACK16"]
try:
    VK_FORMAT_B5G6R5_UNORM_PACK16 = jvulkanLib.VK_FORMAT_B5G6R5_UNORM_PACK16
    #print("statd VK_FORMAT_B5G6R5_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B5G6R5_UNORM_PACK16"]
try:
    VK_FORMAT_B8G8R8A8_SINT = jvulkanLib.VK_FORMAT_B8G8R8A8_SINT
    #print("statd VK_FORMAT_B8G8R8A8_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8A8_SINT"]
try:
    VK_FORMAT_B8G8R8A8_SNORM = jvulkanLib.VK_FORMAT_B8G8R8A8_SNORM
    #print("statd VK_FORMAT_B8G8R8A8_SNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8A8_SNORM"]
try:
    VK_FORMAT_B8G8R8A8_SRGB = jvulkanLib.VK_FORMAT_B8G8R8A8_SRGB
    #print("statd VK_FORMAT_B8G8R8A8_SRGB")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8A8_SRGB"]
try:
    VK_FORMAT_B8G8R8A8_SSCALED = jvulkanLib.VK_FORMAT_B8G8R8A8_SSCALED
    #print("statd VK_FORMAT_B8G8R8A8_SSCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8A8_SSCALED"]
try:
    VK_FORMAT_B8G8R8A8_UINT = jvulkanLib.VK_FORMAT_B8G8R8A8_UINT
    #print("statd VK_FORMAT_B8G8R8A8_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8A8_UINT"]
try:
    VK_FORMAT_B8G8R8A8_UNORM = jvulkanLib.VK_FORMAT_B8G8R8A8_UNORM
    #print("statd VK_FORMAT_B8G8R8A8_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8A8_UNORM"]
try:
    VK_FORMAT_B8G8R8A8_USCALED = jvulkanLib.VK_FORMAT_B8G8R8A8_USCALED
    #print("statd VK_FORMAT_B8G8R8A8_USCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8A8_USCALED"]
try:
    VK_FORMAT_B8G8R8G8_422_UNORM = jvulkanLib.VK_FORMAT_B8G8R8G8_422_UNORM
    #print("statd VK_FORMAT_B8G8R8G8_422_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8G8_422_UNORM"]
try:
    VK_FORMAT_B8G8R8G8_422_UNORM_KHR = jvulkanLib.VK_FORMAT_B8G8R8G8_422_UNORM_KHR
    #print("statd VK_FORMAT_B8G8R8G8_422_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8G8_422_UNORM_KHR"]
try:
    VK_FORMAT_B8G8R8_SINT = jvulkanLib.VK_FORMAT_B8G8R8_SINT
    #print("statd VK_FORMAT_B8G8R8_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8_SINT"]
try:
    VK_FORMAT_B8G8R8_SNORM = jvulkanLib.VK_FORMAT_B8G8R8_SNORM
    #print("statd VK_FORMAT_B8G8R8_SNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8_SNORM"]
try:
    VK_FORMAT_B8G8R8_SRGB = jvulkanLib.VK_FORMAT_B8G8R8_SRGB
    #print("statd VK_FORMAT_B8G8R8_SRGB")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8_SRGB"]
try:
    VK_FORMAT_B8G8R8_SSCALED = jvulkanLib.VK_FORMAT_B8G8R8_SSCALED
    #print("statd VK_FORMAT_B8G8R8_SSCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8_SSCALED"]
try:
    VK_FORMAT_B8G8R8_UINT = jvulkanLib.VK_FORMAT_B8G8R8_UINT
    #print("statd VK_FORMAT_B8G8R8_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8_UINT"]
try:
    VK_FORMAT_B8G8R8_UNORM = jvulkanLib.VK_FORMAT_B8G8R8_UNORM
    #print("statd VK_FORMAT_B8G8R8_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8_UNORM"]
try:
    VK_FORMAT_B8G8R8_USCALED = jvulkanLib.VK_FORMAT_B8G8R8_USCALED
    #print("statd VK_FORMAT_B8G8R8_USCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_B8G8R8_USCALED"]
try:
    VK_FORMAT_BC1_RGBA_SRGB_BLOCK = jvulkanLib.VK_FORMAT_BC1_RGBA_SRGB_BLOCK
    #print("statd VK_FORMAT_BC1_RGBA_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC1_RGBA_SRGB_BLOCK"]
try:
    VK_FORMAT_BC1_RGBA_UNORM_BLOCK = jvulkanLib.VK_FORMAT_BC1_RGBA_UNORM_BLOCK
    #print("statd VK_FORMAT_BC1_RGBA_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC1_RGBA_UNORM_BLOCK"]
try:
    VK_FORMAT_BC1_RGB_SRGB_BLOCK = jvulkanLib.VK_FORMAT_BC1_RGB_SRGB_BLOCK
    #print("statd VK_FORMAT_BC1_RGB_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC1_RGB_SRGB_BLOCK"]
try:
    VK_FORMAT_BC1_RGB_UNORM_BLOCK = jvulkanLib.VK_FORMAT_BC1_RGB_UNORM_BLOCK
    #print("statd VK_FORMAT_BC1_RGB_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC1_RGB_UNORM_BLOCK"]
try:
    VK_FORMAT_BC2_SRGB_BLOCK = jvulkanLib.VK_FORMAT_BC2_SRGB_BLOCK
    #print("statd VK_FORMAT_BC2_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC2_SRGB_BLOCK"]
try:
    VK_FORMAT_BC2_UNORM_BLOCK = jvulkanLib.VK_FORMAT_BC2_UNORM_BLOCK
    #print("statd VK_FORMAT_BC2_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC2_UNORM_BLOCK"]
try:
    VK_FORMAT_BC3_SRGB_BLOCK = jvulkanLib.VK_FORMAT_BC3_SRGB_BLOCK
    #print("statd VK_FORMAT_BC3_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC3_SRGB_BLOCK"]
try:
    VK_FORMAT_BC3_UNORM_BLOCK = jvulkanLib.VK_FORMAT_BC3_UNORM_BLOCK
    #print("statd VK_FORMAT_BC3_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC3_UNORM_BLOCK"]
try:
    VK_FORMAT_BC4_SNORM_BLOCK = jvulkanLib.VK_FORMAT_BC4_SNORM_BLOCK
    #print("statd VK_FORMAT_BC4_SNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC4_SNORM_BLOCK"]
try:
    VK_FORMAT_BC4_UNORM_BLOCK = jvulkanLib.VK_FORMAT_BC4_UNORM_BLOCK
    #print("statd VK_FORMAT_BC4_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC4_UNORM_BLOCK"]
try:
    VK_FORMAT_BC5_SNORM_BLOCK = jvulkanLib.VK_FORMAT_BC5_SNORM_BLOCK
    #print("statd VK_FORMAT_BC5_SNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC5_SNORM_BLOCK"]
try:
    VK_FORMAT_BC5_UNORM_BLOCK = jvulkanLib.VK_FORMAT_BC5_UNORM_BLOCK
    #print("statd VK_FORMAT_BC5_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC5_UNORM_BLOCK"]
try:
    VK_FORMAT_BC6H_SFLOAT_BLOCK = jvulkanLib.VK_FORMAT_BC6H_SFLOAT_BLOCK
    #print("statd VK_FORMAT_BC6H_SFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC6H_SFLOAT_BLOCK"]
try:
    VK_FORMAT_BC6H_UFLOAT_BLOCK = jvulkanLib.VK_FORMAT_BC6H_UFLOAT_BLOCK
    #print("statd VK_FORMAT_BC6H_UFLOAT_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC6H_UFLOAT_BLOCK"]
try:
    VK_FORMAT_BC7_SRGB_BLOCK = jvulkanLib.VK_FORMAT_BC7_SRGB_BLOCK
    #print("statd VK_FORMAT_BC7_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC7_SRGB_BLOCK"]
try:
    VK_FORMAT_BC7_UNORM_BLOCK = jvulkanLib.VK_FORMAT_BC7_UNORM_BLOCK
    #print("statd VK_FORMAT_BC7_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_BC7_UNORM_BLOCK"]
try:
    VK_FORMAT_D16_UNORM = jvulkanLib.VK_FORMAT_D16_UNORM
    #print("statd VK_FORMAT_D16_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_D16_UNORM"]
try:
    VK_FORMAT_D16_UNORM_S8_UINT = jvulkanLib.VK_FORMAT_D16_UNORM_S8_UINT
    #print("statd VK_FORMAT_D16_UNORM_S8_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_D16_UNORM_S8_UINT"]
try:
    VK_FORMAT_D24_UNORM_S8_UINT = jvulkanLib.VK_FORMAT_D24_UNORM_S8_UINT
    #print("statd VK_FORMAT_D24_UNORM_S8_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_D24_UNORM_S8_UINT"]
try:
    VK_FORMAT_D32_SFLOAT = jvulkanLib.VK_FORMAT_D32_SFLOAT
    #print("statd VK_FORMAT_D32_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_D32_SFLOAT"]
try:
    VK_FORMAT_D32_SFLOAT_S8_UINT = jvulkanLib.VK_FORMAT_D32_SFLOAT_S8_UINT
    #print("statd VK_FORMAT_D32_SFLOAT_S8_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_D32_SFLOAT_S8_UINT"]
try:
    VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = jvulkanLib.VK_FORMAT_E5B9G9R9_UFLOAT_PACK32
    #print("statd VK_FORMAT_E5B9G9R9_UFLOAT_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_E5B9G9R9_UFLOAT_PACK32"]
try:
    VK_FORMAT_EAC_R11G11_SNORM_BLOCK = jvulkanLib.VK_FORMAT_EAC_R11G11_SNORM_BLOCK
    #print("statd VK_FORMAT_EAC_R11G11_SNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_EAC_R11G11_SNORM_BLOCK"]
try:
    VK_FORMAT_EAC_R11G11_UNORM_BLOCK = jvulkanLib.VK_FORMAT_EAC_R11G11_UNORM_BLOCK
    #print("statd VK_FORMAT_EAC_R11G11_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_EAC_R11G11_UNORM_BLOCK"]
try:
    VK_FORMAT_EAC_R11_SNORM_BLOCK = jvulkanLib.VK_FORMAT_EAC_R11_SNORM_BLOCK
    #print("statd VK_FORMAT_EAC_R11_SNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_EAC_R11_SNORM_BLOCK"]
try:
    VK_FORMAT_EAC_R11_UNORM_BLOCK = jvulkanLib.VK_FORMAT_EAC_R11_UNORM_BLOCK
    #print("statd VK_FORMAT_EAC_R11_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_EAC_R11_UNORM_BLOCK"]
try:
    VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK
    #print("statd VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK"]
try:
    VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK
    #print("statd VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK"]
try:
    VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK
    #print("statd VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK"]
try:
    VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK
    #print("statd VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK"]
try:
    VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = jvulkanLib.VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK
    #print("statd VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK"]
try:
    VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = jvulkanLib.VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK
    #print("statd VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK"]
try:
    VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_BLIT_DST_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_BLIT_DST_BIT
    #print("statd VK_FORMAT_FEATURE_2_BLIT_DST_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_BLIT_DST_BIT"]
try:
    VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_BLIT_SRC_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_BLIT_SRC_BIT
    #print("statd VK_FORMAT_FEATURE_2_BLIT_SRC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_BLIT_SRC_BIT"]
try:
    VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT
    #print("statd VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT"]
try:
    VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT
    #print("statd VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT"]
try:
    VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT
    #print("statd VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT"]
try:
    VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT
    #print("statd VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT"]
try:
    VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_DISJOINT_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_DISJOINT_BIT
    #print("statd VK_FORMAT_FEATURE_2_DISJOINT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_DISJOINT_BIT"]
try:
    VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT = jvulkanLib.VK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT
    #print("statd VK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT"]
try:
    VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV = jvulkanLib.VK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV
    #print("statd VK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV"]
try:
    VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT
    #print("statd VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT"]
try:
    VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT"]
try:
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT"]
try:
    VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT
    #print("statd VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT"]
try:
    VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT
    #print("statd VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT"]
try:
    VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT
    #print("statd VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT"]
try:
    VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT = jvulkanLib.VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT
    #print("statd VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT"]
try:
    VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_BLIT_DST_BIT = jvulkanLib.VK_FORMAT_FEATURE_BLIT_DST_BIT
    #print("statd VK_FORMAT_FEATURE_BLIT_DST_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_BLIT_DST_BIT"]
try:
    VK_FORMAT_FEATURE_BLIT_SRC_BIT = jvulkanLib.VK_FORMAT_FEATURE_BLIT_SRC_BIT
    #print("statd VK_FORMAT_FEATURE_BLIT_SRC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_BLIT_SRC_BIT"]
try:
    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT = jvulkanLib.VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT
    #print("statd VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT"]
try:
    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT = jvulkanLib.VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT
    #print("statd VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT"]
try:
    VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT = jvulkanLib.VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT
    #print("statd VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT"]
try:
    VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT = jvulkanLib.VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT
    #print("statd VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT"]
try:
    VK_FORMAT_FEATURE_DISJOINT_BIT = jvulkanLib.VK_FORMAT_FEATURE_DISJOINT_BIT
    #print("statd VK_FORMAT_FEATURE_DISJOINT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_DISJOINT_BIT"]
try:
    VK_FORMAT_FEATURE_DISJOINT_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_DISJOINT_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_DISJOINT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_DISJOINT_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM
    #print("statd VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM"]
try:
    VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT = jvulkanLib.VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT
    #print("statd VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT"]
try:
    VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT = jvulkanLib.VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT
    #print("statd VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT"]
try:
    VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT"]
try:
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT = jvulkanLib.VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT
    #print("statd VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT"]
try:
    VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT = jvulkanLib.VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT
    #print("statd VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT"]
try:
    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = jvulkanLib.VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT
    #print("statd VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT"]
try:
    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT = jvulkanLib.VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT
    #print("statd VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT"]
try:
    VK_FORMAT_FEATURE_TRANSFER_DST_BIT = jvulkanLib.VK_FORMAT_FEATURE_TRANSFER_DST_BIT
    #print("statd VK_FORMAT_FEATURE_TRANSFER_DST_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_TRANSFER_DST_BIT"]
try:
    VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_TRANSFER_SRC_BIT = jvulkanLib.VK_FORMAT_FEATURE_TRANSFER_SRC_BIT
    #print("statd VK_FORMAT_FEATURE_TRANSFER_SRC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_TRANSFER_SRC_BIT"]
try:
    VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR = jvulkanLib.VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR
    #print("statd VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR"]
try:
    VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT = jvulkanLib.VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT
    #print("statd VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT"]
try:
    VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT = jvulkanLib.VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT
    #print("statd VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT"]
try:
    VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = jvulkanLib.VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16
    #print("statd VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16"]
try:
    VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR = jvulkanLib.VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR
    #print("statd VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR"]
try:
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16
    #print("statd VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16"]
try:
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR = jvulkanLib.VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR
    #print("statd VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR"]
try:
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16
    #print("statd VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16"]
try:
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR = jvulkanLib.VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR
    #print("statd VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR"]
try:
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16
    #print("statd VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16"]
try:
    VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT = jvulkanLib.VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT
    #print("statd VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT"]
try:
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16
    #print("statd VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16"]
try:
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR = jvulkanLib.VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR
    #print("statd VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR"]
try:
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16
    #print("statd VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16"]
try:
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR = jvulkanLib.VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR
    #print("statd VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR"]
try:
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16
    #print("statd VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16"]
try:
    VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR = jvulkanLib.VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR
    #print("statd VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR"]
try:
    VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = jvulkanLib.VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16
    #print("statd VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16"]
try:
    VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR = jvulkanLib.VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR
    #print("statd VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR"]
try:
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16
    #print("statd VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16"]
try:
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR = jvulkanLib.VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR
    #print("statd VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR"]
try:
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16
    #print("statd VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16"]
try:
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR = jvulkanLib.VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR
    #print("statd VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR"]
try:
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16
    #print("statd VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16"]
try:
    VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT = jvulkanLib.VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT
    #print("statd VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT"]
try:
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16
    #print("statd VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16"]
try:
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR = jvulkanLib.VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR
    #print("statd VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR"]
try:
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16
    #print("statd VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16"]
try:
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR = jvulkanLib.VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR
    #print("statd VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR"]
try:
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 = jvulkanLib.VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16
    #print("statd VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16"]
try:
    VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR = jvulkanLib.VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR
    #print("statd VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR"]
try:
    VK_FORMAT_G16B16G16R16_422_UNORM = jvulkanLib.VK_FORMAT_G16B16G16R16_422_UNORM
    #print("statd VK_FORMAT_G16B16G16R16_422_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16B16G16R16_422_UNORM"]
try:
    VK_FORMAT_G16B16G16R16_422_UNORM_KHR = jvulkanLib.VK_FORMAT_G16B16G16R16_422_UNORM_KHR
    #print("statd VK_FORMAT_G16B16G16R16_422_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16B16G16R16_422_UNORM_KHR"]
try:
    VK_FORMAT_G16_B16R16_2PLANE_420_UNORM = jvulkanLib.VK_FORMAT_G16_B16R16_2PLANE_420_UNORM
    #print("statd VK_FORMAT_G16_B16R16_2PLANE_420_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16R16_2PLANE_420_UNORM"]
try:
    VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR = jvulkanLib.VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR
    #print("statd VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR"]
try:
    VK_FORMAT_G16_B16R16_2PLANE_422_UNORM = jvulkanLib.VK_FORMAT_G16_B16R16_2PLANE_422_UNORM
    #print("statd VK_FORMAT_G16_B16R16_2PLANE_422_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16R16_2PLANE_422_UNORM"]
try:
    VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR = jvulkanLib.VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR
    #print("statd VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR"]
try:
    VK_FORMAT_G16_B16R16_2PLANE_444_UNORM = jvulkanLib.VK_FORMAT_G16_B16R16_2PLANE_444_UNORM
    #print("statd VK_FORMAT_G16_B16R16_2PLANE_444_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16R16_2PLANE_444_UNORM"]
try:
    VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT = jvulkanLib.VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT
    #print("statd VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT"]
try:
    VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM = jvulkanLib.VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM
    #print("statd VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM"]
try:
    VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR = jvulkanLib.VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR
    #print("statd VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR"]
try:
    VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM = jvulkanLib.VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM
    #print("statd VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM"]
try:
    VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR = jvulkanLib.VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR
    #print("statd VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR"]
try:
    VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM = jvulkanLib.VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM
    #print("statd VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM"]
try:
    VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR = jvulkanLib.VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR
    #print("statd VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR"]
try:
    VK_FORMAT_G8B8G8R8_422_UNORM = jvulkanLib.VK_FORMAT_G8B8G8R8_422_UNORM
    #print("statd VK_FORMAT_G8B8G8R8_422_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8B8G8R8_422_UNORM"]
try:
    VK_FORMAT_G8B8G8R8_422_UNORM_KHR = jvulkanLib.VK_FORMAT_G8B8G8R8_422_UNORM_KHR
    #print("statd VK_FORMAT_G8B8G8R8_422_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8B8G8R8_422_UNORM_KHR"]
try:
    VK_FORMAT_G8_B8R8_2PLANE_420_UNORM = jvulkanLib.VK_FORMAT_G8_B8R8_2PLANE_420_UNORM
    #print("statd VK_FORMAT_G8_B8R8_2PLANE_420_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8R8_2PLANE_420_UNORM"]
try:
    VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR = jvulkanLib.VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR
    #print("statd VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR"]
try:
    VK_FORMAT_G8_B8R8_2PLANE_422_UNORM = jvulkanLib.VK_FORMAT_G8_B8R8_2PLANE_422_UNORM
    #print("statd VK_FORMAT_G8_B8R8_2PLANE_422_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8R8_2PLANE_422_UNORM"]
try:
    VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR = jvulkanLib.VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR
    #print("statd VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR"]
try:
    VK_FORMAT_G8_B8R8_2PLANE_444_UNORM = jvulkanLib.VK_FORMAT_G8_B8R8_2PLANE_444_UNORM
    #print("statd VK_FORMAT_G8_B8R8_2PLANE_444_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8R8_2PLANE_444_UNORM"]
try:
    VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT = jvulkanLib.VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT
    #print("statd VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT"]
try:
    VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM = jvulkanLib.VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM
    #print("statd VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM"]
try:
    VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR = jvulkanLib.VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR
    #print("statd VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR"]
try:
    VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM = jvulkanLib.VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM
    #print("statd VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM"]
try:
    VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR = jvulkanLib.VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR
    #print("statd VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR"]
try:
    VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM = jvulkanLib.VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM
    #print("statd VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM"]
try:
    VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR = jvulkanLib.VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR
    #print("statd VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR"]
try:
    VK_FORMAT_MAX_ENUM = jvulkanLib.VK_FORMAT_MAX_ENUM
    #print("statd VK_FORMAT_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_MAX_ENUM"]
try:
    VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG = jvulkanLib.VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG
    #print("statd VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG"]
try:
    VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG = jvulkanLib.VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG
    #print("statd VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG"]
try:
    VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG = jvulkanLib.VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG
    #print("statd VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG"]
try:
    VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG = jvulkanLib.VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG
    #print("statd VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG"]
try:
    VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG = jvulkanLib.VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG
    #print("statd VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG"]
try:
    VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG = jvulkanLib.VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG
    #print("statd VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG"]
try:
    VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG = jvulkanLib.VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG
    #print("statd VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG"]
try:
    VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG = jvulkanLib.VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG
    #print("statd VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG"]
try:
    VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = jvulkanLib.VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16
    #print("statd VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16"]
try:
    VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR = jvulkanLib.VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR
    #print("statd VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR"]
try:
    VK_FORMAT_R10X6G10X6_UNORM_2PACK16 = jvulkanLib.VK_FORMAT_R10X6G10X6_UNORM_2PACK16
    #print("statd VK_FORMAT_R10X6G10X6_UNORM_2PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R10X6G10X6_UNORM_2PACK16"]
try:
    VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR = jvulkanLib.VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR
    #print("statd VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR"]
try:
    VK_FORMAT_R10X6_UNORM_PACK16 = jvulkanLib.VK_FORMAT_R10X6_UNORM_PACK16
    #print("statd VK_FORMAT_R10X6_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R10X6_UNORM_PACK16"]
try:
    VK_FORMAT_R10X6_UNORM_PACK16_KHR = jvulkanLib.VK_FORMAT_R10X6_UNORM_PACK16_KHR
    #print("statd VK_FORMAT_R10X6_UNORM_PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R10X6_UNORM_PACK16_KHR"]
try:
    VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = jvulkanLib.VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16
    #print("statd VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16"]
try:
    VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR = jvulkanLib.VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR
    #print("statd VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR"]
try:
    VK_FORMAT_R12X4G12X4_UNORM_2PACK16 = jvulkanLib.VK_FORMAT_R12X4G12X4_UNORM_2PACK16
    #print("statd VK_FORMAT_R12X4G12X4_UNORM_2PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R12X4G12X4_UNORM_2PACK16"]
try:
    VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR = jvulkanLib.VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR
    #print("statd VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR"]
try:
    VK_FORMAT_R12X4_UNORM_PACK16 = jvulkanLib.VK_FORMAT_R12X4_UNORM_PACK16
    #print("statd VK_FORMAT_R12X4_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R12X4_UNORM_PACK16"]
try:
    VK_FORMAT_R12X4_UNORM_PACK16_KHR = jvulkanLib.VK_FORMAT_R12X4_UNORM_PACK16_KHR
    #print("statd VK_FORMAT_R12X4_UNORM_PACK16_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R12X4_UNORM_PACK16_KHR"]
try:
    VK_FORMAT_R16G16B16A16_SFLOAT = jvulkanLib.VK_FORMAT_R16G16B16A16_SFLOAT
    #print("statd VK_FORMAT_R16G16B16A16_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16A16_SFLOAT"]
try:
    VK_FORMAT_R16G16B16A16_SINT = jvulkanLib.VK_FORMAT_R16G16B16A16_SINT
    #print("statd VK_FORMAT_R16G16B16A16_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16A16_SINT"]
try:
    VK_FORMAT_R16G16B16A16_SNORM = jvulkanLib.VK_FORMAT_R16G16B16A16_SNORM
    #print("statd VK_FORMAT_R16G16B16A16_SNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16A16_SNORM"]
try:
    VK_FORMAT_R16G16B16A16_SSCALED = jvulkanLib.VK_FORMAT_R16G16B16A16_SSCALED
    #print("statd VK_FORMAT_R16G16B16A16_SSCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16A16_SSCALED"]
try:
    VK_FORMAT_R16G16B16A16_UINT = jvulkanLib.VK_FORMAT_R16G16B16A16_UINT
    #print("statd VK_FORMAT_R16G16B16A16_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16A16_UINT"]
try:
    VK_FORMAT_R16G16B16A16_UNORM = jvulkanLib.VK_FORMAT_R16G16B16A16_UNORM
    #print("statd VK_FORMAT_R16G16B16A16_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16A16_UNORM"]
try:
    VK_FORMAT_R16G16B16A16_USCALED = jvulkanLib.VK_FORMAT_R16G16B16A16_USCALED
    #print("statd VK_FORMAT_R16G16B16A16_USCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16A16_USCALED"]
try:
    VK_FORMAT_R16G16B16_SFLOAT = jvulkanLib.VK_FORMAT_R16G16B16_SFLOAT
    #print("statd VK_FORMAT_R16G16B16_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16_SFLOAT"]
try:
    VK_FORMAT_R16G16B16_SINT = jvulkanLib.VK_FORMAT_R16G16B16_SINT
    #print("statd VK_FORMAT_R16G16B16_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16_SINT"]
try:
    VK_FORMAT_R16G16B16_SNORM = jvulkanLib.VK_FORMAT_R16G16B16_SNORM
    #print("statd VK_FORMAT_R16G16B16_SNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16_SNORM"]
try:
    VK_FORMAT_R16G16B16_SSCALED = jvulkanLib.VK_FORMAT_R16G16B16_SSCALED
    #print("statd VK_FORMAT_R16G16B16_SSCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16_SSCALED"]
try:
    VK_FORMAT_R16G16B16_UINT = jvulkanLib.VK_FORMAT_R16G16B16_UINT
    #print("statd VK_FORMAT_R16G16B16_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16_UINT"]
try:
    VK_FORMAT_R16G16B16_UNORM = jvulkanLib.VK_FORMAT_R16G16B16_UNORM
    #print("statd VK_FORMAT_R16G16B16_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16_UNORM"]
try:
    VK_FORMAT_R16G16B16_USCALED = jvulkanLib.VK_FORMAT_R16G16B16_USCALED
    #print("statd VK_FORMAT_R16G16B16_USCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16B16_USCALED"]
try:
    VK_FORMAT_R16G16_SFLOAT = jvulkanLib.VK_FORMAT_R16G16_SFLOAT
    #print("statd VK_FORMAT_R16G16_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16_SFLOAT"]
try:
    VK_FORMAT_R16G16_SINT = jvulkanLib.VK_FORMAT_R16G16_SINT
    #print("statd VK_FORMAT_R16G16_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16_SINT"]
try:
    VK_FORMAT_R16G16_SNORM = jvulkanLib.VK_FORMAT_R16G16_SNORM
    #print("statd VK_FORMAT_R16G16_SNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16_SNORM"]
try:
    VK_FORMAT_R16G16_SSCALED = jvulkanLib.VK_FORMAT_R16G16_SSCALED
    #print("statd VK_FORMAT_R16G16_SSCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16_SSCALED"]
try:
    VK_FORMAT_R16G16_UINT = jvulkanLib.VK_FORMAT_R16G16_UINT
    #print("statd VK_FORMAT_R16G16_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16_UINT"]
try:
    VK_FORMAT_R16G16_UNORM = jvulkanLib.VK_FORMAT_R16G16_UNORM
    #print("statd VK_FORMAT_R16G16_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16_UNORM"]
try:
    VK_FORMAT_R16G16_USCALED = jvulkanLib.VK_FORMAT_R16G16_USCALED
    #print("statd VK_FORMAT_R16G16_USCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16G16_USCALED"]
try:
    VK_FORMAT_R16_SFLOAT = jvulkanLib.VK_FORMAT_R16_SFLOAT
    #print("statd VK_FORMAT_R16_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16_SFLOAT"]
try:
    VK_FORMAT_R16_SINT = jvulkanLib.VK_FORMAT_R16_SINT
    #print("statd VK_FORMAT_R16_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16_SINT"]
try:
    VK_FORMAT_R16_SNORM = jvulkanLib.VK_FORMAT_R16_SNORM
    #print("statd VK_FORMAT_R16_SNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16_SNORM"]
try:
    VK_FORMAT_R16_SSCALED = jvulkanLib.VK_FORMAT_R16_SSCALED
    #print("statd VK_FORMAT_R16_SSCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16_SSCALED"]
try:
    VK_FORMAT_R16_UINT = jvulkanLib.VK_FORMAT_R16_UINT
    #print("statd VK_FORMAT_R16_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16_UINT"]
try:
    VK_FORMAT_R16_UNORM = jvulkanLib.VK_FORMAT_R16_UNORM
    #print("statd VK_FORMAT_R16_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16_UNORM"]
try:
    VK_FORMAT_R16_USCALED = jvulkanLib.VK_FORMAT_R16_USCALED
    #print("statd VK_FORMAT_R16_USCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R16_USCALED"]
try:
    VK_FORMAT_R32G32B32A32_SFLOAT = jvulkanLib.VK_FORMAT_R32G32B32A32_SFLOAT
    #print("statd VK_FORMAT_R32G32B32A32_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32G32B32A32_SFLOAT"]
try:
    VK_FORMAT_R32G32B32A32_SINT = jvulkanLib.VK_FORMAT_R32G32B32A32_SINT
    #print("statd VK_FORMAT_R32G32B32A32_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32G32B32A32_SINT"]
try:
    VK_FORMAT_R32G32B32A32_UINT = jvulkanLib.VK_FORMAT_R32G32B32A32_UINT
    #print("statd VK_FORMAT_R32G32B32A32_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32G32B32A32_UINT"]
try:
    VK_FORMAT_R32G32B32_SFLOAT = jvulkanLib.VK_FORMAT_R32G32B32_SFLOAT
    #print("statd VK_FORMAT_R32G32B32_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32G32B32_SFLOAT"]
try:
    VK_FORMAT_R32G32B32_SINT = jvulkanLib.VK_FORMAT_R32G32B32_SINT
    #print("statd VK_FORMAT_R32G32B32_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32G32B32_SINT"]
try:
    VK_FORMAT_R32G32B32_UINT = jvulkanLib.VK_FORMAT_R32G32B32_UINT
    #print("statd VK_FORMAT_R32G32B32_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32G32B32_UINT"]
try:
    VK_FORMAT_R32G32_SFLOAT = jvulkanLib.VK_FORMAT_R32G32_SFLOAT
    #print("statd VK_FORMAT_R32G32_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32G32_SFLOAT"]
try:
    VK_FORMAT_R32G32_SINT = jvulkanLib.VK_FORMAT_R32G32_SINT
    #print("statd VK_FORMAT_R32G32_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32G32_SINT"]
try:
    VK_FORMAT_R32G32_UINT = jvulkanLib.VK_FORMAT_R32G32_UINT
    #print("statd VK_FORMAT_R32G32_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32G32_UINT"]
try:
    VK_FORMAT_R32_SFLOAT = jvulkanLib.VK_FORMAT_R32_SFLOAT
    #print("statd VK_FORMAT_R32_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32_SFLOAT"]
try:
    VK_FORMAT_R32_SINT = jvulkanLib.VK_FORMAT_R32_SINT
    #print("statd VK_FORMAT_R32_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32_SINT"]
try:
    VK_FORMAT_R32_UINT = jvulkanLib.VK_FORMAT_R32_UINT
    #print("statd VK_FORMAT_R32_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R32_UINT"]
try:
    VK_FORMAT_R4G4B4A4_UNORM_PACK16 = jvulkanLib.VK_FORMAT_R4G4B4A4_UNORM_PACK16
    #print("statd VK_FORMAT_R4G4B4A4_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R4G4B4A4_UNORM_PACK16"]
try:
    VK_FORMAT_R4G4_UNORM_PACK8 = jvulkanLib.VK_FORMAT_R4G4_UNORM_PACK8
    #print("statd VK_FORMAT_R4G4_UNORM_PACK8")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R4G4_UNORM_PACK8"]
try:
    VK_FORMAT_R5G5B5A1_UNORM_PACK16 = jvulkanLib.VK_FORMAT_R5G5B5A1_UNORM_PACK16
    #print("statd VK_FORMAT_R5G5B5A1_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R5G5B5A1_UNORM_PACK16"]
try:
    VK_FORMAT_R5G6B5_UNORM_PACK16 = jvulkanLib.VK_FORMAT_R5G6B5_UNORM_PACK16
    #print("statd VK_FORMAT_R5G6B5_UNORM_PACK16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R5G6B5_UNORM_PACK16"]
try:
    VK_FORMAT_R64G64B64A64_SFLOAT = jvulkanLib.VK_FORMAT_R64G64B64A64_SFLOAT
    #print("statd VK_FORMAT_R64G64B64A64_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64G64B64A64_SFLOAT"]
try:
    VK_FORMAT_R64G64B64A64_SINT = jvulkanLib.VK_FORMAT_R64G64B64A64_SINT
    #print("statd VK_FORMAT_R64G64B64A64_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64G64B64A64_SINT"]
try:
    VK_FORMAT_R64G64B64A64_UINT = jvulkanLib.VK_FORMAT_R64G64B64A64_UINT
    #print("statd VK_FORMAT_R64G64B64A64_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64G64B64A64_UINT"]
try:
    VK_FORMAT_R64G64B64_SFLOAT = jvulkanLib.VK_FORMAT_R64G64B64_SFLOAT
    #print("statd VK_FORMAT_R64G64B64_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64G64B64_SFLOAT"]
try:
    VK_FORMAT_R64G64B64_SINT = jvulkanLib.VK_FORMAT_R64G64B64_SINT
    #print("statd VK_FORMAT_R64G64B64_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64G64B64_SINT"]
try:
    VK_FORMAT_R64G64B64_UINT = jvulkanLib.VK_FORMAT_R64G64B64_UINT
    #print("statd VK_FORMAT_R64G64B64_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64G64B64_UINT"]
try:
    VK_FORMAT_R64G64_SFLOAT = jvulkanLib.VK_FORMAT_R64G64_SFLOAT
    #print("statd VK_FORMAT_R64G64_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64G64_SFLOAT"]
try:
    VK_FORMAT_R64G64_SINT = jvulkanLib.VK_FORMAT_R64G64_SINT
    #print("statd VK_FORMAT_R64G64_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64G64_SINT"]
try:
    VK_FORMAT_R64G64_UINT = jvulkanLib.VK_FORMAT_R64G64_UINT
    #print("statd VK_FORMAT_R64G64_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64G64_UINT"]
try:
    VK_FORMAT_R64_SFLOAT = jvulkanLib.VK_FORMAT_R64_SFLOAT
    #print("statd VK_FORMAT_R64_SFLOAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64_SFLOAT"]
try:
    VK_FORMAT_R64_SINT = jvulkanLib.VK_FORMAT_R64_SINT
    #print("statd VK_FORMAT_R64_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64_SINT"]
try:
    VK_FORMAT_R64_UINT = jvulkanLib.VK_FORMAT_R64_UINT
    #print("statd VK_FORMAT_R64_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R64_UINT"]
try:
    VK_FORMAT_R8G8B8A8_SINT = jvulkanLib.VK_FORMAT_R8G8B8A8_SINT
    #print("statd VK_FORMAT_R8G8B8A8_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8A8_SINT"]
try:
    VK_FORMAT_R8G8B8A8_SNORM = jvulkanLib.VK_FORMAT_R8G8B8A8_SNORM
    #print("statd VK_FORMAT_R8G8B8A8_SNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8A8_SNORM"]
try:
    VK_FORMAT_R8G8B8A8_SRGB = jvulkanLib.VK_FORMAT_R8G8B8A8_SRGB
    #print("statd VK_FORMAT_R8G8B8A8_SRGB")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8A8_SRGB"]
try:
    VK_FORMAT_R8G8B8A8_SSCALED = jvulkanLib.VK_FORMAT_R8G8B8A8_SSCALED
    #print("statd VK_FORMAT_R8G8B8A8_SSCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8A8_SSCALED"]
try:
    VK_FORMAT_R8G8B8A8_UINT = jvulkanLib.VK_FORMAT_R8G8B8A8_UINT
    #print("statd VK_FORMAT_R8G8B8A8_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8A8_UINT"]
try:
    VK_FORMAT_R8G8B8A8_UNORM = jvulkanLib.VK_FORMAT_R8G8B8A8_UNORM
    #print("statd VK_FORMAT_R8G8B8A8_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8A8_UNORM"]
try:
    VK_FORMAT_R8G8B8A8_USCALED = jvulkanLib.VK_FORMAT_R8G8B8A8_USCALED
    #print("statd VK_FORMAT_R8G8B8A8_USCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8A8_USCALED"]
try:
    VK_FORMAT_R8G8B8_SINT = jvulkanLib.VK_FORMAT_R8G8B8_SINT
    #print("statd VK_FORMAT_R8G8B8_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8_SINT"]
try:
    VK_FORMAT_R8G8B8_SNORM = jvulkanLib.VK_FORMAT_R8G8B8_SNORM
    #print("statd VK_FORMAT_R8G8B8_SNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8_SNORM"]
try:
    VK_FORMAT_R8G8B8_SRGB = jvulkanLib.VK_FORMAT_R8G8B8_SRGB
    #print("statd VK_FORMAT_R8G8B8_SRGB")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8_SRGB"]
try:
    VK_FORMAT_R8G8B8_SSCALED = jvulkanLib.VK_FORMAT_R8G8B8_SSCALED
    #print("statd VK_FORMAT_R8G8B8_SSCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8_SSCALED"]
try:
    VK_FORMAT_R8G8B8_UINT = jvulkanLib.VK_FORMAT_R8G8B8_UINT
    #print("statd VK_FORMAT_R8G8B8_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8_UINT"]
try:
    VK_FORMAT_R8G8B8_UNORM = jvulkanLib.VK_FORMAT_R8G8B8_UNORM
    #print("statd VK_FORMAT_R8G8B8_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8_UNORM"]
try:
    VK_FORMAT_R8G8B8_USCALED = jvulkanLib.VK_FORMAT_R8G8B8_USCALED
    #print("statd VK_FORMAT_R8G8B8_USCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8B8_USCALED"]
try:
    VK_FORMAT_R8G8_SINT = jvulkanLib.VK_FORMAT_R8G8_SINT
    #print("statd VK_FORMAT_R8G8_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8_SINT"]
try:
    VK_FORMAT_R8G8_SNORM = jvulkanLib.VK_FORMAT_R8G8_SNORM
    #print("statd VK_FORMAT_R8G8_SNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8_SNORM"]
try:
    VK_FORMAT_R8G8_SRGB = jvulkanLib.VK_FORMAT_R8G8_SRGB
    #print("statd VK_FORMAT_R8G8_SRGB")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8_SRGB"]
try:
    VK_FORMAT_R8G8_SSCALED = jvulkanLib.VK_FORMAT_R8G8_SSCALED
    #print("statd VK_FORMAT_R8G8_SSCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8_SSCALED"]
try:
    VK_FORMAT_R8G8_UINT = jvulkanLib.VK_FORMAT_R8G8_UINT
    #print("statd VK_FORMAT_R8G8_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8_UINT"]
try:
    VK_FORMAT_R8G8_UNORM = jvulkanLib.VK_FORMAT_R8G8_UNORM
    #print("statd VK_FORMAT_R8G8_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8_UNORM"]
try:
    VK_FORMAT_R8G8_USCALED = jvulkanLib.VK_FORMAT_R8G8_USCALED
    #print("statd VK_FORMAT_R8G8_USCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8G8_USCALED"]
try:
    VK_FORMAT_R8_SINT = jvulkanLib.VK_FORMAT_R8_SINT
    #print("statd VK_FORMAT_R8_SINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8_SINT"]
try:
    VK_FORMAT_R8_SNORM = jvulkanLib.VK_FORMAT_R8_SNORM
    #print("statd VK_FORMAT_R8_SNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8_SNORM"]
try:
    VK_FORMAT_R8_SRGB = jvulkanLib.VK_FORMAT_R8_SRGB
    #print("statd VK_FORMAT_R8_SRGB")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8_SRGB"]
try:
    VK_FORMAT_R8_SSCALED = jvulkanLib.VK_FORMAT_R8_SSCALED
    #print("statd VK_FORMAT_R8_SSCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8_SSCALED"]
try:
    VK_FORMAT_R8_UINT = jvulkanLib.VK_FORMAT_R8_UINT
    #print("statd VK_FORMAT_R8_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8_UINT"]
try:
    VK_FORMAT_R8_UNORM = jvulkanLib.VK_FORMAT_R8_UNORM
    #print("statd VK_FORMAT_R8_UNORM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8_UNORM"]
try:
    VK_FORMAT_R8_USCALED = jvulkanLib.VK_FORMAT_R8_USCALED
    #print("statd VK_FORMAT_R8_USCALED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_R8_USCALED"]
try:
    VK_FORMAT_S8_UINT = jvulkanLib.VK_FORMAT_S8_UINT
    #print("statd VK_FORMAT_S8_UINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_S8_UINT"]
try:
    VK_FORMAT_UNDEFINED = jvulkanLib.VK_FORMAT_UNDEFINED
    #print("statd VK_FORMAT_UNDEFINED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_UNDEFINED"]
try:
    VK_FORMAT_X8_D24_UNORM_PACK32 = jvulkanLib.VK_FORMAT_X8_D24_UNORM_PACK32
    #print("statd VK_FORMAT_X8_D24_UNORM_PACK32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FORMAT_X8_D24_UNORM_PACK32"]
try:
    VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR = jvulkanLib.VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR
    #print("statd VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR"]
try:
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_ENUM_KHR = jvulkanLib.VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_ENUM_KHR
    #print("statd VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_ENUM_KHR"]
try:
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR = jvulkanLib.VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR
    #print("statd VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR"]
try:
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR = jvulkanLib.VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR
    #print("statd VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR"]
try:
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR = jvulkanLib.VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR
    #print("statd VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR"]
try:
    VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR = jvulkanLib.VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR
    #print("statd VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR"]
try:
    VK_FRAGMENT_SHADING_RATE_MAX_ENUM_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_MAX_ENUM_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_MAX_ENUM_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV"]
try:
    VK_FRAGMENT_SHADING_RATE_TYPE_MAX_ENUM_NV = jvulkanLib.VK_FRAGMENT_SHADING_RATE_TYPE_MAX_ENUM_NV
    #print("statd VK_FRAGMENT_SHADING_RATE_TYPE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAGMENT_SHADING_RATE_TYPE_MAX_ENUM_NV"]
try:
    VK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT = jvulkanLib.VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT
    #print("statd VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT"]
try:
    VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR = jvulkanLib.VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR
    #print("statd VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR"]
try:
    VK_FRONT_FACE_CLOCKWISE = jvulkanLib.VK_FRONT_FACE_CLOCKWISE
    #print("statd VK_FRONT_FACE_CLOCKWISE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRONT_FACE_CLOCKWISE"]
try:
    VK_FRONT_FACE_COUNTER_CLOCKWISE = jvulkanLib.VK_FRONT_FACE_COUNTER_CLOCKWISE
    #print("statd VK_FRONT_FACE_COUNTER_CLOCKWISE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRONT_FACE_COUNTER_CLOCKWISE"]
try:
    VK_FRONT_FACE_MAX_ENUM = jvulkanLib.VK_FRONT_FACE_MAX_ENUM
    #print("statd VK_FRONT_FACE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_FRONT_FACE_MAX_ENUM"]
try:
    VK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR = jvulkanLib.VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR
    #print("statd VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR"]
try:
    VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV = jvulkanLib.VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV
    #print("statd VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV"]
try:
    VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR = jvulkanLib.VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR
    #print("statd VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR"]
try:
    VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV = jvulkanLib.VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV
    #print("statd VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV"]
try:
    VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV = jvulkanLib.VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV
    #print("statd VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV"]
try:
    VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR = jvulkanLib.VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR
    #print("statd VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR"]
try:
    VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR = jvulkanLib.VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR
    #print("statd VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR"]
try:
    VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR = jvulkanLib.VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR
    #print("statd VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR"]
try:
    VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV = jvulkanLib.VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV
    #print("statd VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV"]
try:
    VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR = jvulkanLib.VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR
    #print("statd VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR"]
try:
    VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV = jvulkanLib.VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV
    #print("statd VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV"]
try:
    VK_GEOMETRY_OPAQUE_BIT_KHR = jvulkanLib.VK_GEOMETRY_OPAQUE_BIT_KHR
    #print("statd VK_GEOMETRY_OPAQUE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_OPAQUE_BIT_KHR"]
try:
    VK_GEOMETRY_OPAQUE_BIT_NV = jvulkanLib.VK_GEOMETRY_OPAQUE_BIT_NV
    #print("statd VK_GEOMETRY_OPAQUE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_OPAQUE_BIT_NV"]
try:
    VK_GEOMETRY_TYPE_AABBS_KHR = jvulkanLib.VK_GEOMETRY_TYPE_AABBS_KHR
    #print("statd VK_GEOMETRY_TYPE_AABBS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_TYPE_AABBS_KHR"]
try:
    VK_GEOMETRY_TYPE_AABBS_NV = jvulkanLib.VK_GEOMETRY_TYPE_AABBS_NV
    #print("statd VK_GEOMETRY_TYPE_AABBS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_TYPE_AABBS_NV"]
try:
    VK_GEOMETRY_TYPE_INSTANCES_KHR = jvulkanLib.VK_GEOMETRY_TYPE_INSTANCES_KHR
    #print("statd VK_GEOMETRY_TYPE_INSTANCES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_TYPE_INSTANCES_KHR"]
try:
    VK_GEOMETRY_TYPE_MAX_ENUM_KHR = jvulkanLib.VK_GEOMETRY_TYPE_MAX_ENUM_KHR
    #print("statd VK_GEOMETRY_TYPE_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_TYPE_MAX_ENUM_KHR"]
try:
    VK_GEOMETRY_TYPE_TRIANGLES_KHR = jvulkanLib.VK_GEOMETRY_TYPE_TRIANGLES_KHR
    #print("statd VK_GEOMETRY_TYPE_TRIANGLES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_TYPE_TRIANGLES_KHR"]
try:
    VK_GEOMETRY_TYPE_TRIANGLES_NV = jvulkanLib.VK_GEOMETRY_TYPE_TRIANGLES_NV
    #print("statd VK_GEOMETRY_TYPE_TRIANGLES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GEOMETRY_TYPE_TRIANGLES_NV"]
try:
    VK_GRAPHICS_PIPELINE_LIBRARY_FLAG_BITS_MAX_ENUM_EXT = jvulkanLib.VK_GRAPHICS_PIPELINE_LIBRARY_FLAG_BITS_MAX_ENUM_EXT
    #print("statd VK_GRAPHICS_PIPELINE_LIBRARY_FLAG_BITS_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GRAPHICS_PIPELINE_LIBRARY_FLAG_BITS_MAX_ENUM_EXT"]
try:
    VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT = jvulkanLib.VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT
    #print("statd VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT"]
try:
    VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT = jvulkanLib.VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT
    #print("statd VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT"]
try:
    VK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT = jvulkanLib.VK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT
    #print("statd VK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT"]
try:
    VK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT = jvulkanLib.VK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT
    #print("statd VK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT"]
try:
    VK_IMAGE_ASPECT_COLOR_BIT = jvulkanLib.VK_IMAGE_ASPECT_COLOR_BIT
    #print("statd VK_IMAGE_ASPECT_COLOR_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_COLOR_BIT"]
try:
    VK_IMAGE_ASPECT_DEPTH_BIT = jvulkanLib.VK_IMAGE_ASPECT_DEPTH_BIT
    #print("statd VK_IMAGE_ASPECT_DEPTH_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_DEPTH_BIT"]
try:
    VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM
    #print("statd VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM"]
try:
    VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT = jvulkanLib.VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT
    #print("statd VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT"]
try:
    VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT = jvulkanLib.VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT
    #print("statd VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT"]
try:
    VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT = jvulkanLib.VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT
    #print("statd VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT"]
try:
    VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT = jvulkanLib.VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT
    #print("statd VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT"]
try:
    VK_IMAGE_ASPECT_METADATA_BIT = jvulkanLib.VK_IMAGE_ASPECT_METADATA_BIT
    #print("statd VK_IMAGE_ASPECT_METADATA_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_METADATA_BIT"]
try:
    VK_IMAGE_ASPECT_NONE = jvulkanLib.VK_IMAGE_ASPECT_NONE
    #print("statd VK_IMAGE_ASPECT_NONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_NONE"]
try:
    VK_IMAGE_ASPECT_NONE_KHR = jvulkanLib.VK_IMAGE_ASPECT_NONE_KHR
    #print("statd VK_IMAGE_ASPECT_NONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_NONE_KHR"]
try:
    VK_IMAGE_ASPECT_PLANE_0_BIT = jvulkanLib.VK_IMAGE_ASPECT_PLANE_0_BIT
    #print("statd VK_IMAGE_ASPECT_PLANE_0_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_PLANE_0_BIT"]
try:
    VK_IMAGE_ASPECT_PLANE_0_BIT_KHR = jvulkanLib.VK_IMAGE_ASPECT_PLANE_0_BIT_KHR
    #print("statd VK_IMAGE_ASPECT_PLANE_0_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_PLANE_0_BIT_KHR"]
try:
    VK_IMAGE_ASPECT_PLANE_1_BIT = jvulkanLib.VK_IMAGE_ASPECT_PLANE_1_BIT
    #print("statd VK_IMAGE_ASPECT_PLANE_1_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_PLANE_1_BIT"]
try:
    VK_IMAGE_ASPECT_PLANE_1_BIT_KHR = jvulkanLib.VK_IMAGE_ASPECT_PLANE_1_BIT_KHR
    #print("statd VK_IMAGE_ASPECT_PLANE_1_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_PLANE_1_BIT_KHR"]
try:
    VK_IMAGE_ASPECT_PLANE_2_BIT = jvulkanLib.VK_IMAGE_ASPECT_PLANE_2_BIT
    #print("statd VK_IMAGE_ASPECT_PLANE_2_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_PLANE_2_BIT"]
try:
    VK_IMAGE_ASPECT_PLANE_2_BIT_KHR = jvulkanLib.VK_IMAGE_ASPECT_PLANE_2_BIT_KHR
    #print("statd VK_IMAGE_ASPECT_PLANE_2_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_PLANE_2_BIT_KHR"]
try:
    VK_IMAGE_ASPECT_STENCIL_BIT = jvulkanLib.VK_IMAGE_ASPECT_STENCIL_BIT
    #print("statd VK_IMAGE_ASPECT_STENCIL_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_ASPECT_STENCIL_BIT"]
try:
    VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT = jvulkanLib.VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT
    #print("statd VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT"]
try:
    VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR = jvulkanLib.VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR
    #print("statd VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR"]
try:
    VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT = jvulkanLib.VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT
    #print("statd VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT"]
try:
    VK_IMAGE_CREATE_ALIAS_BIT = jvulkanLib.VK_IMAGE_CREATE_ALIAS_BIT
    #print("statd VK_IMAGE_CREATE_ALIAS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_ALIAS_BIT"]
try:
    VK_IMAGE_CREATE_ALIAS_BIT_KHR = jvulkanLib.VK_IMAGE_CREATE_ALIAS_BIT_KHR
    #print("statd VK_IMAGE_CREATE_ALIAS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_ALIAS_BIT_KHR"]
try:
    VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT = jvulkanLib.VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT
    #print("statd VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT"]
try:
    VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR = jvulkanLib.VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR
    #print("statd VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR"]
try:
    VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV = jvulkanLib.VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV
    #print("statd VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV"]
try:
    VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT = jvulkanLib.VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT
    #print("statd VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT"]
try:
    VK_IMAGE_CREATE_DISJOINT_BIT = jvulkanLib.VK_IMAGE_CREATE_DISJOINT_BIT
    #print("statd VK_IMAGE_CREATE_DISJOINT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_DISJOINT_BIT"]
try:
    VK_IMAGE_CREATE_DISJOINT_BIT_KHR = jvulkanLib.VK_IMAGE_CREATE_DISJOINT_BIT_KHR
    #print("statd VK_IMAGE_CREATE_DISJOINT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_DISJOINT_BIT_KHR"]
try:
    VK_IMAGE_CREATE_EXTENDED_USAGE_BIT = jvulkanLib.VK_IMAGE_CREATE_EXTENDED_USAGE_BIT
    #print("statd VK_IMAGE_CREATE_EXTENDED_USAGE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_EXTENDED_USAGE_BIT"]
try:
    VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR = jvulkanLib.VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR
    #print("statd VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR"]
try:
    VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM = jvulkanLib.VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM
    #print("statd VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM"]
try:
    VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT = jvulkanLib.VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT
    #print("statd VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT"]
try:
    VK_IMAGE_CREATE_PROTECTED_BIT = jvulkanLib.VK_IMAGE_CREATE_PROTECTED_BIT
    #print("statd VK_IMAGE_CREATE_PROTECTED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_PROTECTED_BIT"]
try:
    VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT = jvulkanLib.VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT
    #print("statd VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT"]
try:
    VK_IMAGE_CREATE_SPARSE_ALIASED_BIT = jvulkanLib.VK_IMAGE_CREATE_SPARSE_ALIASED_BIT
    #print("statd VK_IMAGE_CREATE_SPARSE_ALIASED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_SPARSE_ALIASED_BIT"]
try:
    VK_IMAGE_CREATE_SPARSE_BINDING_BIT = jvulkanLib.VK_IMAGE_CREATE_SPARSE_BINDING_BIT
    #print("statd VK_IMAGE_CREATE_SPARSE_BINDING_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_SPARSE_BINDING_BIT"]
try:
    VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT = jvulkanLib.VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT
    #print("statd VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT"]
try:
    VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT = jvulkanLib.VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT
    #print("statd VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT"]
try:
    VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR = jvulkanLib.VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR
    #print("statd VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR"]
try:
    VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT = jvulkanLib.VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT
    #print("statd VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT"]
try:
    VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR = jvulkanLib.VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR
    #print("statd VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR"]
try:
    VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR = jvulkanLib.VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR
    #print("statd VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR"]
try:
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR = jvulkanLib.VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR
    #print("statd VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR"]
try:
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR = jvulkanLib.VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR
    #print("statd VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR"]
try:
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR = jvulkanLib.VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR
    #print("statd VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR"]
try:
    VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT = jvulkanLib.VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT
    #print("statd VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT"]
try:
    VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR = jvulkanLib.VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR
    #print("statd VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR"]
try:
    VK_IMAGE_LAYOUT_GENERAL = jvulkanLib.VK_IMAGE_LAYOUT_GENERAL
    #print("statd VK_IMAGE_LAYOUT_GENERAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_GENERAL"]
try:
    VK_IMAGE_LAYOUT_MAX_ENUM = jvulkanLib.VK_IMAGE_LAYOUT_MAX_ENUM
    #print("statd VK_IMAGE_LAYOUT_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_MAX_ENUM"]
try:
    VK_IMAGE_LAYOUT_PREINITIALIZED = jvulkanLib.VK_IMAGE_LAYOUT_PREINITIALIZED
    #print("statd VK_IMAGE_LAYOUT_PREINITIALIZED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_PREINITIALIZED"]
try:
    VK_IMAGE_LAYOUT_PRESENT_SRC_KHR = jvulkanLib.VK_IMAGE_LAYOUT_PRESENT_SRC_KHR
    #print("statd VK_IMAGE_LAYOUT_PRESENT_SRC_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_PRESENT_SRC_KHR"]
try:
    VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR = jvulkanLib.VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR
    #print("statd VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR"]
try:
    VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV = jvulkanLib.VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV
    #print("statd VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV"]
try:
    VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR = jvulkanLib.VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR
    #print("statd VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR"]
try:
    VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR = jvulkanLib.VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR
    #print("statd VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR"]
try:
    VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR = jvulkanLib.VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR
    #print("statd VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR"]
try:
    VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = jvulkanLib.VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL
    #print("statd VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL"]
try:
    VK_IMAGE_LAYOUT_UNDEFINED = jvulkanLib.VK_IMAGE_LAYOUT_UNDEFINED
    #print("statd VK_IMAGE_LAYOUT_UNDEFINED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_LAYOUT_UNDEFINED"]
try:
    VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT = jvulkanLib.VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT
    #print("statd VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT"]
try:
    VK_IMAGE_TILING_LINEAR = jvulkanLib.VK_IMAGE_TILING_LINEAR
    #print("statd VK_IMAGE_TILING_LINEAR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_TILING_LINEAR"]
try:
    VK_IMAGE_TILING_MAX_ENUM = jvulkanLib.VK_IMAGE_TILING_MAX_ENUM
    #print("statd VK_IMAGE_TILING_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_TILING_MAX_ENUM"]
try:
    VK_IMAGE_TILING_OPTIMAL = jvulkanLib.VK_IMAGE_TILING_OPTIMAL
    #print("statd VK_IMAGE_TILING_OPTIMAL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_TILING_OPTIMAL"]
try:
    VK_IMAGE_TYPE_1D = jvulkanLib.VK_IMAGE_TYPE_1D
    #print("statd VK_IMAGE_TYPE_1D")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_TYPE_1D"]
try:
    VK_IMAGE_TYPE_2D = jvulkanLib.VK_IMAGE_TYPE_2D
    #print("statd VK_IMAGE_TYPE_2D")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_TYPE_2D"]
try:
    VK_IMAGE_TYPE_3D = jvulkanLib.VK_IMAGE_TYPE_3D
    #print("statd VK_IMAGE_TYPE_3D")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_TYPE_3D"]
try:
    VK_IMAGE_TYPE_MAX_ENUM = jvulkanLib.VK_IMAGE_TYPE_MAX_ENUM
    #print("statd VK_IMAGE_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_TYPE_MAX_ENUM"]
try:
    VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT = jvulkanLib.VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT
    #print("statd VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT"]
try:
    VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT = jvulkanLib.VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT
    #print("statd VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT"]
try:
    VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM
    #print("statd VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM"]
try:
    VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT = jvulkanLib.VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT
    #print("statd VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT"]
try:
    VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = jvulkanLib.VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR
    #print("statd VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"]
try:
    VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT = jvulkanLib.VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT
    #print("statd VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT"]
try:
    VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI = jvulkanLib.VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI
    #print("statd VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI"]
try:
    VK_IMAGE_USAGE_SAMPLED_BIT = jvulkanLib.VK_IMAGE_USAGE_SAMPLED_BIT
    #print("statd VK_IMAGE_USAGE_SAMPLED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_SAMPLED_BIT"]
try:
    VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV = jvulkanLib.VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV
    #print("statd VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV"]
try:
    VK_IMAGE_USAGE_STORAGE_BIT = jvulkanLib.VK_IMAGE_USAGE_STORAGE_BIT
    #print("statd VK_IMAGE_USAGE_STORAGE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_STORAGE_BIT"]
try:
    VK_IMAGE_USAGE_TRANSFER_DST_BIT = jvulkanLib.VK_IMAGE_USAGE_TRANSFER_DST_BIT
    #print("statd VK_IMAGE_USAGE_TRANSFER_DST_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_TRANSFER_DST_BIT"]
try:
    VK_IMAGE_USAGE_TRANSFER_SRC_BIT = jvulkanLib.VK_IMAGE_USAGE_TRANSFER_SRC_BIT
    #print("statd VK_IMAGE_USAGE_TRANSFER_SRC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_TRANSFER_SRC_BIT"]
try:
    VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT = jvulkanLib.VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT
    #print("statd VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT"]
try:
    VK_IMAGE_VIEW_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_IMAGE_VIEW_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_IMAGE_VIEW_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT = jvulkanLib.VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT
    #print("statd VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT"]
try:
    VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT = jvulkanLib.VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT
    #print("statd VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT"]
try:
    VK_IMAGE_VIEW_TYPE_1D = jvulkanLib.VK_IMAGE_VIEW_TYPE_1D
    #print("statd VK_IMAGE_VIEW_TYPE_1D")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_TYPE_1D"]
try:
    VK_IMAGE_VIEW_TYPE_1D_ARRAY = jvulkanLib.VK_IMAGE_VIEW_TYPE_1D_ARRAY
    #print("statd VK_IMAGE_VIEW_TYPE_1D_ARRAY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_TYPE_1D_ARRAY"]
try:
    VK_IMAGE_VIEW_TYPE_2D = jvulkanLib.VK_IMAGE_VIEW_TYPE_2D
    #print("statd VK_IMAGE_VIEW_TYPE_2D")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_TYPE_2D"]
try:
    VK_IMAGE_VIEW_TYPE_2D_ARRAY = jvulkanLib.VK_IMAGE_VIEW_TYPE_2D_ARRAY
    #print("statd VK_IMAGE_VIEW_TYPE_2D_ARRAY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_TYPE_2D_ARRAY"]
try:
    VK_IMAGE_VIEW_TYPE_3D = jvulkanLib.VK_IMAGE_VIEW_TYPE_3D
    #print("statd VK_IMAGE_VIEW_TYPE_3D")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_TYPE_3D"]
try:
    VK_IMAGE_VIEW_TYPE_CUBE = jvulkanLib.VK_IMAGE_VIEW_TYPE_CUBE
    #print("statd VK_IMAGE_VIEW_TYPE_CUBE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_TYPE_CUBE"]
try:
    VK_IMAGE_VIEW_TYPE_CUBE_ARRAY = jvulkanLib.VK_IMAGE_VIEW_TYPE_CUBE_ARRAY
    #print("statd VK_IMAGE_VIEW_TYPE_CUBE_ARRAY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_TYPE_CUBE_ARRAY"]
try:
    VK_IMAGE_VIEW_TYPE_MAX_ENUM = jvulkanLib.VK_IMAGE_VIEW_TYPE_MAX_ENUM
    #print("statd VK_IMAGE_VIEW_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_IMAGE_VIEW_TYPE_MAX_ENUM"]
try:
    VK_INCOMPLETE = jvulkanLib.VK_INCOMPLETE
    #print("statd VK_INCOMPLETE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INCOMPLETE"]
try:
    VK_INDEX_TYPE_MAX_ENUM = jvulkanLib.VK_INDEX_TYPE_MAX_ENUM
    #print("statd VK_INDEX_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDEX_TYPE_MAX_ENUM"]
try:
    VK_INDEX_TYPE_NONE_KHR = jvulkanLib.VK_INDEX_TYPE_NONE_KHR
    #print("statd VK_INDEX_TYPE_NONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDEX_TYPE_NONE_KHR"]
try:
    VK_INDEX_TYPE_NONE_NV = jvulkanLib.VK_INDEX_TYPE_NONE_NV
    #print("statd VK_INDEX_TYPE_NONE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDEX_TYPE_NONE_NV"]
try:
    VK_INDEX_TYPE_UINT16 = jvulkanLib.VK_INDEX_TYPE_UINT16
    #print("statd VK_INDEX_TYPE_UINT16")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDEX_TYPE_UINT16"]
try:
    VK_INDEX_TYPE_UINT32 = jvulkanLib.VK_INDEX_TYPE_UINT32
    #print("statd VK_INDEX_TYPE_UINT32")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDEX_TYPE_UINT32"]
try:
    VK_INDEX_TYPE_UINT8_EXT = jvulkanLib.VK_INDEX_TYPE_UINT8_EXT
    #print("statd VK_INDEX_TYPE_UINT8_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDEX_TYPE_UINT8_EXT"]
try:
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV = jvulkanLib.VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV
    #print("statd VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV"]
try:
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NV = jvulkanLib.VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NV
    #print("statd VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NV"]
try:
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV = jvulkanLib.VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV
    #print("statd VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV"]
try:
    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV = jvulkanLib.VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV
    #print("statd VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV"]
try:
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV = jvulkanLib.VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV
    #print("statd VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV"]
try:
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV = jvulkanLib.VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV
    #print("statd VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV"]
try:
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV = jvulkanLib.VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV
    #print("statd VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV"]
try:
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV = jvulkanLib.VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV
    #print("statd VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV"]
try:
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NV = jvulkanLib.VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NV
    #print("statd VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NV"]
try:
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV = jvulkanLib.VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV
    #print("statd VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV"]
try:
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV = jvulkanLib.VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV
    #print("statd VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV"]
try:
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV = jvulkanLib.VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV
    #print("statd VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV"]
try:
    VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV = jvulkanLib.VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV
    #print("statd VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV"]
try:
    VK_INDIRECT_STATE_FLAG_BITS_MAX_ENUM_NV = jvulkanLib.VK_INDIRECT_STATE_FLAG_BITS_MAX_ENUM_NV
    #print("statd VK_INDIRECT_STATE_FLAG_BITS_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_STATE_FLAG_BITS_MAX_ENUM_NV"]
try:
    VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV = jvulkanLib.VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV
    #print("statd VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV"]
try:
    VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR = jvulkanLib.VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR
    #print("statd VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR"]
try:
    VK_INSTANCE_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_INSTANCE_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_INSTANCE_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INSTANCE_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE = jvulkanLib.VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE
    #print("statd VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE"]
try:
    VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM = jvulkanLib.VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM
    #print("statd VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM"]
try:
    VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT = jvulkanLib.VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT
    #print("statd VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT"]
try:
    VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT = jvulkanLib.VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT
    #print("statd VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT"]
try:
    VK_LINE_RASTERIZATION_MODE_MAX_ENUM_EXT = jvulkanLib.VK_LINE_RASTERIZATION_MODE_MAX_ENUM_EXT
    #print("statd VK_LINE_RASTERIZATION_MODE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LINE_RASTERIZATION_MODE_MAX_ENUM_EXT"]
try:
    VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT = jvulkanLib.VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT
    #print("statd VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT"]
try:
    VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT = jvulkanLib.VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT
    #print("statd VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT"]
try:
    VK_LOGIC_OP_AND = jvulkanLib.VK_LOGIC_OP_AND
    #print("statd VK_LOGIC_OP_AND")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_AND"]
try:
    VK_LOGIC_OP_AND_INVERTED = jvulkanLib.VK_LOGIC_OP_AND_INVERTED
    #print("statd VK_LOGIC_OP_AND_INVERTED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_AND_INVERTED"]
try:
    VK_LOGIC_OP_AND_REVERSE = jvulkanLib.VK_LOGIC_OP_AND_REVERSE
    #print("statd VK_LOGIC_OP_AND_REVERSE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_AND_REVERSE"]
try:
    VK_LOGIC_OP_CLEAR = jvulkanLib.VK_LOGIC_OP_CLEAR
    #print("statd VK_LOGIC_OP_CLEAR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_CLEAR"]
try:
    VK_LOGIC_OP_COPY = jvulkanLib.VK_LOGIC_OP_COPY
    #print("statd VK_LOGIC_OP_COPY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_COPY"]
try:
    VK_LOGIC_OP_COPY_INVERTED = jvulkanLib.VK_LOGIC_OP_COPY_INVERTED
    #print("statd VK_LOGIC_OP_COPY_INVERTED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_COPY_INVERTED"]
try:
    VK_LOGIC_OP_EQUIVALENT = jvulkanLib.VK_LOGIC_OP_EQUIVALENT
    #print("statd VK_LOGIC_OP_EQUIVALENT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_EQUIVALENT"]
try:
    VK_LOGIC_OP_INVERT = jvulkanLib.VK_LOGIC_OP_INVERT
    #print("statd VK_LOGIC_OP_INVERT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_INVERT"]
try:
    VK_LOGIC_OP_MAX_ENUM = jvulkanLib.VK_LOGIC_OP_MAX_ENUM
    #print("statd VK_LOGIC_OP_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_MAX_ENUM"]
try:
    VK_LOGIC_OP_NAND = jvulkanLib.VK_LOGIC_OP_NAND
    #print("statd VK_LOGIC_OP_NAND")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_NAND"]
try:
    VK_LOGIC_OP_NOR = jvulkanLib.VK_LOGIC_OP_NOR
    #print("statd VK_LOGIC_OP_NOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_NOR"]
try:
    VK_LOGIC_OP_NO_OP = jvulkanLib.VK_LOGIC_OP_NO_OP
    #print("statd VK_LOGIC_OP_NO_OP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_NO_OP"]
try:
    VK_LOGIC_OP_OR = jvulkanLib.VK_LOGIC_OP_OR
    #print("statd VK_LOGIC_OP_OR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_OR"]
try:
    VK_LOGIC_OP_OR_INVERTED = jvulkanLib.VK_LOGIC_OP_OR_INVERTED
    #print("statd VK_LOGIC_OP_OR_INVERTED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_OR_INVERTED"]
try:
    VK_LOGIC_OP_OR_REVERSE = jvulkanLib.VK_LOGIC_OP_OR_REVERSE
    #print("statd VK_LOGIC_OP_OR_REVERSE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_OR_REVERSE"]
try:
    VK_LOGIC_OP_SET = jvulkanLib.VK_LOGIC_OP_SET
    #print("statd VK_LOGIC_OP_SET")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_SET"]
try:
    VK_LOGIC_OP_XOR = jvulkanLib.VK_LOGIC_OP_XOR
    #print("statd VK_LOGIC_OP_XOR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_LOGIC_OP_XOR"]
try:
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT = jvulkanLib.VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT
    #print("statd VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT"]
try:
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR = jvulkanLib.VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR
    #print("statd VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR"]
try:
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT = jvulkanLib.VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT
    #print("statd VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT"]
try:
    VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR = jvulkanLib.VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR
    #print("statd VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR"]
try:
    VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT = jvulkanLib.VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT
    #print("statd VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT"]
try:
    VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR = jvulkanLib.VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR
    #print("statd VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR"]
try:
    VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_MEMORY_HEAP_DEVICE_LOCAL_BIT = jvulkanLib.VK_MEMORY_HEAP_DEVICE_LOCAL_BIT
    #print("statd VK_MEMORY_HEAP_DEVICE_LOCAL_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_HEAP_DEVICE_LOCAL_BIT"]
try:
    VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM
    #print("statd VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM"]
try:
    VK_MEMORY_HEAP_MULTI_INSTANCE_BIT = jvulkanLib.VK_MEMORY_HEAP_MULTI_INSTANCE_BIT
    #print("statd VK_MEMORY_HEAP_MULTI_INSTANCE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_HEAP_MULTI_INSTANCE_BIT"]
try:
    VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR = jvulkanLib.VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR
    #print("statd VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR"]
try:
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD = jvulkanLib.VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD
    #print("statd VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD"]
try:
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD = jvulkanLib.VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD
    #print("statd VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD"]
try:
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD = jvulkanLib.VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD
    #print("statd VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD"]
try:
    VK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD = jvulkanLib.VK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD
    #print("statd VK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD"]
try:
    VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD = jvulkanLib.VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD
    #print("statd VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD"]
try:
    VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT = jvulkanLib.VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT
    #print("statd VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT"]
try:
    VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD = jvulkanLib.VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD
    #print("statd VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD"]
try:
    VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM
    #print("statd VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM"]
try:
    VK_MEMORY_PROPERTY_HOST_CACHED_BIT = jvulkanLib.VK_MEMORY_PROPERTY_HOST_CACHED_BIT
    #print("statd VK_MEMORY_PROPERTY_HOST_CACHED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_PROPERTY_HOST_CACHED_BIT"]
try:
    VK_MEMORY_PROPERTY_HOST_COHERENT_BIT = jvulkanLib.VK_MEMORY_PROPERTY_HOST_COHERENT_BIT
    #print("statd VK_MEMORY_PROPERTY_HOST_COHERENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_PROPERTY_HOST_COHERENT_BIT"]
try:
    VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT = jvulkanLib.VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT
    #print("statd VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT"]
try:
    VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT = jvulkanLib.VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT
    #print("statd VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT"]
try:
    VK_MEMORY_PROPERTY_PROTECTED_BIT = jvulkanLib.VK_MEMORY_PROPERTY_PROTECTED_BIT
    #print("statd VK_MEMORY_PROPERTY_PROTECTED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_PROPERTY_PROTECTED_BIT"]
try:
    VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV = jvulkanLib.VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV
    #print("statd VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV"]
try:
    VK_NOT_READY = jvulkanLib.VK_NOT_READY
    #print("statd VK_NOT_READY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_NOT_READY"]
try:
    VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR = jvulkanLib.VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR
    #print("statd VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR"]
try:
    VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV = jvulkanLib.VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV
    #print("statd VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV"]
try:
    VK_OBJECT_TYPE_BUFFER = jvulkanLib.VK_OBJECT_TYPE_BUFFER
    #print("statd VK_OBJECT_TYPE_BUFFER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_BUFFER"]
try:
    VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA = jvulkanLib.VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA
    #print("statd VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA"]
try:
    VK_OBJECT_TYPE_BUFFER_VIEW = jvulkanLib.VK_OBJECT_TYPE_BUFFER_VIEW
    #print("statd VK_OBJECT_TYPE_BUFFER_VIEW")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_BUFFER_VIEW"]
try:
    VK_OBJECT_TYPE_COMMAND_BUFFER = jvulkanLib.VK_OBJECT_TYPE_COMMAND_BUFFER
    #print("statd VK_OBJECT_TYPE_COMMAND_BUFFER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_COMMAND_BUFFER"]
try:
    VK_OBJECT_TYPE_COMMAND_POOL = jvulkanLib.VK_OBJECT_TYPE_COMMAND_POOL
    #print("statd VK_OBJECT_TYPE_COMMAND_POOL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_COMMAND_POOL"]
try:
    VK_OBJECT_TYPE_CU_FUNCTION_NVX = jvulkanLib.VK_OBJECT_TYPE_CU_FUNCTION_NVX
    #print("statd VK_OBJECT_TYPE_CU_FUNCTION_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_CU_FUNCTION_NVX"]
try:
    VK_OBJECT_TYPE_CU_MODULE_NVX = jvulkanLib.VK_OBJECT_TYPE_CU_MODULE_NVX
    #print("statd VK_OBJECT_TYPE_CU_MODULE_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_CU_MODULE_NVX"]
try:
    VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT = jvulkanLib.VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT
    #print("statd VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT"]
try:
    VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT = jvulkanLib.VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT
    #print("statd VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT"]
try:
    VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR = jvulkanLib.VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR
    #print("statd VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR"]
try:
    VK_OBJECT_TYPE_DESCRIPTOR_POOL = jvulkanLib.VK_OBJECT_TYPE_DESCRIPTOR_POOL
    #print("statd VK_OBJECT_TYPE_DESCRIPTOR_POOL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DESCRIPTOR_POOL"]
try:
    VK_OBJECT_TYPE_DESCRIPTOR_SET = jvulkanLib.VK_OBJECT_TYPE_DESCRIPTOR_SET
    #print("statd VK_OBJECT_TYPE_DESCRIPTOR_SET")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DESCRIPTOR_SET"]
try:
    VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT = jvulkanLib.VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT
    #print("statd VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT"]
try:
    VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE = jvulkanLib.VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE
    #print("statd VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE"]
try:
    VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR = jvulkanLib.VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR
    #print("statd VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR"]
try:
    VK_OBJECT_TYPE_DEVICE = jvulkanLib.VK_OBJECT_TYPE_DEVICE
    #print("statd VK_OBJECT_TYPE_DEVICE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DEVICE"]
try:
    VK_OBJECT_TYPE_DEVICE_MEMORY = jvulkanLib.VK_OBJECT_TYPE_DEVICE_MEMORY
    #print("statd VK_OBJECT_TYPE_DEVICE_MEMORY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DEVICE_MEMORY"]
try:
    VK_OBJECT_TYPE_DISPLAY_KHR = jvulkanLib.VK_OBJECT_TYPE_DISPLAY_KHR
    #print("statd VK_OBJECT_TYPE_DISPLAY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DISPLAY_KHR"]
try:
    VK_OBJECT_TYPE_DISPLAY_MODE_KHR = jvulkanLib.VK_OBJECT_TYPE_DISPLAY_MODE_KHR
    #print("statd VK_OBJECT_TYPE_DISPLAY_MODE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_DISPLAY_MODE_KHR"]
try:
    VK_OBJECT_TYPE_EVENT = jvulkanLib.VK_OBJECT_TYPE_EVENT
    #print("statd VK_OBJECT_TYPE_EVENT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_EVENT"]
try:
    VK_OBJECT_TYPE_FENCE = jvulkanLib.VK_OBJECT_TYPE_FENCE
    #print("statd VK_OBJECT_TYPE_FENCE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_FENCE"]
try:
    VK_OBJECT_TYPE_FRAMEBUFFER = jvulkanLib.VK_OBJECT_TYPE_FRAMEBUFFER
    #print("statd VK_OBJECT_TYPE_FRAMEBUFFER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_FRAMEBUFFER"]
try:
    VK_OBJECT_TYPE_IMAGE = jvulkanLib.VK_OBJECT_TYPE_IMAGE
    #print("statd VK_OBJECT_TYPE_IMAGE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_IMAGE"]
try:
    VK_OBJECT_TYPE_IMAGE_VIEW = jvulkanLib.VK_OBJECT_TYPE_IMAGE_VIEW
    #print("statd VK_OBJECT_TYPE_IMAGE_VIEW")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_IMAGE_VIEW"]
try:
    VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV = jvulkanLib.VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV
    #print("statd VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV"]
try:
    VK_OBJECT_TYPE_INSTANCE = jvulkanLib.VK_OBJECT_TYPE_INSTANCE
    #print("statd VK_OBJECT_TYPE_INSTANCE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_INSTANCE"]
try:
    VK_OBJECT_TYPE_MAX_ENUM = jvulkanLib.VK_OBJECT_TYPE_MAX_ENUM
    #print("statd VK_OBJECT_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_MAX_ENUM"]
try:
    VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL = jvulkanLib.VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL
    #print("statd VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL"]
try:
    VK_OBJECT_TYPE_PHYSICAL_DEVICE = jvulkanLib.VK_OBJECT_TYPE_PHYSICAL_DEVICE
    #print("statd VK_OBJECT_TYPE_PHYSICAL_DEVICE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_PHYSICAL_DEVICE"]
try:
    VK_OBJECT_TYPE_PIPELINE = jvulkanLib.VK_OBJECT_TYPE_PIPELINE
    #print("statd VK_OBJECT_TYPE_PIPELINE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_PIPELINE"]
try:
    VK_OBJECT_TYPE_PIPELINE_CACHE = jvulkanLib.VK_OBJECT_TYPE_PIPELINE_CACHE
    #print("statd VK_OBJECT_TYPE_PIPELINE_CACHE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_PIPELINE_CACHE"]
try:
    VK_OBJECT_TYPE_PIPELINE_LAYOUT = jvulkanLib.VK_OBJECT_TYPE_PIPELINE_LAYOUT
    #print("statd VK_OBJECT_TYPE_PIPELINE_LAYOUT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_PIPELINE_LAYOUT"]
try:
    VK_OBJECT_TYPE_PRIVATE_DATA_SLOT = jvulkanLib.VK_OBJECT_TYPE_PRIVATE_DATA_SLOT
    #print("statd VK_OBJECT_TYPE_PRIVATE_DATA_SLOT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_PRIVATE_DATA_SLOT"]
try:
    VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT = jvulkanLib.VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT
    #print("statd VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT"]
try:
    VK_OBJECT_TYPE_QUERY_POOL = jvulkanLib.VK_OBJECT_TYPE_QUERY_POOL
    #print("statd VK_OBJECT_TYPE_QUERY_POOL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_QUERY_POOL"]
try:
    VK_OBJECT_TYPE_QUEUE = jvulkanLib.VK_OBJECT_TYPE_QUEUE
    #print("statd VK_OBJECT_TYPE_QUEUE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_QUEUE"]
try:
    VK_OBJECT_TYPE_RENDER_PASS = jvulkanLib.VK_OBJECT_TYPE_RENDER_PASS
    #print("statd VK_OBJECT_TYPE_RENDER_PASS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_RENDER_PASS"]
try:
    VK_OBJECT_TYPE_SAMPLER = jvulkanLib.VK_OBJECT_TYPE_SAMPLER
    #print("statd VK_OBJECT_TYPE_SAMPLER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_SAMPLER"]
try:
    VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION = jvulkanLib.VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION
    #print("statd VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION"]
try:
    VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR = jvulkanLib.VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR
    #print("statd VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR"]
try:
    VK_OBJECT_TYPE_SEMAPHORE = jvulkanLib.VK_OBJECT_TYPE_SEMAPHORE
    #print("statd VK_OBJECT_TYPE_SEMAPHORE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_SEMAPHORE"]
try:
    VK_OBJECT_TYPE_SHADER_MODULE = jvulkanLib.VK_OBJECT_TYPE_SHADER_MODULE
    #print("statd VK_OBJECT_TYPE_SHADER_MODULE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_SHADER_MODULE"]
try:
    VK_OBJECT_TYPE_SURFACE_KHR = jvulkanLib.VK_OBJECT_TYPE_SURFACE_KHR
    #print("statd VK_OBJECT_TYPE_SURFACE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_SURFACE_KHR"]
try:
    VK_OBJECT_TYPE_SWAPCHAIN_KHR = jvulkanLib.VK_OBJECT_TYPE_SWAPCHAIN_KHR
    #print("statd VK_OBJECT_TYPE_SWAPCHAIN_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_SWAPCHAIN_KHR"]
try:
    VK_OBJECT_TYPE_UNKNOWN = jvulkanLib.VK_OBJECT_TYPE_UNKNOWN
    #print("statd VK_OBJECT_TYPE_UNKNOWN")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_UNKNOWN"]
try:
    VK_OBJECT_TYPE_VALIDATION_CACHE_EXT = jvulkanLib.VK_OBJECT_TYPE_VALIDATION_CACHE_EXT
    #print("statd VK_OBJECT_TYPE_VALIDATION_CACHE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OBJECT_TYPE_VALIDATION_CACHE_EXT"]
try:
    VK_OPERATION_DEFERRED_KHR = jvulkanLib.VK_OPERATION_DEFERRED_KHR
    #print("statd VK_OPERATION_DEFERRED_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OPERATION_DEFERRED_KHR"]
try:
    VK_OPERATION_NOT_DEFERRED_KHR = jvulkanLib.VK_OPERATION_NOT_DEFERRED_KHR
    #print("statd VK_OPERATION_NOT_DEFERRED_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_OPERATION_NOT_DEFERRED_KHR"]
try:
    VK_PEER_MEMORY_FEATURE_COPY_DST_BIT = jvulkanLib.VK_PEER_MEMORY_FEATURE_COPY_DST_BIT
    #print("statd VK_PEER_MEMORY_FEATURE_COPY_DST_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PEER_MEMORY_FEATURE_COPY_DST_BIT"]
try:
    VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR = jvulkanLib.VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR
    #print("statd VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR"]
try:
    VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT = jvulkanLib.VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT
    #print("statd VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT"]
try:
    VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR = jvulkanLib.VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR
    #print("statd VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR"]
try:
    VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM
    #print("statd VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM"]
try:
    VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT = jvulkanLib.VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT
    #print("statd VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT"]
try:
    VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR = jvulkanLib.VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR
    #print("statd VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR"]
try:
    VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT = jvulkanLib.VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT
    #print("statd VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT"]
try:
    VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR = jvulkanLib.VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR
    #print("statd VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR"]
try:
    VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL = jvulkanLib.VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL
    #print("statd VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL"]
try:
    VK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL = jvulkanLib.VK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL
    #print("statd VK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL"]
try:
    VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR
    #print("statd VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR"]
try:
    VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR
    #print("statd VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR"]
try:
    VK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR
    #print("statd VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR"]
try:
    VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR
    #print("statd VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR"]
try:
    VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR
    #print("statd VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR"]
try:
    VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR
    #print("statd VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR"]
try:
    VK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR
    #print("statd VK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR"]
try:
    VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR
    #print("statd VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR"]
try:
    VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR
    #print("statd VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR"]
try:
    VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR
    #print("statd VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR"]
try:
    VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR
    #print("statd VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR"]
try:
    VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR
    #print("statd VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR"]
try:
    VK_PERFORMANCE_COUNTER_STORAGE_MAX_ENUM_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_STORAGE_MAX_ENUM_KHR
    #print("statd VK_PERFORMANCE_COUNTER_STORAGE_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_STORAGE_MAX_ENUM_KHR"]
try:
    VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR
    #print("statd VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR"]
try:
    VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR
    #print("statd VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_MAX_ENUM_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_MAX_ENUM_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_MAX_ENUM_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR"]
try:
    VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR = jvulkanLib.VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR
    #print("statd VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR"]
try:
    VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL = jvulkanLib.VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL
    #print("statd VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL"]
try:
    VK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL = jvulkanLib.VK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL
    #print("statd VK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL"]
try:
    VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL = jvulkanLib.VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL
    #print("statd VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL"]
try:
    VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL = jvulkanLib.VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL
    #print("statd VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL"]
try:
    VK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL = jvulkanLib.VK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL
    #print("statd VK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL"]
try:
    VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL = jvulkanLib.VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL
    #print("statd VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL"]
try:
    VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL = jvulkanLib.VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL
    #print("statd VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL"]
try:
    VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL = jvulkanLib.VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL
    #print("statd VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL"]
try:
    VK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL = jvulkanLib.VK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL
    #print("statd VK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL"]
try:
    VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL = jvulkanLib.VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL
    #print("statd VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL"]
try:
    VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL = jvulkanLib.VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL
    #print("statd VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL"]
try:
    VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL = jvulkanLib.VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL
    #print("statd VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL"]
try:
    VK_PHYSICAL_DEVICE_TYPE_CPU = jvulkanLib.VK_PHYSICAL_DEVICE_TYPE_CPU
    #print("statd VK_PHYSICAL_DEVICE_TYPE_CPU")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PHYSICAL_DEVICE_TYPE_CPU"]
try:
    VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU = jvulkanLib.VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU
    #print("statd VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU"]
try:
    VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU = jvulkanLib.VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU
    #print("statd VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU"]
try:
    VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM = jvulkanLib.VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM
    #print("statd VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM"]
try:
    VK_PHYSICAL_DEVICE_TYPE_OTHER = jvulkanLib.VK_PHYSICAL_DEVICE_TYPE_OTHER
    #print("statd VK_PHYSICAL_DEVICE_TYPE_OTHER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PHYSICAL_DEVICE_TYPE_OTHER"]
try:
    VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU = jvulkanLib.VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU
    #print("statd VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU"]
try:
    VK_PIPELINE_BIND_POINT_COMPUTE = jvulkanLib.VK_PIPELINE_BIND_POINT_COMPUTE
    #print("statd VK_PIPELINE_BIND_POINT_COMPUTE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_BIND_POINT_COMPUTE"]
try:
    VK_PIPELINE_BIND_POINT_GRAPHICS = jvulkanLib.VK_PIPELINE_BIND_POINT_GRAPHICS
    #print("statd VK_PIPELINE_BIND_POINT_GRAPHICS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_BIND_POINT_GRAPHICS"]
try:
    VK_PIPELINE_BIND_POINT_MAX_ENUM = jvulkanLib.VK_PIPELINE_BIND_POINT_MAX_ENUM
    #print("statd VK_PIPELINE_BIND_POINT_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_BIND_POINT_MAX_ENUM"]
try:
    VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR = jvulkanLib.VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR
    #print("statd VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR"]
try:
    VK_PIPELINE_BIND_POINT_RAY_TRACING_NV = jvulkanLib.VK_PIPELINE_BIND_POINT_RAY_TRACING_NV
    #print("statd VK_PIPELINE_BIND_POINT_RAY_TRACING_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_BIND_POINT_RAY_TRACING_NV"]
try:
    VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI = jvulkanLib.VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI
    #print("statd VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI"]
try:
    VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT = jvulkanLib.VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT
    #print("statd VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT"]
try:
    VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT = jvulkanLib.VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT
    #print("statd VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT"]
try:
    VK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM = jvulkanLib.VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM
    #print("statd VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM"]
try:
    VK_PIPELINE_CACHE_HEADER_VERSION_ONE = jvulkanLib.VK_PIPELINE_CACHE_HEADER_VERSION_ONE
    #print("statd VK_PIPELINE_CACHE_HEADER_VERSION_ONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CACHE_HEADER_VERSION_ONE"]
try:
    VK_PIPELINE_COLOR_BLEND_STATE_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_PIPELINE_COLOR_BLEND_STATE_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_PIPELINE_COLOR_BLEND_STATE_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_COLOR_BLEND_STATE_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM = jvulkanLib.VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM
    #print("statd VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM"]
try:
    VK_PIPELINE_COMPILER_CONTROL_FLAG_BITS_MAX_ENUM_AMD = jvulkanLib.VK_PIPELINE_COMPILER_CONTROL_FLAG_BITS_MAX_ENUM_AMD
    #print("statd VK_PIPELINE_COMPILER_CONTROL_FLAG_BITS_MAX_ENUM_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_COMPILER_CONTROL_FLAG_BITS_MAX_ENUM_AMD"]
try:
    VK_PIPELINE_COMPILE_REQUIRED = jvulkanLib.VK_PIPELINE_COMPILE_REQUIRED
    #print("statd VK_PIPELINE_COMPILE_REQUIRED")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_COMPILE_REQUIRED"]
try:
    VK_PIPELINE_COMPILE_REQUIRED_EXT = jvulkanLib.VK_PIPELINE_COMPILE_REQUIRED_EXT
    #print("statd VK_PIPELINE_COMPILE_REQUIRED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_COMPILE_REQUIRED_EXT"]
try:
    VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT = jvulkanLib.VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT
    #print("statd VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT"]
try:
    VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV = jvulkanLib.VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV
    #print("statd VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV"]
try:
    VK_PIPELINE_CREATE_DERIVATIVE_BIT = jvulkanLib.VK_PIPELINE_CREATE_DERIVATIVE_BIT
    #print("statd VK_PIPELINE_CREATE_DERIVATIVE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_DERIVATIVE_BIT"]
try:
    VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT = jvulkanLib.VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT
    #print("statd VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT"]
try:
    VK_PIPELINE_CREATE_DISPATCH_BASE = jvulkanLib.VK_PIPELINE_CREATE_DISPATCH_BASE
    #print("statd VK_PIPELINE_CREATE_DISPATCH_BASE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_DISPATCH_BASE"]
try:
    VK_PIPELINE_CREATE_DISPATCH_BASE_BIT = jvulkanLib.VK_PIPELINE_CREATE_DISPATCH_BASE_BIT
    #print("statd VK_PIPELINE_CREATE_DISPATCH_BASE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_DISPATCH_BASE_BIT"]
try:
    VK_PIPELINE_CREATE_DISPATCH_BASE_KHR = jvulkanLib.VK_PIPELINE_CREATE_DISPATCH_BASE_KHR
    #print("statd VK_PIPELINE_CREATE_DISPATCH_BASE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_DISPATCH_BASE_KHR"]
try:
    VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT = jvulkanLib.VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT
    #print("statd VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT"]
try:
    VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT = jvulkanLib.VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT
    #print("statd VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT"]
try:
    VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT = jvulkanLib.VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT
    #print("statd VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT"]
try:
    VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT = jvulkanLib.VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT
    #print("statd VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT"]
try:
    VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV = jvulkanLib.VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV
    #print("statd VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV"]
try:
    VK_PIPELINE_CREATE_LIBRARY_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_LIBRARY_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_LIBRARY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_LIBRARY_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT = jvulkanLib.VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT
    #print("statd VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT"]
try:
    VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV = jvulkanLib.VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV
    #print("statd VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV"]
try:
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT = jvulkanLib.VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT
    #print("statd VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT"]
try:
    VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"]
try:
    VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT = jvulkanLib.VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT
    #print("statd VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT"]
try:
    VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT = jvulkanLib.VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT
    #print("statd VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT"]
try:
    VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR = jvulkanLib.VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR
    #print("statd VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR"]
try:
    VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT = jvulkanLib.VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT
    #print("statd VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT"]
try:
    VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT = jvulkanLib.VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT
    #print("statd VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT"]
try:
    VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT = jvulkanLib.VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT
    #print("statd VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT"]
try:
    VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT = jvulkanLib.VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT
    #print("statd VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT"]
try:
    VK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM
    #print("statd VK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM"]
try:
    VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT = jvulkanLib.VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT
    #print("statd VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT"]
try:
    VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT = jvulkanLib.VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT
    #print("statd VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT"]
try:
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM = jvulkanLib.VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM
    #print("statd VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM"]
try:
    VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM = jvulkanLib.VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM
    #print("statd VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM"]
try:
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR = jvulkanLib.VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR
    #print("statd VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR"]
try:
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR = jvulkanLib.VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR
    #print("statd VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR"]
try:
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR = jvulkanLib.VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR
    #print("statd VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR"]
try:
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR = jvulkanLib.VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR
    #print("statd VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR"]
try:
    VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR = jvulkanLib.VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR
    #print("statd VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR"]
try:
    VK_PIPELINE_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_PIPELINE_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_PIPELINE_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT = jvulkanLib.VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT
    #print("statd VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT"]
try:
    VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT = jvulkanLib.VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT
    #print("statd VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT"]
try:
    VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = jvulkanLib.VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR
    #print("statd VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"]
try:
    VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT = jvulkanLib.VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT
    #print("statd VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT"]
try:
    VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT = jvulkanLib.VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT
    #print("statd VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT"]
try:
    VK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT = jvulkanLib.VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT
    #print("statd VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT"]
try:
    VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT = jvulkanLib.VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT
    #print("statd VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT"]
try:
    VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV
    #print("statd VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV"]
try:
    VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT
    #print("statd VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT"]
try:
    VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT
    #print("statd VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT"]
try:
    VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT
    #print("statd VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"]
try:
    VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_BLIT_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_BLIT_BIT
    #print("statd VK_PIPELINE_STAGE_2_BLIT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_BLIT_BIT"]
try:
    VK_PIPELINE_STAGE_2_BLIT_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_BLIT_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_BLIT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_BLIT_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT
    #print("statd VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT"]
try:
    VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_CLEAR_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_CLEAR_BIT
    #print("statd VK_PIPELINE_STAGE_2_CLEAR_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_CLEAR_BIT"]
try:
    VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT
    #print("statd VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT"]
try:
    VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV
    #print("statd VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV"]
try:
    VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT = jvulkanLib.VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT
    #print("statd VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT"]
try:
    VK_PIPELINE_STAGE_2_COPY_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_COPY_BIT
    #print("statd VK_PIPELINE_STAGE_2_COPY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_COPY_BIT"]
try:
    VK_PIPELINE_STAGE_2_COPY_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_COPY_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_COPY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_COPY_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT
    #print("statd VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT"]
try:
    VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT
    #print("statd VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT"]
try:
    VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT = jvulkanLib.VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT
    #print("statd VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT"]
try:
    VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_HOST_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_HOST_BIT
    #print("statd VK_PIPELINE_STAGE_2_HOST_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_HOST_BIT"]
try:
    VK_PIPELINE_STAGE_2_HOST_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_HOST_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_HOST_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_HOST_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT
    #print("statd VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT"]
try:
    VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI = jvulkanLib.VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI
    #print("statd VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI"]
try:
    VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT
    #print("statd VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT"]
try:
    VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV
    #print("statd VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV"]
try:
    VK_PIPELINE_STAGE_2_NONE = jvulkanLib.VK_PIPELINE_STAGE_2_NONE
    #print("statd VK_PIPELINE_STAGE_2_NONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_NONE"]
try:
    VK_PIPELINE_STAGE_2_NONE_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_NONE_KHR
    #print("statd VK_PIPELINE_STAGE_2_NONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_NONE_KHR"]
try:
    VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT
    #print("statd VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT"]
try:
    VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV
    #print("statd VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV"]
try:
    VK_PIPELINE_STAGE_2_RESOLVE_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_RESOLVE_BIT
    #print("statd VK_PIPELINE_STAGE_2_RESOLVE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_RESOLVE_BIT"]
try:
    VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV
    #print("statd VK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV"]
try:
    VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI = jvulkanLib.VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI
    #print("statd VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI"]
try:
    VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV
    #print("statd VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV"]
try:
    VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT
    #print("statd VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT"]
try:
    VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_TRANSFER_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_TRANSFER_BIT
    #print("statd VK_PIPELINE_STAGE_2_TRANSFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_TRANSFER_BIT"]
try:
    VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT = jvulkanLib.VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT
    #print("statd VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT"]
try:
    VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT
    #print("statd VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT"]
try:
    VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT
    #print("statd VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT"]
try:
    VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV
    #print("statd VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV"]
try:
    VK_PIPELINE_STAGE_ALL_COMMANDS_BIT = jvulkanLib.VK_PIPELINE_STAGE_ALL_COMMANDS_BIT
    #print("statd VK_PIPELINE_STAGE_ALL_COMMANDS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_ALL_COMMANDS_BIT"]
try:
    VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT = jvulkanLib.VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT
    #print("statd VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT"]
try:
    VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = jvulkanLib.VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT
    #print("statd VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT"]
try:
    VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = jvulkanLib.VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT
    #print("statd VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT"]
try:
    VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV
    #print("statd VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV"]
try:
    VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT = jvulkanLib.VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT
    #print("statd VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT"]
try:
    VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT = jvulkanLib.VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT
    #print("statd VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT"]
try:
    VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = jvulkanLib.VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT
    #print("statd VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT"]
try:
    VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM
    #print("statd VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM"]
try:
    VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT = jvulkanLib.VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT
    #print("statd VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT"]
try:
    VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_HOST_BIT = jvulkanLib.VK_PIPELINE_STAGE_HOST_BIT
    #print("statd VK_PIPELINE_STAGE_HOST_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_HOST_BIT"]
try:
    VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = jvulkanLib.VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT
    #print("statd VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT"]
try:
    VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV
    #print("statd VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV"]
try:
    VK_PIPELINE_STAGE_NONE = jvulkanLib.VK_PIPELINE_STAGE_NONE
    #print("statd VK_PIPELINE_STAGE_NONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_NONE"]
try:
    VK_PIPELINE_STAGE_NONE_KHR = jvulkanLib.VK_PIPELINE_STAGE_NONE_KHR
    #print("statd VK_PIPELINE_STAGE_NONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_NONE_KHR"]
try:
    VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR = jvulkanLib.VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR
    #print("statd VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR"]
try:
    VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV
    #print("statd VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV"]
try:
    VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV
    #print("statd VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV"]
try:
    VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV = jvulkanLib.VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV
    #print("statd VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV"]
try:
    VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT"]
try:
    VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT = jvulkanLib.VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT
    #print("statd VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT"]
try:
    VK_PIPELINE_STAGE_TRANSFER_BIT = jvulkanLib.VK_PIPELINE_STAGE_TRANSFER_BIT
    #print("statd VK_PIPELINE_STAGE_TRANSFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_TRANSFER_BIT"]
try:
    VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT = jvulkanLib.VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT
    #print("statd VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT"]
try:
    VK_PIPELINE_STAGE_VERTEX_INPUT_BIT = jvulkanLib.VK_PIPELINE_STAGE_VERTEX_INPUT_BIT
    #print("statd VK_PIPELINE_STAGE_VERTEX_INPUT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_VERTEX_INPUT_BIT"]
try:
    VK_PIPELINE_STAGE_VERTEX_SHADER_BIT = jvulkanLib.VK_PIPELINE_STAGE_VERTEX_SHADER_BIT
    #print("statd VK_PIPELINE_STAGE_VERTEX_SHADER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PIPELINE_STAGE_VERTEX_SHADER_BIT"]
try:
    VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES = jvulkanLib.VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES
    #print("statd VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES"]
try:
    VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR = jvulkanLib.VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR
    #print("statd VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR"]
try:
    VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM = jvulkanLib.VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM
    #print("statd VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM"]
try:
    VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY = jvulkanLib.VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY
    #print("statd VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY"]
try:
    VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR = jvulkanLib.VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR
    #print("statd VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR"]
try:
    VK_POLYGON_MODE_FILL = jvulkanLib.VK_POLYGON_MODE_FILL
    #print("statd VK_POLYGON_MODE_FILL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_POLYGON_MODE_FILL"]
try:
    VK_POLYGON_MODE_FILL_RECTANGLE_NV = jvulkanLib.VK_POLYGON_MODE_FILL_RECTANGLE_NV
    #print("statd VK_POLYGON_MODE_FILL_RECTANGLE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_POLYGON_MODE_FILL_RECTANGLE_NV"]
try:
    VK_POLYGON_MODE_LINE = jvulkanLib.VK_POLYGON_MODE_LINE
    #print("statd VK_POLYGON_MODE_LINE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_POLYGON_MODE_LINE"]
try:
    VK_POLYGON_MODE_MAX_ENUM = jvulkanLib.VK_POLYGON_MODE_MAX_ENUM
    #print("statd VK_POLYGON_MODE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_POLYGON_MODE_MAX_ENUM"]
try:
    VK_POLYGON_MODE_POINT = jvulkanLib.VK_POLYGON_MODE_POINT
    #print("statd VK_POLYGON_MODE_POINT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_POLYGON_MODE_POINT"]
try:
    VK_PRESENT_MODE_FIFO_KHR = jvulkanLib.VK_PRESENT_MODE_FIFO_KHR
    #print("statd VK_PRESENT_MODE_FIFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRESENT_MODE_FIFO_KHR"]
try:
    VK_PRESENT_MODE_FIFO_RELAXED_KHR = jvulkanLib.VK_PRESENT_MODE_FIFO_RELAXED_KHR
    #print("statd VK_PRESENT_MODE_FIFO_RELAXED_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRESENT_MODE_FIFO_RELAXED_KHR"]
try:
    VK_PRESENT_MODE_IMMEDIATE_KHR = jvulkanLib.VK_PRESENT_MODE_IMMEDIATE_KHR
    #print("statd VK_PRESENT_MODE_IMMEDIATE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRESENT_MODE_IMMEDIATE_KHR"]
try:
    VK_PRESENT_MODE_MAILBOX_KHR = jvulkanLib.VK_PRESENT_MODE_MAILBOX_KHR
    #print("statd VK_PRESENT_MODE_MAILBOX_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRESENT_MODE_MAILBOX_KHR"]
try:
    VK_PRESENT_MODE_MAX_ENUM_KHR = jvulkanLib.VK_PRESENT_MODE_MAX_ENUM_KHR
    #print("statd VK_PRESENT_MODE_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRESENT_MODE_MAX_ENUM_KHR"]
try:
    VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR = jvulkanLib.VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR
    #print("statd VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR"]
try:
    VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR = jvulkanLib.VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR
    #print("statd VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR"]
try:
    VK_PRIMITIVE_TOPOLOGY_LINE_LIST = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_LINE_LIST
    #print("statd VK_PRIMITIVE_TOPOLOGY_LINE_LIST")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_LINE_LIST"]
try:
    VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY
    #print("statd VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY"]
try:
    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_LINE_STRIP
    #print("statd VK_PRIMITIVE_TOPOLOGY_LINE_STRIP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_LINE_STRIP"]
try:
    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY
    #print("statd VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY"]
try:
    VK_PRIMITIVE_TOPOLOGY_MAX_ENUM = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_MAX_ENUM
    #print("statd VK_PRIMITIVE_TOPOLOGY_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_MAX_ENUM"]
try:
    VK_PRIMITIVE_TOPOLOGY_PATCH_LIST = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_PATCH_LIST
    #print("statd VK_PRIMITIVE_TOPOLOGY_PATCH_LIST")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_PATCH_LIST"]
try:
    VK_PRIMITIVE_TOPOLOGY_POINT_LIST = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_POINT_LIST
    #print("statd VK_PRIMITIVE_TOPOLOGY_POINT_LIST")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_POINT_LIST"]
try:
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN
    #print("statd VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN"]
try:
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST
    #print("statd VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST"]
try:
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY
    #print("statd VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY"]
try:
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP
    #print("statd VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP"]
try:
    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY = jvulkanLib.VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY
    #print("statd VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY"]
try:
    VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT = jvulkanLib.VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT
    #print("statd VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT"]
try:
    VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT = jvulkanLib.VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT
    #print("statd VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT"]
try:
    VK_PROVOKING_VERTEX_MODE_MAX_ENUM_EXT = jvulkanLib.VK_PROVOKING_VERTEX_MODE_MAX_ENUM_EXT
    #print("statd VK_PROVOKING_VERTEX_MODE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_PROVOKING_VERTEX_MODE_MAX_ENUM_EXT"]
try:
    VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM
    #print("statd VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM"]
try:
    VK_QUERY_CONTROL_PRECISE_BIT = jvulkanLib.VK_QUERY_CONTROL_PRECISE_BIT
    #print("statd VK_QUERY_CONTROL_PRECISE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_CONTROL_PRECISE_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM
    #print("statd VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM"]
try:
    VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT"]
try:
    VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT = jvulkanLib.VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT
    #print("statd VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT"]
try:
    VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL = jvulkanLib.VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL
    #print("statd VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL"]
try:
    VK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL = jvulkanLib.VK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL
    #print("statd VK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL"]
try:
    VK_QUERY_RESULT_64_BIT = jvulkanLib.VK_QUERY_RESULT_64_BIT
    #print("statd VK_QUERY_RESULT_64_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_RESULT_64_BIT"]
try:
    VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM
    #print("statd VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM"]
try:
    VK_QUERY_RESULT_PARTIAL_BIT = jvulkanLib.VK_QUERY_RESULT_PARTIAL_BIT
    #print("statd VK_QUERY_RESULT_PARTIAL_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_RESULT_PARTIAL_BIT"]
try:
    VK_QUERY_RESULT_WAIT_BIT = jvulkanLib.VK_QUERY_RESULT_WAIT_BIT
    #print("statd VK_QUERY_RESULT_WAIT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_RESULT_WAIT_BIT"]
try:
    VK_QUERY_RESULT_WITH_AVAILABILITY_BIT = jvulkanLib.VK_QUERY_RESULT_WITH_AVAILABILITY_BIT
    #print("statd VK_QUERY_RESULT_WITH_AVAILABILITY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_RESULT_WITH_AVAILABILITY_BIT"]
try:
    VK_QUERY_SCOPE_COMMAND_BUFFER_KHR = jvulkanLib.VK_QUERY_SCOPE_COMMAND_BUFFER_KHR
    #print("statd VK_QUERY_SCOPE_COMMAND_BUFFER_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_SCOPE_COMMAND_BUFFER_KHR"]
try:
    VK_QUERY_SCOPE_COMMAND_KHR = jvulkanLib.VK_QUERY_SCOPE_COMMAND_KHR
    #print("statd VK_QUERY_SCOPE_COMMAND_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_SCOPE_COMMAND_KHR"]
try:
    VK_QUERY_SCOPE_RENDER_PASS_KHR = jvulkanLib.VK_QUERY_SCOPE_RENDER_PASS_KHR
    #print("statd VK_QUERY_SCOPE_RENDER_PASS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_SCOPE_RENDER_PASS_KHR"]
try:
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR = jvulkanLib.VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR
    #print("statd VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR"]
try:
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV = jvulkanLib.VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV
    #print("statd VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV"]
try:
    VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR = jvulkanLib.VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR
    #print("statd VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR"]
try:
    VK_QUERY_TYPE_MAX_ENUM = jvulkanLib.VK_QUERY_TYPE_MAX_ENUM
    #print("statd VK_QUERY_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_MAX_ENUM"]
try:
    VK_QUERY_TYPE_OCCLUSION = jvulkanLib.VK_QUERY_TYPE_OCCLUSION
    #print("statd VK_QUERY_TYPE_OCCLUSION")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_OCCLUSION"]
try:
    VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL = jvulkanLib.VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL
    #print("statd VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL"]
try:
    VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR = jvulkanLib.VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR
    #print("statd VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR"]
try:
    VK_QUERY_TYPE_PIPELINE_STATISTICS = jvulkanLib.VK_QUERY_TYPE_PIPELINE_STATISTICS
    #print("statd VK_QUERY_TYPE_PIPELINE_STATISTICS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_PIPELINE_STATISTICS"]
try:
    VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT = jvulkanLib.VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT
    #print("statd VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT"]
try:
    VK_QUERY_TYPE_TIMESTAMP = jvulkanLib.VK_QUERY_TYPE_TIMESTAMP
    #print("statd VK_QUERY_TYPE_TIMESTAMP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_TIMESTAMP"]
try:
    VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT = jvulkanLib.VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT
    #print("statd VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT"]
try:
    VK_QUEUE_COMPUTE_BIT = jvulkanLib.VK_QUEUE_COMPUTE_BIT
    #print("statd VK_QUEUE_COMPUTE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_COMPUTE_BIT"]
try:
    VK_QUEUE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_QUEUE_FLAG_BITS_MAX_ENUM
    #print("statd VK_QUEUE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_FLAG_BITS_MAX_ENUM"]
try:
    VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT = jvulkanLib.VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT
    #print("statd VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT"]
try:
    VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR = jvulkanLib.VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR
    #print("statd VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR"]
try:
    VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT = jvulkanLib.VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT
    #print("statd VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT"]
try:
    VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR = jvulkanLib.VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR
    #print("statd VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR"]
try:
    VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_KHR = jvulkanLib.VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_KHR
    #print("statd VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_KHR"]
try:
    VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT = jvulkanLib.VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT
    #print("statd VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT"]
try:
    VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR = jvulkanLib.VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR
    #print("statd VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR"]
try:
    VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT = jvulkanLib.VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT
    #print("statd VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT"]
try:
    VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR = jvulkanLib.VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR
    #print("statd VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR"]
try:
    VK_QUEUE_GRAPHICS_BIT = jvulkanLib.VK_QUEUE_GRAPHICS_BIT
    #print("statd VK_QUEUE_GRAPHICS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_GRAPHICS_BIT"]
try:
    VK_QUEUE_PROTECTED_BIT = jvulkanLib.VK_QUEUE_PROTECTED_BIT
    #print("statd VK_QUEUE_PROTECTED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_PROTECTED_BIT"]
try:
    VK_QUEUE_SPARSE_BINDING_BIT = jvulkanLib.VK_QUEUE_SPARSE_BINDING_BIT
    #print("statd VK_QUEUE_SPARSE_BINDING_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_SPARSE_BINDING_BIT"]
try:
    VK_QUEUE_TRANSFER_BIT = jvulkanLib.VK_QUEUE_TRANSFER_BIT
    #print("statd VK_QUEUE_TRANSFER_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_QUEUE_TRANSFER_BIT"]
try:
    VK_RASTERIZATION_ORDER_MAX_ENUM_AMD = jvulkanLib.VK_RASTERIZATION_ORDER_MAX_ENUM_AMD
    #print("statd VK_RASTERIZATION_ORDER_MAX_ENUM_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RASTERIZATION_ORDER_MAX_ENUM_AMD"]
try:
    VK_RASTERIZATION_ORDER_RELAXED_AMD = jvulkanLib.VK_RASTERIZATION_ORDER_RELAXED_AMD
    #print("statd VK_RASTERIZATION_ORDER_RELAXED_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RASTERIZATION_ORDER_RELAXED_AMD"]
try:
    VK_RASTERIZATION_ORDER_STRICT_AMD = jvulkanLib.VK_RASTERIZATION_ORDER_STRICT_AMD
    #print("statd VK_RASTERIZATION_ORDER_STRICT_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RASTERIZATION_ORDER_STRICT_AMD"]
try:
    VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR = jvulkanLib.VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR
    #print("statd VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR"]
try:
    VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV = jvulkanLib.VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV
    #print("statd VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV"]
try:
    VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR = jvulkanLib.VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR
    #print("statd VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR"]
try:
    VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR = jvulkanLib.VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR
    #print("statd VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR"]
try:
    VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV = jvulkanLib.VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV
    #print("statd VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV"]
try:
    VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR = jvulkanLib.VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR
    #print("statd VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR"]
try:
    VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV = jvulkanLib.VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV
    #print("statd VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV"]
try:
    VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT = jvulkanLib.VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT
    #print("statd VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT"]
try:
    VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR = jvulkanLib.VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR
    #print("statd VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR"]
try:
    VK_RENDERING_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_RENDERING_FLAG_BITS_MAX_ENUM
    #print("statd VK_RENDERING_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RENDERING_FLAG_BITS_MAX_ENUM"]
try:
    VK_RENDERING_RESUMING_BIT = jvulkanLib.VK_RENDERING_RESUMING_BIT
    #print("statd VK_RENDERING_RESUMING_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RENDERING_RESUMING_BIT"]
try:
    VK_RENDERING_RESUMING_BIT_KHR = jvulkanLib.VK_RENDERING_RESUMING_BIT_KHR
    #print("statd VK_RENDERING_RESUMING_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RENDERING_RESUMING_BIT_KHR"]
try:
    VK_RENDERING_SUSPENDING_BIT = jvulkanLib.VK_RENDERING_SUSPENDING_BIT
    #print("statd VK_RENDERING_SUSPENDING_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RENDERING_SUSPENDING_BIT"]
try:
    VK_RENDERING_SUSPENDING_BIT_KHR = jvulkanLib.VK_RENDERING_SUSPENDING_BIT_KHR
    #print("statd VK_RENDERING_SUSPENDING_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RENDERING_SUSPENDING_BIT_KHR"]
try:
    VK_RENDER_PASS_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_RENDER_PASS_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_RENDER_PASS_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RENDER_PASS_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM = jvulkanLib.VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM
    #print("statd VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM"]
try:
    VK_RESOLVE_MODE_AVERAGE_BIT = jvulkanLib.VK_RESOLVE_MODE_AVERAGE_BIT
    #print("statd VK_RESOLVE_MODE_AVERAGE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_AVERAGE_BIT"]
try:
    VK_RESOLVE_MODE_AVERAGE_BIT_KHR = jvulkanLib.VK_RESOLVE_MODE_AVERAGE_BIT_KHR
    #print("statd VK_RESOLVE_MODE_AVERAGE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_AVERAGE_BIT_KHR"]
try:
    VK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM
    #print("statd VK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM"]
try:
    VK_RESOLVE_MODE_MAX_BIT = jvulkanLib.VK_RESOLVE_MODE_MAX_BIT
    #print("statd VK_RESOLVE_MODE_MAX_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_MAX_BIT"]
try:
    VK_RESOLVE_MODE_MAX_BIT_KHR = jvulkanLib.VK_RESOLVE_MODE_MAX_BIT_KHR
    #print("statd VK_RESOLVE_MODE_MAX_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_MAX_BIT_KHR"]
try:
    VK_RESOLVE_MODE_MIN_BIT = jvulkanLib.VK_RESOLVE_MODE_MIN_BIT
    #print("statd VK_RESOLVE_MODE_MIN_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_MIN_BIT"]
try:
    VK_RESOLVE_MODE_MIN_BIT_KHR = jvulkanLib.VK_RESOLVE_MODE_MIN_BIT_KHR
    #print("statd VK_RESOLVE_MODE_MIN_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_MIN_BIT_KHR"]
try:
    VK_RESOLVE_MODE_NONE = jvulkanLib.VK_RESOLVE_MODE_NONE
    #print("statd VK_RESOLVE_MODE_NONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_NONE"]
try:
    VK_RESOLVE_MODE_NONE_KHR = jvulkanLib.VK_RESOLVE_MODE_NONE_KHR
    #print("statd VK_RESOLVE_MODE_NONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_NONE_KHR"]
try:
    VK_RESOLVE_MODE_SAMPLE_ZERO_BIT = jvulkanLib.VK_RESOLVE_MODE_SAMPLE_ZERO_BIT
    #print("statd VK_RESOLVE_MODE_SAMPLE_ZERO_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_SAMPLE_ZERO_BIT"]
try:
    VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR = jvulkanLib.VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR
    #print("statd VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR"]
try:
    VK_RESULT_MAX_ENUM = jvulkanLib.VK_RESULT_MAX_ENUM
    #print("statd VK_RESULT_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_RESULT_MAX_ENUM"]
try:
    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER = jvulkanLib.VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER
    #print("statd VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER"]
try:
    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE = jvulkanLib.VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE
    #print("statd VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE"]
try:
    VK_SAMPLER_ADDRESS_MODE_MAX_ENUM = jvulkanLib.VK_SAMPLER_ADDRESS_MODE_MAX_ENUM
    #print("statd VK_SAMPLER_ADDRESS_MODE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_ADDRESS_MODE_MAX_ENUM"]
try:
    VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT = jvulkanLib.VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT
    #print("statd VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT"]
try:
    VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE = jvulkanLib.VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE
    #print("statd VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE"]
try:
    VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR = jvulkanLib.VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR
    #print("statd VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR"]
try:
    VK_SAMPLER_ADDRESS_MODE_REPEAT = jvulkanLib.VK_SAMPLER_ADDRESS_MODE_REPEAT
    #print("statd VK_SAMPLER_ADDRESS_MODE_REPEAT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_ADDRESS_MODE_REPEAT"]
try:
    VK_SAMPLER_CREATE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_SAMPLER_CREATE_FLAG_BITS_MAX_ENUM
    #print("statd VK_SAMPLER_CREATE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_CREATE_FLAG_BITS_MAX_ENUM"]
try:
    VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT = jvulkanLib.VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT
    #print("statd VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT"]
try:
    VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT = jvulkanLib.VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT
    #print("statd VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT"]
try:
    VK_SAMPLER_MIPMAP_MODE_LINEAR = jvulkanLib.VK_SAMPLER_MIPMAP_MODE_LINEAR
    #print("statd VK_SAMPLER_MIPMAP_MODE_LINEAR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_MIPMAP_MODE_LINEAR"]
try:
    VK_SAMPLER_MIPMAP_MODE_MAX_ENUM = jvulkanLib.VK_SAMPLER_MIPMAP_MODE_MAX_ENUM
    #print("statd VK_SAMPLER_MIPMAP_MODE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_MIPMAP_MODE_MAX_ENUM"]
try:
    VK_SAMPLER_MIPMAP_MODE_NEAREST = jvulkanLib.VK_SAMPLER_MIPMAP_MODE_NEAREST
    #print("statd VK_SAMPLER_MIPMAP_MODE_NEAREST")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_MIPMAP_MODE_NEAREST"]
try:
    VK_SAMPLER_REDUCTION_MODE_MAX = jvulkanLib.VK_SAMPLER_REDUCTION_MODE_MAX
    #print("statd VK_SAMPLER_REDUCTION_MODE_MAX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_REDUCTION_MODE_MAX"]
try:
    VK_SAMPLER_REDUCTION_MODE_MAX_ENUM = jvulkanLib.VK_SAMPLER_REDUCTION_MODE_MAX_ENUM
    #print("statd VK_SAMPLER_REDUCTION_MODE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_REDUCTION_MODE_MAX_ENUM"]
try:
    VK_SAMPLER_REDUCTION_MODE_MAX_EXT = jvulkanLib.VK_SAMPLER_REDUCTION_MODE_MAX_EXT
    #print("statd VK_SAMPLER_REDUCTION_MODE_MAX_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_REDUCTION_MODE_MAX_EXT"]
try:
    VK_SAMPLER_REDUCTION_MODE_MIN = jvulkanLib.VK_SAMPLER_REDUCTION_MODE_MIN
    #print("statd VK_SAMPLER_REDUCTION_MODE_MIN")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_REDUCTION_MODE_MIN"]
try:
    VK_SAMPLER_REDUCTION_MODE_MIN_EXT = jvulkanLib.VK_SAMPLER_REDUCTION_MODE_MIN_EXT
    #print("statd VK_SAMPLER_REDUCTION_MODE_MIN_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_REDUCTION_MODE_MIN_EXT"]
try:
    VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE = jvulkanLib.VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE
    #print("statd VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE"]
try:
    VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT = jvulkanLib.VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT
    #print("statd VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020 = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601 = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709 = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY"]
try:
    VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR = jvulkanLib.VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR
    #print("statd VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR"]
try:
    VK_SAMPLER_YCBCR_RANGE_ITU_FULL = jvulkanLib.VK_SAMPLER_YCBCR_RANGE_ITU_FULL
    #print("statd VK_SAMPLER_YCBCR_RANGE_ITU_FULL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_RANGE_ITU_FULL"]
try:
    VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR = jvulkanLib.VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR
    #print("statd VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR"]
try:
    VK_SAMPLER_YCBCR_RANGE_ITU_NARROW = jvulkanLib.VK_SAMPLER_YCBCR_RANGE_ITU_NARROW
    #print("statd VK_SAMPLER_YCBCR_RANGE_ITU_NARROW")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_RANGE_ITU_NARROW"]
try:
    VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR = jvulkanLib.VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR
    #print("statd VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR"]
try:
    VK_SAMPLER_YCBCR_RANGE_MAX_ENUM = jvulkanLib.VK_SAMPLER_YCBCR_RANGE_MAX_ENUM
    #print("statd VK_SAMPLER_YCBCR_RANGE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLER_YCBCR_RANGE_MAX_ENUM"]
try:
    VK_SAMPLE_COUNT_16_BIT = jvulkanLib.VK_SAMPLE_COUNT_16_BIT
    #print("statd VK_SAMPLE_COUNT_16_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLE_COUNT_16_BIT"]
try:
    VK_SAMPLE_COUNT_1_BIT = jvulkanLib.VK_SAMPLE_COUNT_1_BIT
    #print("statd VK_SAMPLE_COUNT_1_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLE_COUNT_1_BIT"]
try:
    VK_SAMPLE_COUNT_2_BIT = jvulkanLib.VK_SAMPLE_COUNT_2_BIT
    #print("statd VK_SAMPLE_COUNT_2_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLE_COUNT_2_BIT"]
try:
    VK_SAMPLE_COUNT_32_BIT = jvulkanLib.VK_SAMPLE_COUNT_32_BIT
    #print("statd VK_SAMPLE_COUNT_32_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLE_COUNT_32_BIT"]
try:
    VK_SAMPLE_COUNT_4_BIT = jvulkanLib.VK_SAMPLE_COUNT_4_BIT
    #print("statd VK_SAMPLE_COUNT_4_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLE_COUNT_4_BIT"]
try:
    VK_SAMPLE_COUNT_64_BIT = jvulkanLib.VK_SAMPLE_COUNT_64_BIT
    #print("statd VK_SAMPLE_COUNT_64_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLE_COUNT_64_BIT"]
try:
    VK_SAMPLE_COUNT_8_BIT = jvulkanLib.VK_SAMPLE_COUNT_8_BIT
    #print("statd VK_SAMPLE_COUNT_8_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLE_COUNT_8_BIT"]
try:
    VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM
    #print("statd VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM"]
try:
    VK_SCOPE_DEVICE_NV = jvulkanLib.VK_SCOPE_DEVICE_NV
    #print("statd VK_SCOPE_DEVICE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SCOPE_DEVICE_NV"]
try:
    VK_SCOPE_MAX_ENUM_NV = jvulkanLib.VK_SCOPE_MAX_ENUM_NV
    #print("statd VK_SCOPE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SCOPE_MAX_ENUM_NV"]
try:
    VK_SCOPE_QUEUE_FAMILY_NV = jvulkanLib.VK_SCOPE_QUEUE_FAMILY_NV
    #print("statd VK_SCOPE_QUEUE_FAMILY_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SCOPE_QUEUE_FAMILY_NV"]
try:
    VK_SCOPE_SUBGROUP_NV = jvulkanLib.VK_SCOPE_SUBGROUP_NV
    #print("statd VK_SCOPE_SUBGROUP_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SCOPE_SUBGROUP_NV"]
try:
    VK_SCOPE_WORKGROUP_NV = jvulkanLib.VK_SCOPE_WORKGROUP_NV
    #print("statd VK_SCOPE_WORKGROUP_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SCOPE_WORKGROUP_NV"]
try:
    VK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM
    #print("statd VK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM"]
try:
    VK_SEMAPHORE_IMPORT_TEMPORARY_BIT = jvulkanLib.VK_SEMAPHORE_IMPORT_TEMPORARY_BIT
    #print("statd VK_SEMAPHORE_IMPORT_TEMPORARY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_IMPORT_TEMPORARY_BIT"]
try:
    VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR = jvulkanLib.VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR
    #print("statd VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR"]
try:
    VK_SEMAPHORE_TYPE_BINARY = jvulkanLib.VK_SEMAPHORE_TYPE_BINARY
    #print("statd VK_SEMAPHORE_TYPE_BINARY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_TYPE_BINARY"]
try:
    VK_SEMAPHORE_TYPE_BINARY_KHR = jvulkanLib.VK_SEMAPHORE_TYPE_BINARY_KHR
    #print("statd VK_SEMAPHORE_TYPE_BINARY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_TYPE_BINARY_KHR"]
try:
    VK_SEMAPHORE_TYPE_MAX_ENUM = jvulkanLib.VK_SEMAPHORE_TYPE_MAX_ENUM
    #print("statd VK_SEMAPHORE_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_TYPE_MAX_ENUM"]
try:
    VK_SEMAPHORE_TYPE_TIMELINE = jvulkanLib.VK_SEMAPHORE_TYPE_TIMELINE
    #print("statd VK_SEMAPHORE_TYPE_TIMELINE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_TYPE_TIMELINE"]
try:
    VK_SEMAPHORE_TYPE_TIMELINE_KHR = jvulkanLib.VK_SEMAPHORE_TYPE_TIMELINE_KHR
    #print("statd VK_SEMAPHORE_TYPE_TIMELINE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_TYPE_TIMELINE_KHR"]
try:
    VK_SEMAPHORE_WAIT_ANY_BIT = jvulkanLib.VK_SEMAPHORE_WAIT_ANY_BIT
    #print("statd VK_SEMAPHORE_WAIT_ANY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_WAIT_ANY_BIT"]
try:
    VK_SEMAPHORE_WAIT_ANY_BIT_KHR = jvulkanLib.VK_SEMAPHORE_WAIT_ANY_BIT_KHR
    #print("statd VK_SEMAPHORE_WAIT_ANY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_WAIT_ANY_BIT_KHR"]
try:
    VK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM
    #print("statd VK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM"]
try:
    VK_SHADER_CORE_PROPERTIES_FLAG_BITS_MAX_ENUM_AMD = jvulkanLib.VK_SHADER_CORE_PROPERTIES_FLAG_BITS_MAX_ENUM_AMD
    #print("statd VK_SHADER_CORE_PROPERTIES_FLAG_BITS_MAX_ENUM_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_CORE_PROPERTIES_FLAG_BITS_MAX_ENUM_AMD"]
try:
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY = jvulkanLib.VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY
    #print("statd VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY"]
try:
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR = jvulkanLib.VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR
    #print("statd VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR"]
try:
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL = jvulkanLib.VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL
    #print("statd VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL"]
try:
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR = jvulkanLib.VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR
    #print("statd VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR"]
try:
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM = jvulkanLib.VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM
    #print("statd VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM"]
try:
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE = jvulkanLib.VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE
    #print("statd VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE"]
try:
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR = jvulkanLib.VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR
    #print("statd VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR"]
try:
    VK_SHADER_GROUP_SHADER_ANY_HIT_KHR = jvulkanLib.VK_SHADER_GROUP_SHADER_ANY_HIT_KHR
    #print("statd VK_SHADER_GROUP_SHADER_ANY_HIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_GROUP_SHADER_ANY_HIT_KHR"]
try:
    VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR = jvulkanLib.VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR
    #print("statd VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR"]
try:
    VK_SHADER_GROUP_SHADER_GENERAL_KHR = jvulkanLib.VK_SHADER_GROUP_SHADER_GENERAL_KHR
    #print("statd VK_SHADER_GROUP_SHADER_GENERAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_GROUP_SHADER_GENERAL_KHR"]
try:
    VK_SHADER_GROUP_SHADER_INTERSECTION_KHR = jvulkanLib.VK_SHADER_GROUP_SHADER_INTERSECTION_KHR
    #print("statd VK_SHADER_GROUP_SHADER_INTERSECTION_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_GROUP_SHADER_INTERSECTION_KHR"]
try:
    VK_SHADER_GROUP_SHADER_MAX_ENUM_KHR = jvulkanLib.VK_SHADER_GROUP_SHADER_MAX_ENUM_KHR
    #print("statd VK_SHADER_GROUP_SHADER_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_GROUP_SHADER_MAX_ENUM_KHR"]
try:
    VK_SHADER_INFO_TYPE_BINARY_AMD = jvulkanLib.VK_SHADER_INFO_TYPE_BINARY_AMD
    #print("statd VK_SHADER_INFO_TYPE_BINARY_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_INFO_TYPE_BINARY_AMD"]
try:
    VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD = jvulkanLib.VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD
    #print("statd VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD"]
try:
    VK_SHADER_INFO_TYPE_MAX_ENUM_AMD = jvulkanLib.VK_SHADER_INFO_TYPE_MAX_ENUM_AMD
    #print("statd VK_SHADER_INFO_TYPE_MAX_ENUM_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_INFO_TYPE_MAX_ENUM_AMD"]
try:
    VK_SHADER_INFO_TYPE_STATISTICS_AMD = jvulkanLib.VK_SHADER_INFO_TYPE_STATISTICS_AMD
    #print("statd VK_SHADER_INFO_TYPE_STATISTICS_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_INFO_TYPE_STATISTICS_AMD"]
try:
    VK_SHADER_STAGE_ALL = jvulkanLib.VK_SHADER_STAGE_ALL
    #print("statd VK_SHADER_STAGE_ALL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_ALL"]
try:
    VK_SHADER_STAGE_ALL_GRAPHICS = jvulkanLib.VK_SHADER_STAGE_ALL_GRAPHICS
    #print("statd VK_SHADER_STAGE_ALL_GRAPHICS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_ALL_GRAPHICS"]
try:
    VK_SHADER_STAGE_ANY_HIT_BIT_KHR = jvulkanLib.VK_SHADER_STAGE_ANY_HIT_BIT_KHR
    #print("statd VK_SHADER_STAGE_ANY_HIT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_ANY_HIT_BIT_KHR"]
try:
    VK_SHADER_STAGE_ANY_HIT_BIT_NV = jvulkanLib.VK_SHADER_STAGE_ANY_HIT_BIT_NV
    #print("statd VK_SHADER_STAGE_ANY_HIT_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_ANY_HIT_BIT_NV"]
try:
    VK_SHADER_STAGE_CALLABLE_BIT_KHR = jvulkanLib.VK_SHADER_STAGE_CALLABLE_BIT_KHR
    #print("statd VK_SHADER_STAGE_CALLABLE_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_CALLABLE_BIT_KHR"]
try:
    VK_SHADER_STAGE_CALLABLE_BIT_NV = jvulkanLib.VK_SHADER_STAGE_CALLABLE_BIT_NV
    #print("statd VK_SHADER_STAGE_CALLABLE_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_CALLABLE_BIT_NV"]
try:
    VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR = jvulkanLib.VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR
    #print("statd VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR"]
try:
    VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV = jvulkanLib.VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV
    #print("statd VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV"]
try:
    VK_SHADER_STAGE_COMPUTE_BIT = jvulkanLib.VK_SHADER_STAGE_COMPUTE_BIT
    #print("statd VK_SHADER_STAGE_COMPUTE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_COMPUTE_BIT"]
try:
    VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM
    #print("statd VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM"]
try:
    VK_SHADER_STAGE_FRAGMENT_BIT = jvulkanLib.VK_SHADER_STAGE_FRAGMENT_BIT
    #print("statd VK_SHADER_STAGE_FRAGMENT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_FRAGMENT_BIT"]
try:
    VK_SHADER_STAGE_GEOMETRY_BIT = jvulkanLib.VK_SHADER_STAGE_GEOMETRY_BIT
    #print("statd VK_SHADER_STAGE_GEOMETRY_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_GEOMETRY_BIT"]
try:
    VK_SHADER_STAGE_INTERSECTION_BIT_KHR = jvulkanLib.VK_SHADER_STAGE_INTERSECTION_BIT_KHR
    #print("statd VK_SHADER_STAGE_INTERSECTION_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_INTERSECTION_BIT_KHR"]
try:
    VK_SHADER_STAGE_INTERSECTION_BIT_NV = jvulkanLib.VK_SHADER_STAGE_INTERSECTION_BIT_NV
    #print("statd VK_SHADER_STAGE_INTERSECTION_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_INTERSECTION_BIT_NV"]
try:
    VK_SHADER_STAGE_MESH_BIT_NV = jvulkanLib.VK_SHADER_STAGE_MESH_BIT_NV
    #print("statd VK_SHADER_STAGE_MESH_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_MESH_BIT_NV"]
try:
    VK_SHADER_STAGE_MISS_BIT_KHR = jvulkanLib.VK_SHADER_STAGE_MISS_BIT_KHR
    #print("statd VK_SHADER_STAGE_MISS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_MISS_BIT_KHR"]
try:
    VK_SHADER_STAGE_MISS_BIT_NV = jvulkanLib.VK_SHADER_STAGE_MISS_BIT_NV
    #print("statd VK_SHADER_STAGE_MISS_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_MISS_BIT_NV"]
try:
    VK_SHADER_STAGE_RAYGEN_BIT_KHR = jvulkanLib.VK_SHADER_STAGE_RAYGEN_BIT_KHR
    #print("statd VK_SHADER_STAGE_RAYGEN_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_RAYGEN_BIT_KHR"]
try:
    VK_SHADER_STAGE_RAYGEN_BIT_NV = jvulkanLib.VK_SHADER_STAGE_RAYGEN_BIT_NV
    #print("statd VK_SHADER_STAGE_RAYGEN_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_RAYGEN_BIT_NV"]
try:
    VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI = jvulkanLib.VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI
    #print("statd VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI"]
try:
    VK_SHADER_STAGE_TASK_BIT_NV = jvulkanLib.VK_SHADER_STAGE_TASK_BIT_NV
    #print("statd VK_SHADER_STAGE_TASK_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_TASK_BIT_NV"]
try:
    VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT = jvulkanLib.VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT
    #print("statd VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT"]
try:
    VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = jvulkanLib.VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT
    #print("statd VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT"]
try:
    VK_SHADER_STAGE_VERTEX_BIT = jvulkanLib.VK_SHADER_STAGE_VERTEX_BIT
    #print("statd VK_SHADER_STAGE_VERTEX_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADER_STAGE_VERTEX_BIT"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV"]
try:
    VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV = jvulkanLib.VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV
    #print("statd VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV"]
try:
    VK_SHARING_MODE_CONCURRENT = jvulkanLib.VK_SHARING_MODE_CONCURRENT
    #print("statd VK_SHARING_MODE_CONCURRENT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHARING_MODE_CONCURRENT"]
try:
    VK_SHARING_MODE_EXCLUSIVE = jvulkanLib.VK_SHARING_MODE_EXCLUSIVE
    #print("statd VK_SHARING_MODE_EXCLUSIVE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHARING_MODE_EXCLUSIVE"]
try:
    VK_SHARING_MODE_MAX_ENUM = jvulkanLib.VK_SHARING_MODE_MAX_ENUM
    #print("statd VK_SHARING_MODE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SHARING_MODE_MAX_ENUM"]
try:
    VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT = jvulkanLib.VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT
    #print("statd VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT"]
try:
    VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM
    #print("statd VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM"]
try:
    VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT = jvulkanLib.VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT
    #print("statd VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT"]
try:
    VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT = jvulkanLib.VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT
    #print("statd VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT"]
try:
    VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM
    #print("statd VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM"]
try:
    VK_SPARSE_MEMORY_BIND_METADATA_BIT = jvulkanLib.VK_SPARSE_MEMORY_BIND_METADATA_BIT
    #print("statd VK_SPARSE_MEMORY_BIND_METADATA_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SPARSE_MEMORY_BIND_METADATA_BIT"]
try:
    VK_STENCIL_FACE_BACK_BIT = jvulkanLib.VK_STENCIL_FACE_BACK_BIT
    #print("statd VK_STENCIL_FACE_BACK_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_FACE_BACK_BIT"]
try:
    VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM
    #print("statd VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM"]
try:
    VK_STENCIL_FACE_FRONT_AND_BACK = jvulkanLib.VK_STENCIL_FACE_FRONT_AND_BACK
    #print("statd VK_STENCIL_FACE_FRONT_AND_BACK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_FACE_FRONT_AND_BACK"]
try:
    VK_STENCIL_FACE_FRONT_BIT = jvulkanLib.VK_STENCIL_FACE_FRONT_BIT
    #print("statd VK_STENCIL_FACE_FRONT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_FACE_FRONT_BIT"]
try:
    VK_STENCIL_FRONT_AND_BACK = jvulkanLib.VK_STENCIL_FRONT_AND_BACK
    #print("statd VK_STENCIL_FRONT_AND_BACK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_FRONT_AND_BACK"]
try:
    VK_STENCIL_OP_DECREMENT_AND_CLAMP = jvulkanLib.VK_STENCIL_OP_DECREMENT_AND_CLAMP
    #print("statd VK_STENCIL_OP_DECREMENT_AND_CLAMP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_OP_DECREMENT_AND_CLAMP"]
try:
    VK_STENCIL_OP_DECREMENT_AND_WRAP = jvulkanLib.VK_STENCIL_OP_DECREMENT_AND_WRAP
    #print("statd VK_STENCIL_OP_DECREMENT_AND_WRAP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_OP_DECREMENT_AND_WRAP"]
try:
    VK_STENCIL_OP_INCREMENT_AND_CLAMP = jvulkanLib.VK_STENCIL_OP_INCREMENT_AND_CLAMP
    #print("statd VK_STENCIL_OP_INCREMENT_AND_CLAMP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_OP_INCREMENT_AND_CLAMP"]
try:
    VK_STENCIL_OP_INCREMENT_AND_WRAP = jvulkanLib.VK_STENCIL_OP_INCREMENT_AND_WRAP
    #print("statd VK_STENCIL_OP_INCREMENT_AND_WRAP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_OP_INCREMENT_AND_WRAP"]
try:
    VK_STENCIL_OP_INVERT = jvulkanLib.VK_STENCIL_OP_INVERT
    #print("statd VK_STENCIL_OP_INVERT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_OP_INVERT"]
try:
    VK_STENCIL_OP_KEEP = jvulkanLib.VK_STENCIL_OP_KEEP
    #print("statd VK_STENCIL_OP_KEEP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_OP_KEEP"]
try:
    VK_STENCIL_OP_MAX_ENUM = jvulkanLib.VK_STENCIL_OP_MAX_ENUM
    #print("statd VK_STENCIL_OP_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_OP_MAX_ENUM"]
try:
    VK_STENCIL_OP_REPLACE = jvulkanLib.VK_STENCIL_OP_REPLACE
    #print("statd VK_STENCIL_OP_REPLACE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_OP_REPLACE"]
try:
    VK_STENCIL_OP_ZERO = jvulkanLib.VK_STENCIL_OP_ZERO
    #print("statd VK_STENCIL_OP_ZERO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STENCIL_OP_ZERO"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID = jvulkanLib.VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID
    #print("statd VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID"]
try:
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID = jvulkanLib.VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID
    #print("statd VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID"]
try:
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID = jvulkanLib.VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID
    #print("statd VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID"]
try:
    VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID = jvulkanLib.VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID
    #print("statd VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID"]
try:
    VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_APPLICATION_INFO = jvulkanLib.VK_STRUCTURE_TYPE_APPLICATION_INFO
    #print("statd VK_STRUCTURE_TYPE_APPLICATION_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_APPLICATION_INFO"]
try:
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2 = jvulkanLib.VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2
    #print("statd VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2"]
try:
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR
    #print("statd VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR"]
try:
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT = jvulkanLib.VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT
    #print("statd VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT"]
try:
    VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR
    #print("statd VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR"]
try:
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2 = jvulkanLib.VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2
    #print("statd VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2"]
try:
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR
    #print("statd VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR"]
try:
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT = jvulkanLib.VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT
    #print("statd VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT"]
try:
    VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR = jvulkanLib.VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR
    #print("statd VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR"]
try:
    VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD = jvulkanLib.VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD
    #print("statd VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD"]
try:
    VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO = jvulkanLib.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO
    #print("statd VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO"]
try:
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO = jvulkanLib.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO
    #print("statd VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO"]
try:
    VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO = jvulkanLib.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO
    #print("statd VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO"]
try:
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO = jvulkanLib.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO
    #print("statd VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO"]
try:
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO = jvulkanLib.VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO
    #print("statd VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO"]
try:
    VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_BIND_SPARSE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_BIND_SPARSE_INFO
    #print("statd VK_STRUCTURE_TYPE_BIND_SPARSE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BIND_SPARSE_INFO"]
try:
    VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2
    #print("statd VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2"]
try:
    VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_BUFFER_COPY_2 = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_COPY_2
    #print("statd VK_STRUCTURE_TYPE_BUFFER_COPY_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_COPY_2"]
try:
    VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR
    #print("statd VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR"]
try:
    VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO
    #print("statd VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO"]
try:
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2
    #print("statd VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2"]
try:
    VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR
    #print("statd VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR"]
try:
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER
    #print("statd VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER"]
try:
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2
    #print("statd VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2"]
try:
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR
    #print("statd VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR"]
try:
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2
    #print("statd VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2"]
try:
    VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV = jvulkanLib.VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV
    #print("statd VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV"]
try:
    VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV = jvulkanLib.VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV
    #print("statd VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV"]
try:
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO
    #print("statd VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO"]
try:
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO
    #print("statd VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO"]
try:
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO
    #print("statd VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO"]
try:
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO
    #print("statd VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO"]
try:
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM
    #print("statd VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM"]
try:
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO
    #print("statd VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO"]
try:
    VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV = jvulkanLib.VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV
    #print("statd VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV"]
try:
    VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2
    #print("statd VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2"]
try:
    VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2
    #print("statd VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2"]
try:
    VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM = jvulkanLib.VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM
    #print("statd VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM"]
try:
    VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET = jvulkanLib.VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET
    #print("statd VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET"]
try:
    VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2
    #print("statd VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2"]
try:
    VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2
    #print("statd VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2"]
try:
    VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX = jvulkanLib.VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX
    #print("statd VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX"]
try:
    VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX = jvulkanLib.VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX
    #print("statd VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX"]
try:
    VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX = jvulkanLib.VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX
    #print("statd VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX"]
try:
    VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT
    #print("statd VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT"]
try:
    VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT
    #print("statd VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT"]
try:
    VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_DEPENDENCY_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DEPENDENCY_INFO
    #print("statd VK_STRUCTURE_TYPE_DEPENDENCY_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEPENDENCY_INFO"]
try:
    VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS
    #print("statd VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS"]
try:
    VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS
    #print("statd VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS"]
try:
    VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO
    #print("statd VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO"]
try:
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD
    #print("statd VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD"]
try:
    VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT
    #print("statd VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT"]
try:
    VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2
    #print("statd VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2"]
try:
    VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT
    #print("statd VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT"]
try:
    VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT = jvulkanLib.VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT
    #print("statd VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT"]
try:
    VK_STRUCTURE_TYPE_EVENT_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_EVENT_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_EVENT_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EVENT_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO
    #print("statd VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO"]
try:
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_FENCE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_FENCE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_FENCE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FENCE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 = jvulkanLib.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2
    #print("statd VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2"]
try:
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 = jvulkanLib.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3
    #print("statd VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3"]
try:
    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR = jvulkanLib.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR
    #print("statd VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR"]
try:
    VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO
    #print("statd VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO"]
try:
    VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV = jvulkanLib.VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV
    #print("statd VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV"]
try:
    VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV = jvulkanLib.VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV
    #print("statd VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV"]
try:
    VK_STRUCTURE_TYPE_GEOMETRY_NV = jvulkanLib.VK_STRUCTURE_TYPE_GEOMETRY_NV
    #print("statd VK_STRUCTURE_TYPE_GEOMETRY_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_GEOMETRY_NV"]
try:
    VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV = jvulkanLib.VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV
    #print("statd VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV"]
try:
    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_HDR_METADATA_EXT = jvulkanLib.VK_STRUCTURE_TYPE_HDR_METADATA_EXT
    #print("statd VK_STRUCTURE_TYPE_HDR_METADATA_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_HDR_METADATA_EXT"]
try:
    VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_IMAGE_BLIT_2 = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_BLIT_2
    #print("statd VK_STRUCTURE_TYPE_IMAGE_BLIT_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_BLIT_2"]
try:
    VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR"]
try:
    VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_IMAGE_COPY_2 = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_COPY_2
    #print("statd VK_STRUCTURE_TYPE_IMAGE_COPY_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_COPY_2"]
try:
    VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR"]
try:
    VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2
    #print("statd VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2"]
try:
    VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER
    #print("statd VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER"]
try:
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2
    #print("statd VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2"]
try:
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR"]
try:
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2
    #print("statd VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2"]
try:
    VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO
    #print("statd VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO"]
try:
    VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2 = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2
    #print("statd VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2"]
try:
    VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR"]
try:
    VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2
    #print("statd VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2"]
try:
    VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX
    #print("statd VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX"]
try:
    VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT
    #print("statd VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT"]
try:
    VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX
    #print("statd VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX"]
try:
    VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID
    #print("statd VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID"]
try:
    VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV = jvulkanLib.VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV
    #print("statd VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV"]
try:
    VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL = jvulkanLib.VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL
    #print("statd VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL"]
try:
    VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK = jvulkanLib.VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK
    #print("statd VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK"]
try:
    VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK = jvulkanLib.VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK
    #print("statd VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK"]
try:
    VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE = jvulkanLib.VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE
    #print("statd VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE"]
try:
    VK_STRUCTURE_TYPE_MAX_ENUM = jvulkanLib.VK_STRUCTURE_TYPE_MAX_ENUM
    #print("statd VK_STRUCTURE_TYPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MAX_ENUM"]
try:
    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO
    #print("statd VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO"]
try:
    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO
    #print("statd VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO"]
try:
    VK_STRUCTURE_TYPE_MEMORY_BARRIER = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_BARRIER
    #print("statd VK_STRUCTURE_TYPE_MEMORY_BARRIER")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_BARRIER"]
try:
    VK_STRUCTURE_TYPE_MEMORY_BARRIER_2 = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_BARRIER_2
    #print("statd VK_STRUCTURE_TYPE_MEMORY_BARRIER_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_BARRIER_2"]
try:
    VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR
    #print("statd VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR"]
try:
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO
    #print("statd VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO"]
try:
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS
    #print("statd VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS"]
try:
    VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR
    #print("statd VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR"]
try:
    VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID
    #print("statd VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID"]
try:
    VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO
    #print("statd VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO"]
try:
    VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2
    #print("statd VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2"]
try:
    VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR
    #print("statd VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR"]
try:
    VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX = jvulkanLib.VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX
    #print("statd VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX"]
try:
    VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE = jvulkanLib.VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE
    #print("statd VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE"]
try:
    VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL = jvulkanLib.VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL
    #print("statd VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL"]
try:
    VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR
    #print("statd VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR"]
try:
    VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR
    #print("statd VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR"]
try:
    VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL = jvulkanLib.VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL
    #print("statd VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL"]
try:
    VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL = jvulkanLib.VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL
    #print("statd VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL"]
try:
    VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL = jvulkanLib.VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL
    #print("statd VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES"]
try:
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR
    #print("statd VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP = jvulkanLib.VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP
    #print("statd VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP"]
try:
    VK_STRUCTURE_TYPE_PRESENT_ID_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PRESENT_ID_KHR
    #print("statd VK_STRUCTURE_TYPE_PRESENT_ID_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PRESENT_ID_KHR"]
try:
    VK_STRUCTURE_TYPE_PRESENT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PRESENT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_PRESENT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PRESENT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR = jvulkanLib.VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR
    #print("statd VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR"]
try:
    VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE = jvulkanLib.VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE
    #print("statd VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE"]
try:
    VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO = jvulkanLib.VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO
    #print("statd VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO"]
try:
    VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL = jvulkanLib.VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL
    #print("statd VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL"]
try:
    VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL = jvulkanLib.VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL
    #print("statd VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL"]
try:
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV = jvulkanLib.VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV
    #print("statd VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV"]
try:
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV = jvulkanLib.VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV
    #print("statd VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV"]
try:
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT
    #print("statd VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT"]
try:
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 = jvulkanLib.VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2
    #print("statd VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2"]
try:
    VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO = jvulkanLib.VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO
    #print("statd VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO"]
try:
    VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_RENDERING_INFO = jvulkanLib.VK_STRUCTURE_TYPE_RENDERING_INFO
    #print("statd VK_STRUCTURE_TYPE_RENDERING_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDERING_INFO"]
try:
    VK_STRUCTURE_TYPE_RENDERING_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RENDERING_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_RENDERING_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDERING_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM = jvulkanLib.VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM
    #print("statd VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM"]
try:
    VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2
    #print("statd VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2"]
try:
    VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO"]
try:
    VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX = jvulkanLib.VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX
    #print("statd VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO"]
try:
    VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO
    #print("statd VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO"]
try:
    VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR
    #print("statd VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR"]
try:
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 = jvulkanLib.VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2
    #print("statd VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2"]
try:
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 = jvulkanLib.VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2
    #print("statd VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2"]
try:
    VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR
    #print("statd VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR"]
try:
    VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP = jvulkanLib.VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP
    #print("statd VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP"]
try:
    VK_STRUCTURE_TYPE_SUBMIT_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SUBMIT_INFO
    #print("statd VK_STRUCTURE_TYPE_SUBMIT_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBMIT_INFO"]
try:
    VK_STRUCTURE_TYPE_SUBMIT_INFO_2 = jvulkanLib.VK_STRUCTURE_TYPE_SUBMIT_INFO_2
    #print("statd VK_STRUCTURE_TYPE_SUBMIT_INFO_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBMIT_INFO_2"]
try:
    VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR
    #print("statd VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2 = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2 = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_END_INFO = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_END_INFO
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_END_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_END_INFO"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM"]
try:
    VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI = jvulkanLib.VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI
    #print("statd VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI"]
try:
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT
    #print("statd VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT"]
try:
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT
    #print("statd VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT"]
try:
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR
    #print("statd VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR"]
try:
    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT
    #print("statd VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT"]
try:
    VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR
    #print("statd VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR"]
try:
    VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR
    #print("statd VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR"]
try:
    VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD = jvulkanLib.VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD
    #print("statd VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD"]
try:
    VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA = jvulkanLib.VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA
    #print("statd VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA"]
try:
    VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD = jvulkanLib.VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD
    #print("statd VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD"]
try:
    VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO = jvulkanLib.VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO
    #print("statd VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO"]
try:
    VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT = jvulkanLib.VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT
    #print("statd VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT"]
try:
    VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT = jvulkanLib.VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT
    #print("statd VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT"]
try:
    VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT = jvulkanLib.VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT
    #print("statd VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT"]
try:
    VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT = jvulkanLib.VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT
    #print("statd VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT"]
try:
    VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT = jvulkanLib.VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT
    #print("statd VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT"]
try:
    VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN = jvulkanLib.VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN
    #print("statd VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN"]
try:
    VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV = jvulkanLib.VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV
    #print("statd VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV"]
try:
    VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET = jvulkanLib.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET
    #print("statd VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET"]
try:
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR = jvulkanLib.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR
    #print("statd VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR"]
try:
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV = jvulkanLib.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV
    #print("statd VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV"]
try:
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK = jvulkanLib.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK
    #print("statd VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK"]
try:
    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT = jvulkanLib.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT
    #print("statd VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT"]
try:
    VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR"]
try:
    VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR = jvulkanLib.VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR
    #print("statd VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR"]
try:
    VK_SUBGROUP_FEATURE_ARITHMETIC_BIT = jvulkanLib.VK_SUBGROUP_FEATURE_ARITHMETIC_BIT
    #print("statd VK_SUBGROUP_FEATURE_ARITHMETIC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBGROUP_FEATURE_ARITHMETIC_BIT"]
try:
    VK_SUBGROUP_FEATURE_BALLOT_BIT = jvulkanLib.VK_SUBGROUP_FEATURE_BALLOT_BIT
    #print("statd VK_SUBGROUP_FEATURE_BALLOT_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBGROUP_FEATURE_BALLOT_BIT"]
try:
    VK_SUBGROUP_FEATURE_BASIC_BIT = jvulkanLib.VK_SUBGROUP_FEATURE_BASIC_BIT
    #print("statd VK_SUBGROUP_FEATURE_BASIC_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBGROUP_FEATURE_BASIC_BIT"]
try:
    VK_SUBGROUP_FEATURE_CLUSTERED_BIT = jvulkanLib.VK_SUBGROUP_FEATURE_CLUSTERED_BIT
    #print("statd VK_SUBGROUP_FEATURE_CLUSTERED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBGROUP_FEATURE_CLUSTERED_BIT"]
try:
    VK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM
    #print("statd VK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM"]
try:
    VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV = jvulkanLib.VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV
    #print("statd VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV"]
try:
    VK_SUBGROUP_FEATURE_QUAD_BIT = jvulkanLib.VK_SUBGROUP_FEATURE_QUAD_BIT
    #print("statd VK_SUBGROUP_FEATURE_QUAD_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBGROUP_FEATURE_QUAD_BIT"]
try:
    VK_SUBGROUP_FEATURE_SHUFFLE_BIT = jvulkanLib.VK_SUBGROUP_FEATURE_SHUFFLE_BIT
    #print("statd VK_SUBGROUP_FEATURE_SHUFFLE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBGROUP_FEATURE_SHUFFLE_BIT"]
try:
    VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT = jvulkanLib.VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT
    #print("statd VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT"]
try:
    VK_SUBGROUP_FEATURE_VOTE_BIT = jvulkanLib.VK_SUBGROUP_FEATURE_VOTE_BIT
    #print("statd VK_SUBGROUP_FEATURE_VOTE_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBGROUP_FEATURE_VOTE_BIT"]
try:
    VK_SUBMIT_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_SUBMIT_FLAG_BITS_MAX_ENUM
    #print("statd VK_SUBMIT_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBMIT_FLAG_BITS_MAX_ENUM"]
try:
    VK_SUBMIT_PROTECTED_BIT = jvulkanLib.VK_SUBMIT_PROTECTED_BIT
    #print("statd VK_SUBMIT_PROTECTED_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBMIT_PROTECTED_BIT"]
try:
    VK_SUBMIT_PROTECTED_BIT_KHR = jvulkanLib.VK_SUBMIT_PROTECTED_BIT_KHR
    #print("statd VK_SUBMIT_PROTECTED_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBMIT_PROTECTED_BIT_KHR"]
try:
    VK_SUBOPTIMAL_KHR = jvulkanLib.VK_SUBOPTIMAL_KHR
    #print("statd VK_SUBOPTIMAL_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBOPTIMAL_KHR"]
try:
    VK_SUBPASS_CONTENTS_INLINE = jvulkanLib.VK_SUBPASS_CONTENTS_INLINE
    #print("statd VK_SUBPASS_CONTENTS_INLINE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_CONTENTS_INLINE"]
try:
    VK_SUBPASS_CONTENTS_MAX_ENUM = jvulkanLib.VK_SUBPASS_CONTENTS_MAX_ENUM
    #print("statd VK_SUBPASS_CONTENTS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_CONTENTS_MAX_ENUM"]
try:
    VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS = jvulkanLib.VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS
    #print("statd VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS"]
try:
    VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM
    #print("statd VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM"]
try:
    VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM = jvulkanLib.VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM
    #print("statd VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM"]
try:
    VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX = jvulkanLib.VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX
    #print("statd VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX"]
try:
    VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX = jvulkanLib.VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX
    #print("statd VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX"]
try:
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM = jvulkanLib.VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM
    #print("statd VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM"]
try:
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM = jvulkanLib.VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM
    #print("statd VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM"]
try:
    VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM = jvulkanLib.VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM
    #print("statd VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM"]
try:
    VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM = jvulkanLib.VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM
    #print("statd VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM"]
try:
    VK_SUCCESS = jvulkanLib.VK_SUCCESS
    #print("statd VK_SUCCESS")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SUCCESS"]
try:
    VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT = jvulkanLib.VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT
    #print("statd VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT"]
try:
    VK_SURFACE_COUNTER_VBLANK_BIT_EXT = jvulkanLib.VK_SURFACE_COUNTER_VBLANK_BIT_EXT
    #print("statd VK_SURFACE_COUNTER_VBLANK_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_COUNTER_VBLANK_BIT_EXT"]
try:
    VK_SURFACE_COUNTER_VBLANK_EXT = jvulkanLib.VK_SURFACE_COUNTER_VBLANK_EXT
    #print("statd VK_SURFACE_COUNTER_VBLANK_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_COUNTER_VBLANK_EXT"]
try:
    VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR = jvulkanLib.VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR
    #print("statd VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR"]
try:
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR = jvulkanLib.VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR
    #print("statd VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR"]
try:
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR = jvulkanLib.VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR
    #print("statd VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR"]
try:
    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR = jvulkanLib.VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR
    #print("statd VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR"]
try:
    VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR = jvulkanLib.VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR
    #print("statd VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR"]
try:
    VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR = jvulkanLib.VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR
    #print("statd VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR"]
try:
    VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR = jvulkanLib.VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR
    #print("statd VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR"]
try:
    VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR = jvulkanLib.VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR
    #print("statd VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR"]
try:
    VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR = jvulkanLib.VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR
    #print("statd VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR"]
try:
    VK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR = jvulkanLib.VK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR
    #print("statd VK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR"]
try:
    VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR = jvulkanLib.VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR
    #print("statd VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR"]
try:
    VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR = jvulkanLib.VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR
    #print("statd VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR"]
try:
    VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR = jvulkanLib.VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR
    #print("statd VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR"]
try:
    VK_SYSTEM_ALLOCATION_SCOPE_CACHE = jvulkanLib.VK_SYSTEM_ALLOCATION_SCOPE_CACHE
    #print("statd VK_SYSTEM_ALLOCATION_SCOPE_CACHE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SYSTEM_ALLOCATION_SCOPE_CACHE"]
try:
    VK_SYSTEM_ALLOCATION_SCOPE_COMMAND = jvulkanLib.VK_SYSTEM_ALLOCATION_SCOPE_COMMAND
    #print("statd VK_SYSTEM_ALLOCATION_SCOPE_COMMAND")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SYSTEM_ALLOCATION_SCOPE_COMMAND"]
try:
    VK_SYSTEM_ALLOCATION_SCOPE_DEVICE = jvulkanLib.VK_SYSTEM_ALLOCATION_SCOPE_DEVICE
    #print("statd VK_SYSTEM_ALLOCATION_SCOPE_DEVICE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SYSTEM_ALLOCATION_SCOPE_DEVICE"]
try:
    VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE = jvulkanLib.VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE
    #print("statd VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE"]
try:
    VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM = jvulkanLib.VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM
    #print("statd VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM"]
try:
    VK_SYSTEM_ALLOCATION_SCOPE_OBJECT = jvulkanLib.VK_SYSTEM_ALLOCATION_SCOPE_OBJECT
    #print("statd VK_SYSTEM_ALLOCATION_SCOPE_OBJECT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_SYSTEM_ALLOCATION_SCOPE_OBJECT"]
try:
    VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT = jvulkanLib.VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT
    #print("statd VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT"]
try:
    VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR = jvulkanLib.VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR
    #print("statd VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR"]
try:
    VK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM = jvulkanLib.VK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM
    #print("statd VK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM"]
try:
    VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT = jvulkanLib.VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT
    #print("statd VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT"]
try:
    VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR = jvulkanLib.VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR
    #print("statd VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR"]
try:
    VK_THREAD_DONE_KHR = jvulkanLib.VK_THREAD_DONE_KHR
    #print("statd VK_THREAD_DONE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_THREAD_DONE_KHR"]
try:
    VK_THREAD_IDLE_KHR = jvulkanLib.VK_THREAD_IDLE_KHR
    #print("statd VK_THREAD_IDLE_KHR")
except Exception as e:
    pass
    UNSTATABLE += ["VK_THREAD_IDLE_KHR"]
try:
    VK_TIMEOUT = jvulkanLib.VK_TIMEOUT
    #print("statd VK_TIMEOUT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TIMEOUT"]
try:
    VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT = jvulkanLib.VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT
    #print("statd VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT"]
try:
    VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT = jvulkanLib.VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT
    #print("statd VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT"]
try:
    VK_TIME_DOMAIN_DEVICE_EXT = jvulkanLib.VK_TIME_DOMAIN_DEVICE_EXT
    #print("statd VK_TIME_DOMAIN_DEVICE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TIME_DOMAIN_DEVICE_EXT"]
try:
    VK_TIME_DOMAIN_MAX_ENUM_EXT = jvulkanLib.VK_TIME_DOMAIN_MAX_ENUM_EXT
    #print("statd VK_TIME_DOMAIN_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TIME_DOMAIN_MAX_ENUM_EXT"]
try:
    VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT = jvulkanLib.VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT
    #print("statd VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT"]
try:
    VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT = jvulkanLib.VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT
    #print("statd VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT"]
try:
    VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT = jvulkanLib.VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT
    #print("statd VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT"]
try:
    VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT = jvulkanLib.VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT
    #print("statd VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT"]
try:
    VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT = jvulkanLib.VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT
    #print("statd VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"]
try:
    VK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM = jvulkanLib.VK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM
    #print("statd VK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM"]
try:
    VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT = jvulkanLib.VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT
    #print("statd VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT"]
try:
    VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT = jvulkanLib.VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT
    #print("statd VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT"]
try:
    VK_TOOL_PURPOSE_PROFILING_BIT = jvulkanLib.VK_TOOL_PURPOSE_PROFILING_BIT
    #print("statd VK_TOOL_PURPOSE_PROFILING_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_PROFILING_BIT"]
try:
    VK_TOOL_PURPOSE_PROFILING_BIT_EXT = jvulkanLib.VK_TOOL_PURPOSE_PROFILING_BIT_EXT
    #print("statd VK_TOOL_PURPOSE_PROFILING_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_PROFILING_BIT_EXT"]
try:
    VK_TOOL_PURPOSE_TRACING_BIT = jvulkanLib.VK_TOOL_PURPOSE_TRACING_BIT
    #print("statd VK_TOOL_PURPOSE_TRACING_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_TRACING_BIT"]
try:
    VK_TOOL_PURPOSE_TRACING_BIT_EXT = jvulkanLib.VK_TOOL_PURPOSE_TRACING_BIT_EXT
    #print("statd VK_TOOL_PURPOSE_TRACING_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_TRACING_BIT_EXT"]
try:
    VK_TOOL_PURPOSE_VALIDATION_BIT = jvulkanLib.VK_TOOL_PURPOSE_VALIDATION_BIT
    #print("statd VK_TOOL_PURPOSE_VALIDATION_BIT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_VALIDATION_BIT"]
try:
    VK_TOOL_PURPOSE_VALIDATION_BIT_EXT = jvulkanLib.VK_TOOL_PURPOSE_VALIDATION_BIT_EXT
    #print("statd VK_TOOL_PURPOSE_VALIDATION_BIT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_TOOL_PURPOSE_VALIDATION_BIT_EXT"]
try:
    VK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT = jvulkanLib.VK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT
    #print("statd VK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT"]
try:
    VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT = jvulkanLib.VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT
    #print("statd VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT"]
try:
    VK_VALIDATION_CHECK_ALL_EXT = jvulkanLib.VK_VALIDATION_CHECK_ALL_EXT
    #print("statd VK_VALIDATION_CHECK_ALL_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_CHECK_ALL_EXT"]
try:
    VK_VALIDATION_CHECK_MAX_ENUM_EXT = jvulkanLib.VK_VALIDATION_CHECK_MAX_ENUM_EXT
    #print("statd VK_VALIDATION_CHECK_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_CHECK_MAX_ENUM_EXT"]
try:
    VK_VALIDATION_CHECK_SHADERS_EXT = jvulkanLib.VK_VALIDATION_CHECK_SHADERS_EXT
    #print("statd VK_VALIDATION_CHECK_SHADERS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_CHECK_SHADERS_EXT"]
try:
    VK_VALIDATION_FEATURE_DISABLE_ALL_EXT = jvulkanLib.VK_VALIDATION_FEATURE_DISABLE_ALL_EXT
    #print("statd VK_VALIDATION_FEATURE_DISABLE_ALL_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_DISABLE_ALL_EXT"]
try:
    VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT = jvulkanLib.VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT
    #print("statd VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT"]
try:
    VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT = jvulkanLib.VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT
    #print("statd VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT"]
try:
    VK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT = jvulkanLib.VK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT
    #print("statd VK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT"]
try:
    VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT = jvulkanLib.VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT
    #print("statd VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT"]
try:
    VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT = jvulkanLib.VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT
    #print("statd VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT"]
try:
    VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT = jvulkanLib.VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT
    #print("statd VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT"]
try:
    VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT = jvulkanLib.VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT
    #print("statd VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT"]
try:
    VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT = jvulkanLib.VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT
    #print("statd VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT"]
try:
    VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT = jvulkanLib.VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT
    #print("statd VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT"]
try:
    VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT = jvulkanLib.VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT
    #print("statd VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT"]
try:
    VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT = jvulkanLib.VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT
    #print("statd VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT"]
try:
    VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT = jvulkanLib.VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT
    #print("statd VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT"]
try:
    VK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT = jvulkanLib.VK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT
    #print("statd VK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT"]
try:
    VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT = jvulkanLib.VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT
    #print("statd VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT"]
try:
    VK_VENDOR_ID_CODEPLAY = jvulkanLib.VK_VENDOR_ID_CODEPLAY
    #print("statd VK_VENDOR_ID_CODEPLAY")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VENDOR_ID_CODEPLAY"]
try:
    VK_VENDOR_ID_KAZAN = jvulkanLib.VK_VENDOR_ID_KAZAN
    #print("statd VK_VENDOR_ID_KAZAN")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VENDOR_ID_KAZAN"]
try:
    VK_VENDOR_ID_MAX_ENUM = jvulkanLib.VK_VENDOR_ID_MAX_ENUM
    #print("statd VK_VENDOR_ID_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VENDOR_ID_MAX_ENUM"]
try:
    VK_VENDOR_ID_MESA = jvulkanLib.VK_VENDOR_ID_MESA
    #print("statd VK_VENDOR_ID_MESA")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VENDOR_ID_MESA"]
try:
    VK_VENDOR_ID_POCL = jvulkanLib.VK_VENDOR_ID_POCL
    #print("statd VK_VENDOR_ID_POCL")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VENDOR_ID_POCL"]
try:
    VK_VENDOR_ID_VIV = jvulkanLib.VK_VENDOR_ID_VIV
    #print("statd VK_VENDOR_ID_VIV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VENDOR_ID_VIV"]
try:
    VK_VENDOR_ID_VSI = jvulkanLib.VK_VENDOR_ID_VSI
    #print("statd VK_VENDOR_ID_VSI")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VENDOR_ID_VSI"]
try:
    VK_VERTEX_INPUT_RATE_INSTANCE = jvulkanLib.VK_VERTEX_INPUT_RATE_INSTANCE
    #print("statd VK_VERTEX_INPUT_RATE_INSTANCE")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VERTEX_INPUT_RATE_INSTANCE"]
try:
    VK_VERTEX_INPUT_RATE_MAX_ENUM = jvulkanLib.VK_VERTEX_INPUT_RATE_MAX_ENUM
    #print("statd VK_VERTEX_INPUT_RATE_MAX_ENUM")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VERTEX_INPUT_RATE_MAX_ENUM"]
try:
    VK_VERTEX_INPUT_RATE_VERTEX = jvulkanLib.VK_VERTEX_INPUT_RATE_VERTEX
    #print("statd VK_VERTEX_INPUT_RATE_VERTEX")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VERTEX_INPUT_RATE_VERTEX"]
try:
    VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV = jvulkanLib.VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV
    #print("statd VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV"]
try:
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV = jvulkanLib.VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV
    #print("statd VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV"]
try:
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV = jvulkanLib.VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV
    #print("statd VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV"]
try:
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV = jvulkanLib.VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV
    #print("statd VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV"]
try:
    VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV = jvulkanLib.VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV
    #print("statd VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV"]
try:
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV = jvulkanLib.VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV
    #print("statd VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV"]
try:
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV = jvulkanLib.VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV
    #print("statd VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV"]
try:
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV = jvulkanLib.VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV
    #print("statd VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV"]
try:
    VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV = jvulkanLib.VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV
    #print("statd VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV")
except Exception as e:
    pass
    UNSTATABLE += ["VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV"]
try:
    vkAcquireDrmDisplayEXT = jvulkanLib.vkAcquireDrmDisplayEXT
    #print("statd vkAcquireDrmDisplayEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkAcquireDrmDisplayEXT"]
try:
    vkAcquireNextImage2KHR = jvulkanLib.vkAcquireNextImage2KHR
    #print("statd vkAcquireNextImage2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkAcquireNextImage2KHR"]
try:
    vkAcquireNextImageKHR = jvulkanLib.vkAcquireNextImageKHR
    #print("statd vkAcquireNextImageKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkAcquireNextImageKHR"]
try:
    vkAcquirePerformanceConfigurationINTEL = jvulkanLib.vkAcquirePerformanceConfigurationINTEL
    #print("statd vkAcquirePerformanceConfigurationINTEL")
except Exception as e:
    pass
    UNSTATABLE += ["vkAcquirePerformanceConfigurationINTEL"]
try:
    vkAcquireProfilingLockKHR = jvulkanLib.vkAcquireProfilingLockKHR
    #print("statd vkAcquireProfilingLockKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkAcquireProfilingLockKHR"]
try:
    vkAcquireWinrtDisplayNV = jvulkanLib.vkAcquireWinrtDisplayNV
    #print("statd vkAcquireWinrtDisplayNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkAcquireWinrtDisplayNV"]
try:
    vkAllocateCommandBuffers = jvulkanLib.vkAllocateCommandBuffers
    #print("statd vkAllocateCommandBuffers")
except Exception as e:
    pass
    UNSTATABLE += ["vkAllocateCommandBuffers"]
try:
    vkAllocateDescriptorSets = jvulkanLib.vkAllocateDescriptorSets
    #print("statd vkAllocateDescriptorSets")
except Exception as e:
    pass
    UNSTATABLE += ["vkAllocateDescriptorSets"]
try:
    vkAllocateMemory = jvulkanLib.vkAllocateMemory
    #print("statd vkAllocateMemory")
except Exception as e:
    pass
    UNSTATABLE += ["vkAllocateMemory"]
try:
    vkBeginCommandBuffer = jvulkanLib.vkBeginCommandBuffer
    #print("statd vkBeginCommandBuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkBeginCommandBuffer"]
try:
    vkBindAccelerationStructureMemoryNV = jvulkanLib.vkBindAccelerationStructureMemoryNV
    #print("statd vkBindAccelerationStructureMemoryNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkBindAccelerationStructureMemoryNV"]
try:
    vkBindBufferMemory = jvulkanLib.vkBindBufferMemory
    #print("statd vkBindBufferMemory")
except Exception as e:
    pass
    UNSTATABLE += ["vkBindBufferMemory"]
try:
    vkBindBufferMemory2 = jvulkanLib.vkBindBufferMemory2
    #print("statd vkBindBufferMemory2")
except Exception as e:
    pass
    UNSTATABLE += ["vkBindBufferMemory2"]
try:
    vkBindBufferMemory2KHR = jvulkanLib.vkBindBufferMemory2KHR
    #print("statd vkBindBufferMemory2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkBindBufferMemory2KHR"]
try:
    vkBindImageMemory = jvulkanLib.vkBindImageMemory
    #print("statd vkBindImageMemory")
except Exception as e:
    pass
    UNSTATABLE += ["vkBindImageMemory"]
try:
    vkBindImageMemory2 = jvulkanLib.vkBindImageMemory2
    #print("statd vkBindImageMemory2")
except Exception as e:
    pass
    UNSTATABLE += ["vkBindImageMemory2"]
try:
    vkBindImageMemory2KHR = jvulkanLib.vkBindImageMemory2KHR
    #print("statd vkBindImageMemory2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkBindImageMemory2KHR"]
try:
    vkBuildAccelerationStructuresKHR = jvulkanLib.vkBuildAccelerationStructuresKHR
    #print("statd vkBuildAccelerationStructuresKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkBuildAccelerationStructuresKHR"]
try:
    vkCmdBeginConditionalRenderingEXT = jvulkanLib.vkCmdBeginConditionalRenderingEXT
    #print("statd vkCmdBeginConditionalRenderingEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBeginConditionalRenderingEXT"]
try:
    vkCmdBeginDebugUtilsLabelEXT = jvulkanLib.vkCmdBeginDebugUtilsLabelEXT
    #print("statd vkCmdBeginDebugUtilsLabelEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBeginDebugUtilsLabelEXT"]
try:
    vkCmdBeginQuery = jvulkanLib.vkCmdBeginQuery
    #print("statd vkCmdBeginQuery")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBeginQuery"]
try:
    vkCmdBeginQueryIndexedEXT = jvulkanLib.vkCmdBeginQueryIndexedEXT
    #print("statd vkCmdBeginQueryIndexedEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBeginQueryIndexedEXT"]
try:
    vkCmdBeginRenderPass = jvulkanLib.vkCmdBeginRenderPass
    #print("statd vkCmdBeginRenderPass")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBeginRenderPass"]
try:
    vkCmdBeginRenderPass2 = jvulkanLib.vkCmdBeginRenderPass2
    #print("statd vkCmdBeginRenderPass2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBeginRenderPass2"]
try:
    vkCmdBeginRenderPass2KHR = jvulkanLib.vkCmdBeginRenderPass2KHR
    #print("statd vkCmdBeginRenderPass2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBeginRenderPass2KHR"]
try:
    vkCmdBeginRendering = jvulkanLib.vkCmdBeginRendering
    #print("statd vkCmdBeginRendering")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBeginRendering"]
try:
    vkCmdBeginRenderingKHR = jvulkanLib.vkCmdBeginRenderingKHR
    #print("statd vkCmdBeginRenderingKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBeginRenderingKHR"]
try:
    vkCmdBeginTransformFeedbackEXT = jvulkanLib.vkCmdBeginTransformFeedbackEXT
    #print("statd vkCmdBeginTransformFeedbackEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBeginTransformFeedbackEXT"]
try:
    vkCmdBindDescriptorSets = jvulkanLib.vkCmdBindDescriptorSets
    #print("statd vkCmdBindDescriptorSets")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBindDescriptorSets"]
try:
    vkCmdBindIndexBuffer = jvulkanLib.vkCmdBindIndexBuffer
    #print("statd vkCmdBindIndexBuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBindIndexBuffer"]
try:
    vkCmdBindInvocationMaskHUAWEI = jvulkanLib.vkCmdBindInvocationMaskHUAWEI
    #print("statd vkCmdBindInvocationMaskHUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBindInvocationMaskHUAWEI"]
try:
    vkCmdBindPipeline = jvulkanLib.vkCmdBindPipeline
    #print("statd vkCmdBindPipeline")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBindPipeline"]
try:
    vkCmdBindPipelineShaderGroupNV = jvulkanLib.vkCmdBindPipelineShaderGroupNV
    #print("statd vkCmdBindPipelineShaderGroupNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBindPipelineShaderGroupNV"]
try:
    vkCmdBindShadingRateImageNV = jvulkanLib.vkCmdBindShadingRateImageNV
    #print("statd vkCmdBindShadingRateImageNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBindShadingRateImageNV"]
try:
    vkCmdBindTransformFeedbackBuffersEXT = jvulkanLib.vkCmdBindTransformFeedbackBuffersEXT
    #print("statd vkCmdBindTransformFeedbackBuffersEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBindTransformFeedbackBuffersEXT"]
try:
    vkCmdBindVertexBuffers = jvulkanLib.vkCmdBindVertexBuffers
    #print("statd vkCmdBindVertexBuffers")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBindVertexBuffers"]
try:
    vkCmdBindVertexBuffers2 = jvulkanLib.vkCmdBindVertexBuffers2
    #print("statd vkCmdBindVertexBuffers2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBindVertexBuffers2"]
try:
    vkCmdBindVertexBuffers2EXT = jvulkanLib.vkCmdBindVertexBuffers2EXT
    #print("statd vkCmdBindVertexBuffers2EXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBindVertexBuffers2EXT"]
try:
    vkCmdBlitImage = jvulkanLib.vkCmdBlitImage
    #print("statd vkCmdBlitImage")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBlitImage"]
try:
    vkCmdBlitImage2 = jvulkanLib.vkCmdBlitImage2
    #print("statd vkCmdBlitImage2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBlitImage2"]
try:
    vkCmdBlitImage2KHR = jvulkanLib.vkCmdBlitImage2KHR
    #print("statd vkCmdBlitImage2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBlitImage2KHR"]
try:
    vkCmdBuildAccelerationStructureNV = jvulkanLib.vkCmdBuildAccelerationStructureNV
    #print("statd vkCmdBuildAccelerationStructureNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBuildAccelerationStructureNV"]
try:
    vkCmdBuildAccelerationStructuresIndirectKHR = jvulkanLib.vkCmdBuildAccelerationStructuresIndirectKHR
    #print("statd vkCmdBuildAccelerationStructuresIndirectKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBuildAccelerationStructuresIndirectKHR"]
try:
    vkCmdBuildAccelerationStructuresKHR = jvulkanLib.vkCmdBuildAccelerationStructuresKHR
    #print("statd vkCmdBuildAccelerationStructuresKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdBuildAccelerationStructuresKHR"]
try:
    vkCmdClearAttachments = jvulkanLib.vkCmdClearAttachments
    #print("statd vkCmdClearAttachments")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdClearAttachments"]
try:
    vkCmdClearColorImage = jvulkanLib.vkCmdClearColorImage
    #print("statd vkCmdClearColorImage")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdClearColorImage"]
try:
    vkCmdClearDepthStencilImage = jvulkanLib.vkCmdClearDepthStencilImage
    #print("statd vkCmdClearDepthStencilImage")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdClearDepthStencilImage"]
try:
    vkCmdCopyAccelerationStructureKHR = jvulkanLib.vkCmdCopyAccelerationStructureKHR
    #print("statd vkCmdCopyAccelerationStructureKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyAccelerationStructureKHR"]
try:
    vkCmdCopyAccelerationStructureNV = jvulkanLib.vkCmdCopyAccelerationStructureNV
    #print("statd vkCmdCopyAccelerationStructureNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyAccelerationStructureNV"]
try:
    vkCmdCopyAccelerationStructureToMemoryKHR = jvulkanLib.vkCmdCopyAccelerationStructureToMemoryKHR
    #print("statd vkCmdCopyAccelerationStructureToMemoryKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyAccelerationStructureToMemoryKHR"]
try:
    vkCmdCopyBuffer = jvulkanLib.vkCmdCopyBuffer
    #print("statd vkCmdCopyBuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyBuffer"]
try:
    vkCmdCopyBuffer2 = jvulkanLib.vkCmdCopyBuffer2
    #print("statd vkCmdCopyBuffer2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyBuffer2"]
try:
    vkCmdCopyBuffer2KHR = jvulkanLib.vkCmdCopyBuffer2KHR
    #print("statd vkCmdCopyBuffer2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyBuffer2KHR"]
try:
    vkCmdCopyBufferToImage = jvulkanLib.vkCmdCopyBufferToImage
    #print("statd vkCmdCopyBufferToImage")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyBufferToImage"]
try:
    vkCmdCopyBufferToImage2 = jvulkanLib.vkCmdCopyBufferToImage2
    #print("statd vkCmdCopyBufferToImage2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyBufferToImage2"]
try:
    vkCmdCopyBufferToImage2KHR = jvulkanLib.vkCmdCopyBufferToImage2KHR
    #print("statd vkCmdCopyBufferToImage2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyBufferToImage2KHR"]
try:
    vkCmdCopyImage = jvulkanLib.vkCmdCopyImage
    #print("statd vkCmdCopyImage")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyImage"]
try:
    vkCmdCopyImage2 = jvulkanLib.vkCmdCopyImage2
    #print("statd vkCmdCopyImage2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyImage2"]
try:
    vkCmdCopyImage2KHR = jvulkanLib.vkCmdCopyImage2KHR
    #print("statd vkCmdCopyImage2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyImage2KHR"]
try:
    vkCmdCopyImageToBuffer = jvulkanLib.vkCmdCopyImageToBuffer
    #print("statd vkCmdCopyImageToBuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyImageToBuffer"]
try:
    vkCmdCopyImageToBuffer2 = jvulkanLib.vkCmdCopyImageToBuffer2
    #print("statd vkCmdCopyImageToBuffer2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyImageToBuffer2"]
try:
    vkCmdCopyImageToBuffer2KHR = jvulkanLib.vkCmdCopyImageToBuffer2KHR
    #print("statd vkCmdCopyImageToBuffer2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyImageToBuffer2KHR"]
try:
    vkCmdCopyMemoryToAccelerationStructureKHR = jvulkanLib.vkCmdCopyMemoryToAccelerationStructureKHR
    #print("statd vkCmdCopyMemoryToAccelerationStructureKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyMemoryToAccelerationStructureKHR"]
try:
    vkCmdCopyQueryPoolResults = jvulkanLib.vkCmdCopyQueryPoolResults
    #print("statd vkCmdCopyQueryPoolResults")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCopyQueryPoolResults"]
try:
    vkCmdCuLaunchKernelNVX = jvulkanLib.vkCmdCuLaunchKernelNVX
    #print("statd vkCmdCuLaunchKernelNVX")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdCuLaunchKernelNVX"]
try:
    vkCmdDebugMarkerBeginEXT = jvulkanLib.vkCmdDebugMarkerBeginEXT
    #print("statd vkCmdDebugMarkerBeginEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDebugMarkerBeginEXT"]
try:
    vkCmdDebugMarkerEndEXT = jvulkanLib.vkCmdDebugMarkerEndEXT
    #print("statd vkCmdDebugMarkerEndEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDebugMarkerEndEXT"]
try:
    vkCmdDebugMarkerInsertEXT = jvulkanLib.vkCmdDebugMarkerInsertEXT
    #print("statd vkCmdDebugMarkerInsertEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDebugMarkerInsertEXT"]
try:
    vkCmdDispatch = jvulkanLib.vkCmdDispatch
    #print("statd vkCmdDispatch")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDispatch"]
try:
    vkCmdDispatchBase = jvulkanLib.vkCmdDispatchBase
    #print("statd vkCmdDispatchBase")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDispatchBase"]
try:
    vkCmdDispatchBaseKHR = jvulkanLib.vkCmdDispatchBaseKHR
    #print("statd vkCmdDispatchBaseKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDispatchBaseKHR"]
try:
    vkCmdDispatchIndirect = jvulkanLib.vkCmdDispatchIndirect
    #print("statd vkCmdDispatchIndirect")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDispatchIndirect"]
try:
    vkCmdDraw = jvulkanLib.vkCmdDraw
    #print("statd vkCmdDraw")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDraw"]
try:
    vkCmdDrawIndexed = jvulkanLib.vkCmdDrawIndexed
    #print("statd vkCmdDrawIndexed")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawIndexed"]
try:
    vkCmdDrawIndexedIndirect = jvulkanLib.vkCmdDrawIndexedIndirect
    #print("statd vkCmdDrawIndexedIndirect")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawIndexedIndirect"]
try:
    vkCmdDrawIndexedIndirectCount = jvulkanLib.vkCmdDrawIndexedIndirectCount
    #print("statd vkCmdDrawIndexedIndirectCount")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawIndexedIndirectCount"]
try:
    vkCmdDrawIndexedIndirectCountAMD = jvulkanLib.vkCmdDrawIndexedIndirectCountAMD
    #print("statd vkCmdDrawIndexedIndirectCountAMD")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawIndexedIndirectCountAMD"]
try:
    vkCmdDrawIndexedIndirectCountKHR = jvulkanLib.vkCmdDrawIndexedIndirectCountKHR
    #print("statd vkCmdDrawIndexedIndirectCountKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawIndexedIndirectCountKHR"]
try:
    vkCmdDrawIndirect = jvulkanLib.vkCmdDrawIndirect
    #print("statd vkCmdDrawIndirect")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawIndirect"]
try:
    vkCmdDrawIndirectByteCountEXT = jvulkanLib.vkCmdDrawIndirectByteCountEXT
    #print("statd vkCmdDrawIndirectByteCountEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawIndirectByteCountEXT"]
try:
    vkCmdDrawIndirectCount = jvulkanLib.vkCmdDrawIndirectCount
    #print("statd vkCmdDrawIndirectCount")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawIndirectCount"]
try:
    vkCmdDrawIndirectCountAMD = jvulkanLib.vkCmdDrawIndirectCountAMD
    #print("statd vkCmdDrawIndirectCountAMD")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawIndirectCountAMD"]
try:
    vkCmdDrawIndirectCountKHR = jvulkanLib.vkCmdDrawIndirectCountKHR
    #print("statd vkCmdDrawIndirectCountKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawIndirectCountKHR"]
try:
    vkCmdDrawMeshTasksIndirectCountNV = jvulkanLib.vkCmdDrawMeshTasksIndirectCountNV
    #print("statd vkCmdDrawMeshTasksIndirectCountNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawMeshTasksIndirectCountNV"]
try:
    vkCmdDrawMeshTasksIndirectNV = jvulkanLib.vkCmdDrawMeshTasksIndirectNV
    #print("statd vkCmdDrawMeshTasksIndirectNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawMeshTasksIndirectNV"]
try:
    vkCmdDrawMeshTasksNV = jvulkanLib.vkCmdDrawMeshTasksNV
    #print("statd vkCmdDrawMeshTasksNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawMeshTasksNV"]
try:
    vkCmdDrawMultiEXT = jvulkanLib.vkCmdDrawMultiEXT
    #print("statd vkCmdDrawMultiEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawMultiEXT"]
try:
    vkCmdDrawMultiIndexedEXT = jvulkanLib.vkCmdDrawMultiIndexedEXT
    #print("statd vkCmdDrawMultiIndexedEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdDrawMultiIndexedEXT"]
try:
    vkCmdEndConditionalRenderingEXT = jvulkanLib.vkCmdEndConditionalRenderingEXT
    #print("statd vkCmdEndConditionalRenderingEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdEndConditionalRenderingEXT"]
try:
    vkCmdEndDebugUtilsLabelEXT = jvulkanLib.vkCmdEndDebugUtilsLabelEXT
    #print("statd vkCmdEndDebugUtilsLabelEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdEndDebugUtilsLabelEXT"]
try:
    vkCmdEndQuery = jvulkanLib.vkCmdEndQuery
    #print("statd vkCmdEndQuery")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdEndQuery"]
try:
    vkCmdEndQueryIndexedEXT = jvulkanLib.vkCmdEndQueryIndexedEXT
    #print("statd vkCmdEndQueryIndexedEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdEndQueryIndexedEXT"]
try:
    vkCmdEndRenderPass = jvulkanLib.vkCmdEndRenderPass
    #print("statd vkCmdEndRenderPass")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdEndRenderPass"]
try:
    vkCmdEndRenderPass2 = jvulkanLib.vkCmdEndRenderPass2
    #print("statd vkCmdEndRenderPass2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdEndRenderPass2"]
try:
    vkCmdEndRenderPass2KHR = jvulkanLib.vkCmdEndRenderPass2KHR
    #print("statd vkCmdEndRenderPass2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdEndRenderPass2KHR"]
try:
    vkCmdEndRendering = jvulkanLib.vkCmdEndRendering
    #print("statd vkCmdEndRendering")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdEndRendering"]
try:
    vkCmdEndRenderingKHR = jvulkanLib.vkCmdEndRenderingKHR
    #print("statd vkCmdEndRenderingKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdEndRenderingKHR"]
try:
    vkCmdEndTransformFeedbackEXT = jvulkanLib.vkCmdEndTransformFeedbackEXT
    #print("statd vkCmdEndTransformFeedbackEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdEndTransformFeedbackEXT"]
try:
    vkCmdExecuteCommands = jvulkanLib.vkCmdExecuteCommands
    #print("statd vkCmdExecuteCommands")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdExecuteCommands"]
try:
    vkCmdExecuteGeneratedCommandsNV = jvulkanLib.vkCmdExecuteGeneratedCommandsNV
    #print("statd vkCmdExecuteGeneratedCommandsNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdExecuteGeneratedCommandsNV"]
try:
    vkCmdFillBuffer = jvulkanLib.vkCmdFillBuffer
    #print("statd vkCmdFillBuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdFillBuffer"]
try:
    vkCmdInsertDebugUtilsLabelEXT = jvulkanLib.vkCmdInsertDebugUtilsLabelEXT
    #print("statd vkCmdInsertDebugUtilsLabelEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdInsertDebugUtilsLabelEXT"]
try:
    vkCmdNextSubpass = jvulkanLib.vkCmdNextSubpass
    #print("statd vkCmdNextSubpass")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdNextSubpass"]
try:
    vkCmdNextSubpass2 = jvulkanLib.vkCmdNextSubpass2
    #print("statd vkCmdNextSubpass2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdNextSubpass2"]
try:
    vkCmdNextSubpass2KHR = jvulkanLib.vkCmdNextSubpass2KHR
    #print("statd vkCmdNextSubpass2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdNextSubpass2KHR"]
try:
    vkCmdPipelineBarrier = jvulkanLib.vkCmdPipelineBarrier
    #print("statd vkCmdPipelineBarrier")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdPipelineBarrier"]
try:
    vkCmdPipelineBarrier2 = jvulkanLib.vkCmdPipelineBarrier2
    #print("statd vkCmdPipelineBarrier2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdPipelineBarrier2"]
try:
    vkCmdPipelineBarrier2KHR = jvulkanLib.vkCmdPipelineBarrier2KHR
    #print("statd vkCmdPipelineBarrier2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdPipelineBarrier2KHR"]
try:
    vkCmdPreprocessGeneratedCommandsNV = jvulkanLib.vkCmdPreprocessGeneratedCommandsNV
    #print("statd vkCmdPreprocessGeneratedCommandsNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdPreprocessGeneratedCommandsNV"]
try:
    vkCmdPushConstants = jvulkanLib.vkCmdPushConstants
    #print("statd vkCmdPushConstants")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdPushConstants"]
try:
    vkCmdPushDescriptorSetKHR = jvulkanLib.vkCmdPushDescriptorSetKHR
    #print("statd vkCmdPushDescriptorSetKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdPushDescriptorSetKHR"]
try:
    vkCmdPushDescriptorSetWithTemplateKHR = jvulkanLib.vkCmdPushDescriptorSetWithTemplateKHR
    #print("statd vkCmdPushDescriptorSetWithTemplateKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdPushDescriptorSetWithTemplateKHR"]
try:
    vkCmdResetEvent = jvulkanLib.vkCmdResetEvent
    #print("statd vkCmdResetEvent")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdResetEvent"]
try:
    vkCmdResetEvent2 = jvulkanLib.vkCmdResetEvent2
    #print("statd vkCmdResetEvent2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdResetEvent2"]
try:
    vkCmdResetEvent2KHR = jvulkanLib.vkCmdResetEvent2KHR
    #print("statd vkCmdResetEvent2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdResetEvent2KHR"]
try:
    vkCmdResetQueryPool = jvulkanLib.vkCmdResetQueryPool
    #print("statd vkCmdResetQueryPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdResetQueryPool"]
try:
    vkCmdResolveImage = jvulkanLib.vkCmdResolveImage
    #print("statd vkCmdResolveImage")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdResolveImage"]
try:
    vkCmdResolveImage2 = jvulkanLib.vkCmdResolveImage2
    #print("statd vkCmdResolveImage2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdResolveImage2"]
try:
    vkCmdResolveImage2KHR = jvulkanLib.vkCmdResolveImage2KHR
    #print("statd vkCmdResolveImage2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdResolveImage2KHR"]
try:
    vkCmdSetBlendConstants = jvulkanLib.vkCmdSetBlendConstants
    #print("statd vkCmdSetBlendConstants")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetBlendConstants"]
try:
    vkCmdSetCheckpointNV = jvulkanLib.vkCmdSetCheckpointNV
    #print("statd vkCmdSetCheckpointNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetCheckpointNV"]
try:
    vkCmdSetCoarseSampleOrderNV = jvulkanLib.vkCmdSetCoarseSampleOrderNV
    #print("statd vkCmdSetCoarseSampleOrderNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetCoarseSampleOrderNV"]
try:
    vkCmdSetColorWriteEnableEXT = jvulkanLib.vkCmdSetColorWriteEnableEXT
    #print("statd vkCmdSetColorWriteEnableEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetColorWriteEnableEXT"]
try:
    vkCmdSetCullMode = jvulkanLib.vkCmdSetCullMode
    #print("statd vkCmdSetCullMode")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetCullMode"]
try:
    vkCmdSetCullModeEXT = jvulkanLib.vkCmdSetCullModeEXT
    #print("statd vkCmdSetCullModeEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetCullModeEXT"]
try:
    vkCmdSetDepthBias = jvulkanLib.vkCmdSetDepthBias
    #print("statd vkCmdSetDepthBias")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthBias"]
try:
    vkCmdSetDepthBiasEnable = jvulkanLib.vkCmdSetDepthBiasEnable
    #print("statd vkCmdSetDepthBiasEnable")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthBiasEnable"]
try:
    vkCmdSetDepthBiasEnableEXT = jvulkanLib.vkCmdSetDepthBiasEnableEXT
    #print("statd vkCmdSetDepthBiasEnableEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthBiasEnableEXT"]
try:
    vkCmdSetDepthBounds = jvulkanLib.vkCmdSetDepthBounds
    #print("statd vkCmdSetDepthBounds")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthBounds"]
try:
    vkCmdSetDepthBoundsTestEnable = jvulkanLib.vkCmdSetDepthBoundsTestEnable
    #print("statd vkCmdSetDepthBoundsTestEnable")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthBoundsTestEnable"]
try:
    vkCmdSetDepthBoundsTestEnableEXT = jvulkanLib.vkCmdSetDepthBoundsTestEnableEXT
    #print("statd vkCmdSetDepthBoundsTestEnableEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthBoundsTestEnableEXT"]
try:
    vkCmdSetDepthCompareOp = jvulkanLib.vkCmdSetDepthCompareOp
    #print("statd vkCmdSetDepthCompareOp")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthCompareOp"]
try:
    vkCmdSetDepthCompareOpEXT = jvulkanLib.vkCmdSetDepthCompareOpEXT
    #print("statd vkCmdSetDepthCompareOpEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthCompareOpEXT"]
try:
    vkCmdSetDepthTestEnable = jvulkanLib.vkCmdSetDepthTestEnable
    #print("statd vkCmdSetDepthTestEnable")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthTestEnable"]
try:
    vkCmdSetDepthTestEnableEXT = jvulkanLib.vkCmdSetDepthTestEnableEXT
    #print("statd vkCmdSetDepthTestEnableEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthTestEnableEXT"]
try:
    vkCmdSetDepthWriteEnable = jvulkanLib.vkCmdSetDepthWriteEnable
    #print("statd vkCmdSetDepthWriteEnable")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthWriteEnable"]
try:
    vkCmdSetDepthWriteEnableEXT = jvulkanLib.vkCmdSetDepthWriteEnableEXT
    #print("statd vkCmdSetDepthWriteEnableEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDepthWriteEnableEXT"]
try:
    vkCmdSetDeviceMask = jvulkanLib.vkCmdSetDeviceMask
    #print("statd vkCmdSetDeviceMask")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDeviceMask"]
try:
    vkCmdSetDeviceMaskKHR = jvulkanLib.vkCmdSetDeviceMaskKHR
    #print("statd vkCmdSetDeviceMaskKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDeviceMaskKHR"]
try:
    vkCmdSetDiscardRectangleEXT = jvulkanLib.vkCmdSetDiscardRectangleEXT
    #print("statd vkCmdSetDiscardRectangleEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetDiscardRectangleEXT"]
try:
    vkCmdSetEvent = jvulkanLib.vkCmdSetEvent
    #print("statd vkCmdSetEvent")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetEvent"]
try:
    vkCmdSetEvent2 = jvulkanLib.vkCmdSetEvent2
    #print("statd vkCmdSetEvent2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetEvent2"]
try:
    vkCmdSetEvent2KHR = jvulkanLib.vkCmdSetEvent2KHR
    #print("statd vkCmdSetEvent2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetEvent2KHR"]
try:
    vkCmdSetExclusiveScissorNV = jvulkanLib.vkCmdSetExclusiveScissorNV
    #print("statd vkCmdSetExclusiveScissorNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetExclusiveScissorNV"]
try:
    vkCmdSetFragmentShadingRateEnumNV = jvulkanLib.vkCmdSetFragmentShadingRateEnumNV
    #print("statd vkCmdSetFragmentShadingRateEnumNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetFragmentShadingRateEnumNV"]
try:
    vkCmdSetFragmentShadingRateKHR = jvulkanLib.vkCmdSetFragmentShadingRateKHR
    #print("statd vkCmdSetFragmentShadingRateKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetFragmentShadingRateKHR"]
try:
    vkCmdSetFrontFace = jvulkanLib.vkCmdSetFrontFace
    #print("statd vkCmdSetFrontFace")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetFrontFace"]
try:
    vkCmdSetFrontFaceEXT = jvulkanLib.vkCmdSetFrontFaceEXT
    #print("statd vkCmdSetFrontFaceEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetFrontFaceEXT"]
try:
    vkCmdSetLineStippleEXT = jvulkanLib.vkCmdSetLineStippleEXT
    #print("statd vkCmdSetLineStippleEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetLineStippleEXT"]
try:
    vkCmdSetLineWidth = jvulkanLib.vkCmdSetLineWidth
    #print("statd vkCmdSetLineWidth")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetLineWidth"]
try:
    vkCmdSetLogicOpEXT = jvulkanLib.vkCmdSetLogicOpEXT
    #print("statd vkCmdSetLogicOpEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetLogicOpEXT"]
try:
    vkCmdSetPatchControlPointsEXT = jvulkanLib.vkCmdSetPatchControlPointsEXT
    #print("statd vkCmdSetPatchControlPointsEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetPatchControlPointsEXT"]
try:
    vkCmdSetPerformanceMarkerINTEL = jvulkanLib.vkCmdSetPerformanceMarkerINTEL
    #print("statd vkCmdSetPerformanceMarkerINTEL")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetPerformanceMarkerINTEL"]
try:
    vkCmdSetPerformanceOverrideINTEL = jvulkanLib.vkCmdSetPerformanceOverrideINTEL
    #print("statd vkCmdSetPerformanceOverrideINTEL")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetPerformanceOverrideINTEL"]
try:
    vkCmdSetPerformanceStreamMarkerINTEL = jvulkanLib.vkCmdSetPerformanceStreamMarkerINTEL
    #print("statd vkCmdSetPerformanceStreamMarkerINTEL")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetPerformanceStreamMarkerINTEL"]
try:
    vkCmdSetPrimitiveRestartEnable = jvulkanLib.vkCmdSetPrimitiveRestartEnable
    #print("statd vkCmdSetPrimitiveRestartEnable")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetPrimitiveRestartEnable"]
try:
    vkCmdSetPrimitiveRestartEnableEXT = jvulkanLib.vkCmdSetPrimitiveRestartEnableEXT
    #print("statd vkCmdSetPrimitiveRestartEnableEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetPrimitiveRestartEnableEXT"]
try:
    vkCmdSetPrimitiveTopology = jvulkanLib.vkCmdSetPrimitiveTopology
    #print("statd vkCmdSetPrimitiveTopology")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetPrimitiveTopology"]
try:
    vkCmdSetPrimitiveTopologyEXT = jvulkanLib.vkCmdSetPrimitiveTopologyEXT
    #print("statd vkCmdSetPrimitiveTopologyEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetPrimitiveTopologyEXT"]
try:
    vkCmdSetRasterizerDiscardEnable = jvulkanLib.vkCmdSetRasterizerDiscardEnable
    #print("statd vkCmdSetRasterizerDiscardEnable")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetRasterizerDiscardEnable"]
try:
    vkCmdSetRasterizerDiscardEnableEXT = jvulkanLib.vkCmdSetRasterizerDiscardEnableEXT
    #print("statd vkCmdSetRasterizerDiscardEnableEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetRasterizerDiscardEnableEXT"]
try:
    vkCmdSetRayTracingPipelineStackSizeKHR = jvulkanLib.vkCmdSetRayTracingPipelineStackSizeKHR
    #print("statd vkCmdSetRayTracingPipelineStackSizeKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetRayTracingPipelineStackSizeKHR"]
try:
    vkCmdSetSampleLocationsEXT = jvulkanLib.vkCmdSetSampleLocationsEXT
    #print("statd vkCmdSetSampleLocationsEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetSampleLocationsEXT"]
try:
    vkCmdSetScissor = jvulkanLib.vkCmdSetScissor
    #print("statd vkCmdSetScissor")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetScissor"]
try:
    vkCmdSetScissorWithCount = jvulkanLib.vkCmdSetScissorWithCount
    #print("statd vkCmdSetScissorWithCount")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetScissorWithCount"]
try:
    vkCmdSetScissorWithCountEXT = jvulkanLib.vkCmdSetScissorWithCountEXT
    #print("statd vkCmdSetScissorWithCountEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetScissorWithCountEXT"]
try:
    vkCmdSetStencilCompareMask = jvulkanLib.vkCmdSetStencilCompareMask
    #print("statd vkCmdSetStencilCompareMask")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetStencilCompareMask"]
try:
    vkCmdSetStencilOp = jvulkanLib.vkCmdSetStencilOp
    #print("statd vkCmdSetStencilOp")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetStencilOp"]
try:
    vkCmdSetStencilOpEXT = jvulkanLib.vkCmdSetStencilOpEXT
    #print("statd vkCmdSetStencilOpEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetStencilOpEXT"]
try:
    vkCmdSetStencilReference = jvulkanLib.vkCmdSetStencilReference
    #print("statd vkCmdSetStencilReference")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetStencilReference"]
try:
    vkCmdSetStencilTestEnable = jvulkanLib.vkCmdSetStencilTestEnable
    #print("statd vkCmdSetStencilTestEnable")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetStencilTestEnable"]
try:
    vkCmdSetStencilTestEnableEXT = jvulkanLib.vkCmdSetStencilTestEnableEXT
    #print("statd vkCmdSetStencilTestEnableEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetStencilTestEnableEXT"]
try:
    vkCmdSetStencilWriteMask = jvulkanLib.vkCmdSetStencilWriteMask
    #print("statd vkCmdSetStencilWriteMask")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetStencilWriteMask"]
try:
    vkCmdSetVertexInputEXT = jvulkanLib.vkCmdSetVertexInputEXT
    #print("statd vkCmdSetVertexInputEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetVertexInputEXT"]
try:
    vkCmdSetViewport = jvulkanLib.vkCmdSetViewport
    #print("statd vkCmdSetViewport")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetViewport"]
try:
    vkCmdSetViewportShadingRatePaletteNV = jvulkanLib.vkCmdSetViewportShadingRatePaletteNV
    #print("statd vkCmdSetViewportShadingRatePaletteNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetViewportShadingRatePaletteNV"]
try:
    vkCmdSetViewportWScalingNV = jvulkanLib.vkCmdSetViewportWScalingNV
    #print("statd vkCmdSetViewportWScalingNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetViewportWScalingNV"]
try:
    vkCmdSetViewportWithCount = jvulkanLib.vkCmdSetViewportWithCount
    #print("statd vkCmdSetViewportWithCount")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetViewportWithCount"]
try:
    vkCmdSetViewportWithCountEXT = jvulkanLib.vkCmdSetViewportWithCountEXT
    #print("statd vkCmdSetViewportWithCountEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSetViewportWithCountEXT"]
try:
    vkCmdSubpassShadingHUAWEI = jvulkanLib.vkCmdSubpassShadingHUAWEI
    #print("statd vkCmdSubpassShadingHUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdSubpassShadingHUAWEI"]
try:
    vkCmdTraceRaysIndirectKHR = jvulkanLib.vkCmdTraceRaysIndirectKHR
    #print("statd vkCmdTraceRaysIndirectKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdTraceRaysIndirectKHR"]
try:
    vkCmdTraceRaysKHR = jvulkanLib.vkCmdTraceRaysKHR
    #print("statd vkCmdTraceRaysKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdTraceRaysKHR"]
try:
    vkCmdTraceRaysNV = jvulkanLib.vkCmdTraceRaysNV
    #print("statd vkCmdTraceRaysNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdTraceRaysNV"]
try:
    vkCmdUpdateBuffer = jvulkanLib.vkCmdUpdateBuffer
    #print("statd vkCmdUpdateBuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdUpdateBuffer"]
try:
    vkCmdWaitEvents = jvulkanLib.vkCmdWaitEvents
    #print("statd vkCmdWaitEvents")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdWaitEvents"]
try:
    vkCmdWaitEvents2 = jvulkanLib.vkCmdWaitEvents2
    #print("statd vkCmdWaitEvents2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdWaitEvents2"]
try:
    vkCmdWaitEvents2KHR = jvulkanLib.vkCmdWaitEvents2KHR
    #print("statd vkCmdWaitEvents2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdWaitEvents2KHR"]
try:
    vkCmdWriteAccelerationStructuresPropertiesKHR = jvulkanLib.vkCmdWriteAccelerationStructuresPropertiesKHR
    #print("statd vkCmdWriteAccelerationStructuresPropertiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdWriteAccelerationStructuresPropertiesKHR"]
try:
    vkCmdWriteAccelerationStructuresPropertiesNV = jvulkanLib.vkCmdWriteAccelerationStructuresPropertiesNV
    #print("statd vkCmdWriteAccelerationStructuresPropertiesNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdWriteAccelerationStructuresPropertiesNV"]
try:
    vkCmdWriteBufferMarker2AMD = jvulkanLib.vkCmdWriteBufferMarker2AMD
    #print("statd vkCmdWriteBufferMarker2AMD")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdWriteBufferMarker2AMD"]
try:
    vkCmdWriteBufferMarkerAMD = jvulkanLib.vkCmdWriteBufferMarkerAMD
    #print("statd vkCmdWriteBufferMarkerAMD")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdWriteBufferMarkerAMD"]
try:
    vkCmdWriteTimestamp = jvulkanLib.vkCmdWriteTimestamp
    #print("statd vkCmdWriteTimestamp")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdWriteTimestamp"]
try:
    vkCmdWriteTimestamp2 = jvulkanLib.vkCmdWriteTimestamp2
    #print("statd vkCmdWriteTimestamp2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdWriteTimestamp2"]
try:
    vkCmdWriteTimestamp2KHR = jvulkanLib.vkCmdWriteTimestamp2KHR
    #print("statd vkCmdWriteTimestamp2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCmdWriteTimestamp2KHR"]
try:
    vkCompileDeferredNV = jvulkanLib.vkCompileDeferredNV
    #print("statd vkCompileDeferredNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCompileDeferredNV"]
try:
    vkCopyAccelerationStructureKHR = jvulkanLib.vkCopyAccelerationStructureKHR
    #print("statd vkCopyAccelerationStructureKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCopyAccelerationStructureKHR"]
try:
    vkCopyAccelerationStructureToMemoryKHR = jvulkanLib.vkCopyAccelerationStructureToMemoryKHR
    #print("statd vkCopyAccelerationStructureToMemoryKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCopyAccelerationStructureToMemoryKHR"]
try:
    vkCopyMemoryToAccelerationStructureKHR = jvulkanLib.vkCopyMemoryToAccelerationStructureKHR
    #print("statd vkCopyMemoryToAccelerationStructureKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCopyMemoryToAccelerationStructureKHR"]
try:
    vkCreateAccelerationStructureKHR = jvulkanLib.vkCreateAccelerationStructureKHR
    #print("statd vkCreateAccelerationStructureKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateAccelerationStructureKHR"]
try:
    vkCreateAccelerationStructureNV = jvulkanLib.vkCreateAccelerationStructureNV
    #print("statd vkCreateAccelerationStructureNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateAccelerationStructureNV"]
try:
    vkCreateAndroidSurfaceKHR = jvulkanLib.vkCreateAndroidSurfaceKHR
    #print("statd vkCreateAndroidSurfaceKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateAndroidSurfaceKHR"]
try:
    vkCreateBuffer = jvulkanLib.vkCreateBuffer
    #print("statd vkCreateBuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateBuffer"]
try:
    vkCreateBufferView = jvulkanLib.vkCreateBufferView
    #print("statd vkCreateBufferView")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateBufferView"]
try:
    vkCreateCommandPool = jvulkanLib.vkCreateCommandPool
    #print("statd vkCreateCommandPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateCommandPool"]
try:
    vkCreateComputePipelines = jvulkanLib.vkCreateComputePipelines
    #print("statd vkCreateComputePipelines")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateComputePipelines"]
try:
    vkCreateCuFunctionNVX = jvulkanLib.vkCreateCuFunctionNVX
    #print("statd vkCreateCuFunctionNVX")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateCuFunctionNVX"]
try:
    vkCreateCuModuleNVX = jvulkanLib.vkCreateCuModuleNVX
    #print("statd vkCreateCuModuleNVX")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateCuModuleNVX"]
try:
    vkCreateDebugReportCallbackEXT = jvulkanLib.vkCreateDebugReportCallbackEXT
    #print("statd vkCreateDebugReportCallbackEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateDebugReportCallbackEXT"]
try:
    vkCreateDebugUtilsMessengerEXT = jvulkanLib.vkCreateDebugUtilsMessengerEXT
    #print("statd vkCreateDebugUtilsMessengerEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateDebugUtilsMessengerEXT"]
try:
    vkCreateDeferredOperationKHR = jvulkanLib.vkCreateDeferredOperationKHR
    #print("statd vkCreateDeferredOperationKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateDeferredOperationKHR"]
try:
    vkCreateDescriptorPool = jvulkanLib.vkCreateDescriptorPool
    #print("statd vkCreateDescriptorPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateDescriptorPool"]
try:
    vkCreateDescriptorSetLayout = jvulkanLib.vkCreateDescriptorSetLayout
    #print("statd vkCreateDescriptorSetLayout")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateDescriptorSetLayout"]
try:
    vkCreateDescriptorUpdateTemplate = jvulkanLib.vkCreateDescriptorUpdateTemplate
    #print("statd vkCreateDescriptorUpdateTemplate")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateDescriptorUpdateTemplate"]
try:
    vkCreateDescriptorUpdateTemplateKHR = jvulkanLib.vkCreateDescriptorUpdateTemplateKHR
    #print("statd vkCreateDescriptorUpdateTemplateKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateDescriptorUpdateTemplateKHR"]
try:
    vkCreateDevice = jvulkanLib.vkCreateDevice
    #print("statd vkCreateDevice")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateDevice"]
try:
    vkCreateDisplayModeKHR = jvulkanLib.vkCreateDisplayModeKHR
    #print("statd vkCreateDisplayModeKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateDisplayModeKHR"]
try:
    vkCreateDisplayPlaneSurfaceKHR = jvulkanLib.vkCreateDisplayPlaneSurfaceKHR
    #print("statd vkCreateDisplayPlaneSurfaceKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateDisplayPlaneSurfaceKHR"]
try:
    vkCreateEvent = jvulkanLib.vkCreateEvent
    #print("statd vkCreateEvent")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateEvent"]
try:
    vkCreateFence = jvulkanLib.vkCreateFence
    #print("statd vkCreateFence")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateFence"]
try:
    vkCreateFramebuffer = jvulkanLib.vkCreateFramebuffer
    #print("statd vkCreateFramebuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateFramebuffer"]
try:
    vkCreateGraphicsPipelines = jvulkanLib.vkCreateGraphicsPipelines
    #print("statd vkCreateGraphicsPipelines")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateGraphicsPipelines"]
try:
    vkCreateHeadlessSurfaceEXT = jvulkanLib.vkCreateHeadlessSurfaceEXT
    #print("statd vkCreateHeadlessSurfaceEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateHeadlessSurfaceEXT"]
try:
    vkCreateImage = jvulkanLib.vkCreateImage
    #print("statd vkCreateImage")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateImage"]
try:
    vkCreateImageView = jvulkanLib.vkCreateImageView
    #print("statd vkCreateImageView")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateImageView"]
try:
    vkCreateIndirectCommandsLayoutNV = jvulkanLib.vkCreateIndirectCommandsLayoutNV
    #print("statd vkCreateIndirectCommandsLayoutNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateIndirectCommandsLayoutNV"]
try:
    vkCreateInstance = jvulkanLib.vkCreateInstance
    #print("statd vkCreateInstance")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateInstance"]
try:
    vkCreatePipelineCache = jvulkanLib.vkCreatePipelineCache
    #print("statd vkCreatePipelineCache")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreatePipelineCache"]
try:
    vkCreatePipelineLayout = jvulkanLib.vkCreatePipelineLayout
    #print("statd vkCreatePipelineLayout")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreatePipelineLayout"]
try:
    vkCreatePrivateDataSlot = jvulkanLib.vkCreatePrivateDataSlot
    #print("statd vkCreatePrivateDataSlot")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreatePrivateDataSlot"]
try:
    vkCreatePrivateDataSlotEXT = jvulkanLib.vkCreatePrivateDataSlotEXT
    #print("statd vkCreatePrivateDataSlotEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreatePrivateDataSlotEXT"]
try:
    vkCreateQueryPool = jvulkanLib.vkCreateQueryPool
    #print("statd vkCreateQueryPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateQueryPool"]
try:
    vkCreateRayTracingPipelinesKHR = jvulkanLib.vkCreateRayTracingPipelinesKHR
    #print("statd vkCreateRayTracingPipelinesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateRayTracingPipelinesKHR"]
try:
    vkCreateRayTracingPipelinesNV = jvulkanLib.vkCreateRayTracingPipelinesNV
    #print("statd vkCreateRayTracingPipelinesNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateRayTracingPipelinesNV"]
try:
    vkCreateRenderPass = jvulkanLib.vkCreateRenderPass
    #print("statd vkCreateRenderPass")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateRenderPass"]
try:
    vkCreateRenderPass2 = jvulkanLib.vkCreateRenderPass2
    #print("statd vkCreateRenderPass2")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateRenderPass2"]
try:
    vkCreateRenderPass2KHR = jvulkanLib.vkCreateRenderPass2KHR
    #print("statd vkCreateRenderPass2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateRenderPass2KHR"]
try:
    vkCreateSampler = jvulkanLib.vkCreateSampler
    #print("statd vkCreateSampler")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateSampler"]
try:
    vkCreateSamplerYcbcrConversion = jvulkanLib.vkCreateSamplerYcbcrConversion
    #print("statd vkCreateSamplerYcbcrConversion")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateSamplerYcbcrConversion"]
try:
    vkCreateSamplerYcbcrConversionKHR = jvulkanLib.vkCreateSamplerYcbcrConversionKHR
    #print("statd vkCreateSamplerYcbcrConversionKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateSamplerYcbcrConversionKHR"]
try:
    vkCreateSemaphore = jvulkanLib.vkCreateSemaphore
    #print("statd vkCreateSemaphore")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateSemaphore"]
try:
    vkCreateShaderModule = jvulkanLib.vkCreateShaderModule
    #print("statd vkCreateShaderModule")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateShaderModule"]
try:
    vkCreateSharedSwapchainsKHR = jvulkanLib.vkCreateSharedSwapchainsKHR
    #print("statd vkCreateSharedSwapchainsKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateSharedSwapchainsKHR"]
try:
    vkCreateSwapchainKHR = jvulkanLib.vkCreateSwapchainKHR
    #print("statd vkCreateSwapchainKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateSwapchainKHR"]
try:
    vkCreateValidationCacheEXT = jvulkanLib.vkCreateValidationCacheEXT
    #print("statd vkCreateValidationCacheEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateValidationCacheEXT"]
try:
    vkCreateWaylandSurfaceKHR = jvulkanLib.vkCreateWaylandSurfaceKHR
    #print("statd vkCreateWaylandSurfaceKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateWaylandSurfaceKHR"]
try:
    vkCreateXcbSurfaceKHR = jvulkanLib.vkCreateXcbSurfaceKHR
    #print("statd vkCreateXcbSurfaceKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateXcbSurfaceKHR"]
try:
    vkCreateXlibSurfaceKHR = jvulkanLib.vkCreateXlibSurfaceKHR
    #print("statd vkCreateXlibSurfaceKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkCreateXlibSurfaceKHR"]
try:
    vkDebugMarkerSetObjectNameEXT = jvulkanLib.vkDebugMarkerSetObjectNameEXT
    #print("statd vkDebugMarkerSetObjectNameEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkDebugMarkerSetObjectNameEXT"]
try:
    vkDebugMarkerSetObjectTagEXT = jvulkanLib.vkDebugMarkerSetObjectTagEXT
    #print("statd vkDebugMarkerSetObjectTagEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkDebugMarkerSetObjectTagEXT"]
try:
    vkDebugReportMessageEXT = jvulkanLib.vkDebugReportMessageEXT
    #print("statd vkDebugReportMessageEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkDebugReportMessageEXT"]
try:
    vkDeferredOperationJoinKHR = jvulkanLib.vkDeferredOperationJoinKHR
    #print("statd vkDeferredOperationJoinKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkDeferredOperationJoinKHR"]
try:
    vkDestroyAccelerationStructureKHR = jvulkanLib.vkDestroyAccelerationStructureKHR
    #print("statd vkDestroyAccelerationStructureKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyAccelerationStructureKHR"]
try:
    vkDestroyAccelerationStructureNV = jvulkanLib.vkDestroyAccelerationStructureNV
    #print("statd vkDestroyAccelerationStructureNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyAccelerationStructureNV"]
try:
    vkDestroyBuffer = jvulkanLib.vkDestroyBuffer
    #print("statd vkDestroyBuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyBuffer"]
try:
    vkDestroyBufferView = jvulkanLib.vkDestroyBufferView
    #print("statd vkDestroyBufferView")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyBufferView"]
try:
    vkDestroyCommandPool = jvulkanLib.vkDestroyCommandPool
    #print("statd vkDestroyCommandPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyCommandPool"]
try:
    vkDestroyCuFunctionNVX = jvulkanLib.vkDestroyCuFunctionNVX
    #print("statd vkDestroyCuFunctionNVX")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyCuFunctionNVX"]
try:
    vkDestroyCuModuleNVX = jvulkanLib.vkDestroyCuModuleNVX
    #print("statd vkDestroyCuModuleNVX")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyCuModuleNVX"]
try:
    vkDestroyDebugReportCallbackEXT = jvulkanLib.vkDestroyDebugReportCallbackEXT
    #print("statd vkDestroyDebugReportCallbackEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyDebugReportCallbackEXT"]
try:
    vkDestroyDebugUtilsMessengerEXT = jvulkanLib.vkDestroyDebugUtilsMessengerEXT
    #print("statd vkDestroyDebugUtilsMessengerEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyDebugUtilsMessengerEXT"]
try:
    vkDestroyDeferredOperationKHR = jvulkanLib.vkDestroyDeferredOperationKHR
    #print("statd vkDestroyDeferredOperationKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyDeferredOperationKHR"]
try:
    vkDestroyDescriptorPool = jvulkanLib.vkDestroyDescriptorPool
    #print("statd vkDestroyDescriptorPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyDescriptorPool"]
try:
    vkDestroyDescriptorSetLayout = jvulkanLib.vkDestroyDescriptorSetLayout
    #print("statd vkDestroyDescriptorSetLayout")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyDescriptorSetLayout"]
try:
    vkDestroyDescriptorUpdateTemplate = jvulkanLib.vkDestroyDescriptorUpdateTemplate
    #print("statd vkDestroyDescriptorUpdateTemplate")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyDescriptorUpdateTemplate"]
try:
    vkDestroyDescriptorUpdateTemplateKHR = jvulkanLib.vkDestroyDescriptorUpdateTemplateKHR
    #print("statd vkDestroyDescriptorUpdateTemplateKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyDescriptorUpdateTemplateKHR"]
try:
    vkDestroyDevice = jvulkanLib.vkDestroyDevice
    #print("statd vkDestroyDevice")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyDevice"]
try:
    vkDestroyEvent = jvulkanLib.vkDestroyEvent
    #print("statd vkDestroyEvent")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyEvent"]
try:
    vkDestroyFence = jvulkanLib.vkDestroyFence
    #print("statd vkDestroyFence")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyFence"]
try:
    vkDestroyFramebuffer = jvulkanLib.vkDestroyFramebuffer
    #print("statd vkDestroyFramebuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyFramebuffer"]
try:
    vkDestroyImage = jvulkanLib.vkDestroyImage
    #print("statd vkDestroyImage")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyImage"]
try:
    vkDestroyImageView = jvulkanLib.vkDestroyImageView
    #print("statd vkDestroyImageView")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyImageView"]
try:
    vkDestroyIndirectCommandsLayoutNV = jvulkanLib.vkDestroyIndirectCommandsLayoutNV
    #print("statd vkDestroyIndirectCommandsLayoutNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyIndirectCommandsLayoutNV"]
try:
    vkDestroyInstance = jvulkanLib.vkDestroyInstance
    #print("statd vkDestroyInstance")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyInstance"]
try:
    vkDestroyPipeline = jvulkanLib.vkDestroyPipeline
    #print("statd vkDestroyPipeline")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyPipeline"]
try:
    vkDestroyPipelineCache = jvulkanLib.vkDestroyPipelineCache
    #print("statd vkDestroyPipelineCache")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyPipelineCache"]
try:
    vkDestroyPipelineLayout = jvulkanLib.vkDestroyPipelineLayout
    #print("statd vkDestroyPipelineLayout")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyPipelineLayout"]
try:
    vkDestroyPrivateDataSlot = jvulkanLib.vkDestroyPrivateDataSlot
    #print("statd vkDestroyPrivateDataSlot")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyPrivateDataSlot"]
try:
    vkDestroyPrivateDataSlotEXT = jvulkanLib.vkDestroyPrivateDataSlotEXT
    #print("statd vkDestroyPrivateDataSlotEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyPrivateDataSlotEXT"]
try:
    vkDestroyQueryPool = jvulkanLib.vkDestroyQueryPool
    #print("statd vkDestroyQueryPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyQueryPool"]
try:
    vkDestroyRenderPass = jvulkanLib.vkDestroyRenderPass
    #print("statd vkDestroyRenderPass")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyRenderPass"]
try:
    vkDestroySampler = jvulkanLib.vkDestroySampler
    #print("statd vkDestroySampler")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroySampler"]
try:
    vkDestroySamplerYcbcrConversion = jvulkanLib.vkDestroySamplerYcbcrConversion
    #print("statd vkDestroySamplerYcbcrConversion")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroySamplerYcbcrConversion"]
try:
    vkDestroySamplerYcbcrConversionKHR = jvulkanLib.vkDestroySamplerYcbcrConversionKHR
    #print("statd vkDestroySamplerYcbcrConversionKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroySamplerYcbcrConversionKHR"]
try:
    vkDestroySemaphore = jvulkanLib.vkDestroySemaphore
    #print("statd vkDestroySemaphore")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroySemaphore"]
try:
    vkDestroyShaderModule = jvulkanLib.vkDestroyShaderModule
    #print("statd vkDestroyShaderModule")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyShaderModule"]
try:
    vkDestroySurfaceKHR = jvulkanLib.vkDestroySurfaceKHR
    #print("statd vkDestroySurfaceKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroySurfaceKHR"]
try:
    vkDestroySwapchainKHR = jvulkanLib.vkDestroySwapchainKHR
    #print("statd vkDestroySwapchainKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroySwapchainKHR"]
try:
    vkDestroyValidationCacheEXT = jvulkanLib.vkDestroyValidationCacheEXT
    #print("statd vkDestroyValidationCacheEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkDestroyValidationCacheEXT"]
try:
    vkDeviceWaitIdle = jvulkanLib.vkDeviceWaitIdle
    #print("statd vkDeviceWaitIdle")
except Exception as e:
    pass
    UNSTATABLE += ["vkDeviceWaitIdle"]
try:
    vkDisplayPowerControlEXT = jvulkanLib.vkDisplayPowerControlEXT
    #print("statd vkDisplayPowerControlEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkDisplayPowerControlEXT"]
try:
    vkEndCommandBuffer = jvulkanLib.vkEndCommandBuffer
    #print("statd vkEndCommandBuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkEndCommandBuffer"]
try:
    vkEnumerateDeviceExtensionProperties = jvulkanLib.vkEnumerateDeviceExtensionProperties
    #print("statd vkEnumerateDeviceExtensionProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkEnumerateDeviceExtensionProperties"]
try:
    vkEnumerateDeviceLayerProperties = jvulkanLib.vkEnumerateDeviceLayerProperties
    #print("statd vkEnumerateDeviceLayerProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkEnumerateDeviceLayerProperties"]
try:
    vkEnumerateInstanceExtensionProperties = jvulkanLib.vkEnumerateInstanceExtensionProperties
    #print("statd vkEnumerateInstanceExtensionProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkEnumerateInstanceExtensionProperties"]
try:
    vkEnumerateInstanceLayerProperties = jvulkanLib.vkEnumerateInstanceLayerProperties
    #print("statd vkEnumerateInstanceLayerProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkEnumerateInstanceLayerProperties"]
try:
    vkEnumerateInstanceVersion = jvulkanLib.vkEnumerateInstanceVersion
    #print("statd vkEnumerateInstanceVersion")
except Exception as e:
    pass
    UNSTATABLE += ["vkEnumerateInstanceVersion"]
try:
    vkEnumeratePhysicalDeviceGroups = jvulkanLib.vkEnumeratePhysicalDeviceGroups
    #print("statd vkEnumeratePhysicalDeviceGroups")
except Exception as e:
    pass
    UNSTATABLE += ["vkEnumeratePhysicalDeviceGroups"]
try:
    vkEnumeratePhysicalDeviceGroupsKHR = jvulkanLib.vkEnumeratePhysicalDeviceGroupsKHR
    #print("statd vkEnumeratePhysicalDeviceGroupsKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkEnumeratePhysicalDeviceGroupsKHR"]
try:
    vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = jvulkanLib.vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR
    #print("statd vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR"]
try:
    vkEnumeratePhysicalDevices = jvulkanLib.vkEnumeratePhysicalDevices
    #print("statd vkEnumeratePhysicalDevices")
except Exception as e:
    pass
    UNSTATABLE += ["vkEnumeratePhysicalDevices"]
try:
    vkFlushMappedMemoryRanges = jvulkanLib.vkFlushMappedMemoryRanges
    #print("statd vkFlushMappedMemoryRanges")
except Exception as e:
    pass
    UNSTATABLE += ["vkFlushMappedMemoryRanges"]
try:
    vkFreeCommandBuffers = jvulkanLib.vkFreeCommandBuffers
    #print("statd vkFreeCommandBuffers")
except Exception as e:
    pass
    UNSTATABLE += ["vkFreeCommandBuffers"]
try:
    vkFreeDescriptorSets = jvulkanLib.vkFreeDescriptorSets
    #print("statd vkFreeDescriptorSets")
except Exception as e:
    pass
    UNSTATABLE += ["vkFreeDescriptorSets"]
try:
    vkFreeMemory = jvulkanLib.vkFreeMemory
    #print("statd vkFreeMemory")
except Exception as e:
    pass
    UNSTATABLE += ["vkFreeMemory"]
try:
    vkGetAccelerationStructureBuildSizesKHR = jvulkanLib.vkGetAccelerationStructureBuildSizesKHR
    #print("statd vkGetAccelerationStructureBuildSizesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetAccelerationStructureBuildSizesKHR"]
try:
    vkGetAccelerationStructureDeviceAddressKHR = jvulkanLib.vkGetAccelerationStructureDeviceAddressKHR
    #print("statd vkGetAccelerationStructureDeviceAddressKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetAccelerationStructureDeviceAddressKHR"]
try:
    vkGetAccelerationStructureHandleNV = jvulkanLib.vkGetAccelerationStructureHandleNV
    #print("statd vkGetAccelerationStructureHandleNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetAccelerationStructureHandleNV"]
try:
    vkGetAccelerationStructureMemoryRequirementsNV = jvulkanLib.vkGetAccelerationStructureMemoryRequirementsNV
    #print("statd vkGetAccelerationStructureMemoryRequirementsNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetAccelerationStructureMemoryRequirementsNV"]
try:
    vkGetAndroidHardwareBufferPropertiesANDROID = jvulkanLib.vkGetAndroidHardwareBufferPropertiesANDROID
    #print("statd vkGetAndroidHardwareBufferPropertiesANDROID")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetAndroidHardwareBufferPropertiesANDROID"]
try:
    vkGetBufferDeviceAddress = jvulkanLib.vkGetBufferDeviceAddress
    #print("statd vkGetBufferDeviceAddress")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetBufferDeviceAddress"]
try:
    vkGetBufferDeviceAddressEXT = jvulkanLib.vkGetBufferDeviceAddressEXT
    #print("statd vkGetBufferDeviceAddressEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetBufferDeviceAddressEXT"]
try:
    vkGetBufferDeviceAddressKHR = jvulkanLib.vkGetBufferDeviceAddressKHR
    #print("statd vkGetBufferDeviceAddressKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetBufferDeviceAddressKHR"]
try:
    vkGetBufferMemoryRequirements = jvulkanLib.vkGetBufferMemoryRequirements
    #print("statd vkGetBufferMemoryRequirements")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetBufferMemoryRequirements"]
try:
    vkGetBufferMemoryRequirements2 = jvulkanLib.vkGetBufferMemoryRequirements2
    #print("statd vkGetBufferMemoryRequirements2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetBufferMemoryRequirements2"]
try:
    vkGetBufferMemoryRequirements2KHR = jvulkanLib.vkGetBufferMemoryRequirements2KHR
    #print("statd vkGetBufferMemoryRequirements2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetBufferMemoryRequirements2KHR"]
try:
    vkGetBufferOpaqueCaptureAddress = jvulkanLib.vkGetBufferOpaqueCaptureAddress
    #print("statd vkGetBufferOpaqueCaptureAddress")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetBufferOpaqueCaptureAddress"]
try:
    vkGetBufferOpaqueCaptureAddressKHR = jvulkanLib.vkGetBufferOpaqueCaptureAddressKHR
    #print("statd vkGetBufferOpaqueCaptureAddressKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetBufferOpaqueCaptureAddressKHR"]
try:
    vkGetCalibratedTimestampsEXT = jvulkanLib.vkGetCalibratedTimestampsEXT
    #print("statd vkGetCalibratedTimestampsEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetCalibratedTimestampsEXT"]
try:
    vkGetDeferredOperationMaxConcurrencyKHR = jvulkanLib.vkGetDeferredOperationMaxConcurrencyKHR
    #print("statd vkGetDeferredOperationMaxConcurrencyKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeferredOperationMaxConcurrencyKHR"]
try:
    vkGetDeferredOperationResultKHR = jvulkanLib.vkGetDeferredOperationResultKHR
    #print("statd vkGetDeferredOperationResultKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeferredOperationResultKHR"]
try:
    vkGetDescriptorSetHostMappingVALVE = jvulkanLib.vkGetDescriptorSetHostMappingVALVE
    #print("statd vkGetDescriptorSetHostMappingVALVE")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDescriptorSetHostMappingVALVE"]
try:
    vkGetDescriptorSetLayoutHostMappingInfoVALVE = jvulkanLib.vkGetDescriptorSetLayoutHostMappingInfoVALVE
    #print("statd vkGetDescriptorSetLayoutHostMappingInfoVALVE")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDescriptorSetLayoutHostMappingInfoVALVE"]
try:
    vkGetDescriptorSetLayoutSupport = jvulkanLib.vkGetDescriptorSetLayoutSupport
    #print("statd vkGetDescriptorSetLayoutSupport")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDescriptorSetLayoutSupport"]
try:
    vkGetDescriptorSetLayoutSupportKHR = jvulkanLib.vkGetDescriptorSetLayoutSupportKHR
    #print("statd vkGetDescriptorSetLayoutSupportKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDescriptorSetLayoutSupportKHR"]
try:
    vkGetDeviceAccelerationStructureCompatibilityKHR = jvulkanLib.vkGetDeviceAccelerationStructureCompatibilityKHR
    #print("statd vkGetDeviceAccelerationStructureCompatibilityKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceAccelerationStructureCompatibilityKHR"]
try:
    vkGetDeviceBufferMemoryRequirements = jvulkanLib.vkGetDeviceBufferMemoryRequirements
    #print("statd vkGetDeviceBufferMemoryRequirements")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceBufferMemoryRequirements"]
try:
    vkGetDeviceBufferMemoryRequirementsKHR = jvulkanLib.vkGetDeviceBufferMemoryRequirementsKHR
    #print("statd vkGetDeviceBufferMemoryRequirementsKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceBufferMemoryRequirementsKHR"]
try:
    vkGetDeviceGroupPeerMemoryFeatures = jvulkanLib.vkGetDeviceGroupPeerMemoryFeatures
    #print("statd vkGetDeviceGroupPeerMemoryFeatures")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceGroupPeerMemoryFeatures"]
try:
    vkGetDeviceGroupPeerMemoryFeaturesKHR = jvulkanLib.vkGetDeviceGroupPeerMemoryFeaturesKHR
    #print("statd vkGetDeviceGroupPeerMemoryFeaturesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceGroupPeerMemoryFeaturesKHR"]
try:
    vkGetDeviceGroupPresentCapabilitiesKHR = jvulkanLib.vkGetDeviceGroupPresentCapabilitiesKHR
    #print("statd vkGetDeviceGroupPresentCapabilitiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceGroupPresentCapabilitiesKHR"]
try:
    vkGetDeviceGroupSurfacePresentModesKHR = jvulkanLib.vkGetDeviceGroupSurfacePresentModesKHR
    #print("statd vkGetDeviceGroupSurfacePresentModesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceGroupSurfacePresentModesKHR"]
try:
    vkGetDeviceImageMemoryRequirements = jvulkanLib.vkGetDeviceImageMemoryRequirements
    #print("statd vkGetDeviceImageMemoryRequirements")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceImageMemoryRequirements"]
try:
    vkGetDeviceImageMemoryRequirementsKHR = jvulkanLib.vkGetDeviceImageMemoryRequirementsKHR
    #print("statd vkGetDeviceImageMemoryRequirementsKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceImageMemoryRequirementsKHR"]
try:
    vkGetDeviceImageSparseMemoryRequirements = jvulkanLib.vkGetDeviceImageSparseMemoryRequirements
    #print("statd vkGetDeviceImageSparseMemoryRequirements")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceImageSparseMemoryRequirements"]
try:
    vkGetDeviceImageSparseMemoryRequirementsKHR = jvulkanLib.vkGetDeviceImageSparseMemoryRequirementsKHR
    #print("statd vkGetDeviceImageSparseMemoryRequirementsKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceImageSparseMemoryRequirementsKHR"]
try:
    vkGetDeviceMemoryCommitment = jvulkanLib.vkGetDeviceMemoryCommitment
    #print("statd vkGetDeviceMemoryCommitment")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceMemoryCommitment"]
try:
    vkGetDeviceMemoryOpaqueCaptureAddress = jvulkanLib.vkGetDeviceMemoryOpaqueCaptureAddress
    #print("statd vkGetDeviceMemoryOpaqueCaptureAddress")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceMemoryOpaqueCaptureAddress"]
try:
    vkGetDeviceMemoryOpaqueCaptureAddressKHR = jvulkanLib.vkGetDeviceMemoryOpaqueCaptureAddressKHR
    #print("statd vkGetDeviceMemoryOpaqueCaptureAddressKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceMemoryOpaqueCaptureAddressKHR"]
try:
    vkGetDeviceProcAddr = jvulkanLib.vkGetDeviceProcAddr
    #print("statd vkGetDeviceProcAddr")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceProcAddr"]
try:
    vkGetDeviceQueue = jvulkanLib.vkGetDeviceQueue
    #print("statd vkGetDeviceQueue")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceQueue"]
try:
    vkGetDeviceQueue2 = jvulkanLib.vkGetDeviceQueue2
    #print("statd vkGetDeviceQueue2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceQueue2"]
try:
    vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = jvulkanLib.vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI
    #print("statd vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI"]
try:
    vkGetDisplayModeProperties2KHR = jvulkanLib.vkGetDisplayModeProperties2KHR
    #print("statd vkGetDisplayModeProperties2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDisplayModeProperties2KHR"]
try:
    vkGetDisplayModePropertiesKHR = jvulkanLib.vkGetDisplayModePropertiesKHR
    #print("statd vkGetDisplayModePropertiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDisplayModePropertiesKHR"]
try:
    vkGetDisplayPlaneCapabilities2KHR = jvulkanLib.vkGetDisplayPlaneCapabilities2KHR
    #print("statd vkGetDisplayPlaneCapabilities2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDisplayPlaneCapabilities2KHR"]
try:
    vkGetDisplayPlaneCapabilitiesKHR = jvulkanLib.vkGetDisplayPlaneCapabilitiesKHR
    #print("statd vkGetDisplayPlaneCapabilitiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDisplayPlaneCapabilitiesKHR"]
try:
    vkGetDisplayPlaneSupportedDisplaysKHR = jvulkanLib.vkGetDisplayPlaneSupportedDisplaysKHR
    #print("statd vkGetDisplayPlaneSupportedDisplaysKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDisplayPlaneSupportedDisplaysKHR"]
try:
    vkGetDrmDisplayEXT = jvulkanLib.vkGetDrmDisplayEXT
    #print("statd vkGetDrmDisplayEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetDrmDisplayEXT"]
try:
    vkGetEventStatus = jvulkanLib.vkGetEventStatus
    #print("statd vkGetEventStatus")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetEventStatus"]
try:
    vkGetFenceFdKHR = jvulkanLib.vkGetFenceFdKHR
    #print("statd vkGetFenceFdKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetFenceFdKHR"]
try:
    vkGetFenceStatus = jvulkanLib.vkGetFenceStatus
    #print("statd vkGetFenceStatus")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetFenceStatus"]
try:
    vkGetGeneratedCommandsMemoryRequirementsNV = jvulkanLib.vkGetGeneratedCommandsMemoryRequirementsNV
    #print("statd vkGetGeneratedCommandsMemoryRequirementsNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetGeneratedCommandsMemoryRequirementsNV"]
try:
    vkGetImageDrmFormatModifierPropertiesEXT = jvulkanLib.vkGetImageDrmFormatModifierPropertiesEXT
    #print("statd vkGetImageDrmFormatModifierPropertiesEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetImageDrmFormatModifierPropertiesEXT"]
try:
    vkGetImageMemoryRequirements = jvulkanLib.vkGetImageMemoryRequirements
    #print("statd vkGetImageMemoryRequirements")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetImageMemoryRequirements"]
try:
    vkGetImageMemoryRequirements2 = jvulkanLib.vkGetImageMemoryRequirements2
    #print("statd vkGetImageMemoryRequirements2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetImageMemoryRequirements2"]
try:
    vkGetImageMemoryRequirements2KHR = jvulkanLib.vkGetImageMemoryRequirements2KHR
    #print("statd vkGetImageMemoryRequirements2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetImageMemoryRequirements2KHR"]
try:
    vkGetImageSparseMemoryRequirements = jvulkanLib.vkGetImageSparseMemoryRequirements
    #print("statd vkGetImageSparseMemoryRequirements")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetImageSparseMemoryRequirements"]
try:
    vkGetImageSparseMemoryRequirements2 = jvulkanLib.vkGetImageSparseMemoryRequirements2
    #print("statd vkGetImageSparseMemoryRequirements2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetImageSparseMemoryRequirements2"]
try:
    vkGetImageSparseMemoryRequirements2KHR = jvulkanLib.vkGetImageSparseMemoryRequirements2KHR
    #print("statd vkGetImageSparseMemoryRequirements2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetImageSparseMemoryRequirements2KHR"]
try:
    vkGetImageSubresourceLayout = jvulkanLib.vkGetImageSubresourceLayout
    #print("statd vkGetImageSubresourceLayout")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetImageSubresourceLayout"]
try:
    vkGetImageViewAddressNVX = jvulkanLib.vkGetImageViewAddressNVX
    #print("statd vkGetImageViewAddressNVX")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetImageViewAddressNVX"]
try:
    vkGetImageViewHandleNVX = jvulkanLib.vkGetImageViewHandleNVX
    #print("statd vkGetImageViewHandleNVX")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetImageViewHandleNVX"]
try:
    vkGetInstanceProcAddr = jvulkanLib.vkGetInstanceProcAddr
    #print("statd vkGetInstanceProcAddr")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetInstanceProcAddr"]
try:
    vkGetMemoryAndroidHardwareBufferANDROID = jvulkanLib.vkGetMemoryAndroidHardwareBufferANDROID
    #print("statd vkGetMemoryAndroidHardwareBufferANDROID")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetMemoryAndroidHardwareBufferANDROID"]
try:
    vkGetMemoryFdKHR = jvulkanLib.vkGetMemoryFdKHR
    #print("statd vkGetMemoryFdKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetMemoryFdKHR"]
try:
    vkGetMemoryFdPropertiesKHR = jvulkanLib.vkGetMemoryFdPropertiesKHR
    #print("statd vkGetMemoryFdPropertiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetMemoryFdPropertiesKHR"]
try:
    vkGetMemoryHostPointerPropertiesEXT = jvulkanLib.vkGetMemoryHostPointerPropertiesEXT
    #print("statd vkGetMemoryHostPointerPropertiesEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetMemoryHostPointerPropertiesEXT"]
try:
    vkGetMemoryRemoteAddressNV = jvulkanLib.vkGetMemoryRemoteAddressNV
    #print("statd vkGetMemoryRemoteAddressNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetMemoryRemoteAddressNV"]
try:
    vkGetPastPresentationTimingGOOGLE = jvulkanLib.vkGetPastPresentationTimingGOOGLE
    #print("statd vkGetPastPresentationTimingGOOGLE")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPastPresentationTimingGOOGLE"]
try:
    vkGetPerformanceParameterINTEL = jvulkanLib.vkGetPerformanceParameterINTEL
    #print("statd vkGetPerformanceParameterINTEL")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPerformanceParameterINTEL"]
try:
    vkGetPhysicalDeviceCalibrateableTimeDomainsEXT = jvulkanLib.vkGetPhysicalDeviceCalibrateableTimeDomainsEXT
    #print("statd vkGetPhysicalDeviceCalibrateableTimeDomainsEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceCalibrateableTimeDomainsEXT"]
try:
    vkGetPhysicalDeviceCooperativeMatrixPropertiesNV = jvulkanLib.vkGetPhysicalDeviceCooperativeMatrixPropertiesNV
    #print("statd vkGetPhysicalDeviceCooperativeMatrixPropertiesNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceCooperativeMatrixPropertiesNV"]
try:
    vkGetPhysicalDeviceDisplayPlaneProperties2KHR = jvulkanLib.vkGetPhysicalDeviceDisplayPlaneProperties2KHR
    #print("statd vkGetPhysicalDeviceDisplayPlaneProperties2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceDisplayPlaneProperties2KHR"]
try:
    vkGetPhysicalDeviceDisplayPlanePropertiesKHR = jvulkanLib.vkGetPhysicalDeviceDisplayPlanePropertiesKHR
    #print("statd vkGetPhysicalDeviceDisplayPlanePropertiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceDisplayPlanePropertiesKHR"]
try:
    vkGetPhysicalDeviceDisplayProperties2KHR = jvulkanLib.vkGetPhysicalDeviceDisplayProperties2KHR
    #print("statd vkGetPhysicalDeviceDisplayProperties2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceDisplayProperties2KHR"]
try:
    vkGetPhysicalDeviceDisplayPropertiesKHR = jvulkanLib.vkGetPhysicalDeviceDisplayPropertiesKHR
    #print("statd vkGetPhysicalDeviceDisplayPropertiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceDisplayPropertiesKHR"]
try:
    vkGetPhysicalDeviceExternalBufferProperties = jvulkanLib.vkGetPhysicalDeviceExternalBufferProperties
    #print("statd vkGetPhysicalDeviceExternalBufferProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceExternalBufferProperties"]
try:
    vkGetPhysicalDeviceExternalBufferPropertiesKHR = jvulkanLib.vkGetPhysicalDeviceExternalBufferPropertiesKHR
    #print("statd vkGetPhysicalDeviceExternalBufferPropertiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceExternalBufferPropertiesKHR"]
try:
    vkGetPhysicalDeviceExternalFenceProperties = jvulkanLib.vkGetPhysicalDeviceExternalFenceProperties
    #print("statd vkGetPhysicalDeviceExternalFenceProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceExternalFenceProperties"]
try:
    vkGetPhysicalDeviceExternalFencePropertiesKHR = jvulkanLib.vkGetPhysicalDeviceExternalFencePropertiesKHR
    #print("statd vkGetPhysicalDeviceExternalFencePropertiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceExternalFencePropertiesKHR"]
try:
    vkGetPhysicalDeviceExternalImageFormatPropertiesNV = jvulkanLib.vkGetPhysicalDeviceExternalImageFormatPropertiesNV
    #print("statd vkGetPhysicalDeviceExternalImageFormatPropertiesNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceExternalImageFormatPropertiesNV"]
try:
    vkGetPhysicalDeviceExternalSemaphoreProperties = jvulkanLib.vkGetPhysicalDeviceExternalSemaphoreProperties
    #print("statd vkGetPhysicalDeviceExternalSemaphoreProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceExternalSemaphoreProperties"]
try:
    vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = jvulkanLib.vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
    #print("statd vkGetPhysicalDeviceExternalSemaphorePropertiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceExternalSemaphorePropertiesKHR"]
try:
    vkGetPhysicalDeviceFeatures = jvulkanLib.vkGetPhysicalDeviceFeatures
    #print("statd vkGetPhysicalDeviceFeatures")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceFeatures"]
try:
    vkGetPhysicalDeviceFeatures2 = jvulkanLib.vkGetPhysicalDeviceFeatures2
    #print("statd vkGetPhysicalDeviceFeatures2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceFeatures2"]
try:
    vkGetPhysicalDeviceFeatures2KHR = jvulkanLib.vkGetPhysicalDeviceFeatures2KHR
    #print("statd vkGetPhysicalDeviceFeatures2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceFeatures2KHR"]
try:
    vkGetPhysicalDeviceFormatProperties = jvulkanLib.vkGetPhysicalDeviceFormatProperties
    #print("statd vkGetPhysicalDeviceFormatProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceFormatProperties"]
try:
    vkGetPhysicalDeviceFormatProperties2 = jvulkanLib.vkGetPhysicalDeviceFormatProperties2
    #print("statd vkGetPhysicalDeviceFormatProperties2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceFormatProperties2"]
try:
    vkGetPhysicalDeviceFormatProperties2KHR = jvulkanLib.vkGetPhysicalDeviceFormatProperties2KHR
    #print("statd vkGetPhysicalDeviceFormatProperties2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceFormatProperties2KHR"]
try:
    vkGetPhysicalDeviceFragmentShadingRatesKHR = jvulkanLib.vkGetPhysicalDeviceFragmentShadingRatesKHR
    #print("statd vkGetPhysicalDeviceFragmentShadingRatesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceFragmentShadingRatesKHR"]
try:
    vkGetPhysicalDeviceImageFormatProperties = jvulkanLib.vkGetPhysicalDeviceImageFormatProperties
    #print("statd vkGetPhysicalDeviceImageFormatProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceImageFormatProperties"]
try:
    vkGetPhysicalDeviceImageFormatProperties2 = jvulkanLib.vkGetPhysicalDeviceImageFormatProperties2
    #print("statd vkGetPhysicalDeviceImageFormatProperties2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceImageFormatProperties2"]
try:
    vkGetPhysicalDeviceImageFormatProperties2KHR = jvulkanLib.vkGetPhysicalDeviceImageFormatProperties2KHR
    #print("statd vkGetPhysicalDeviceImageFormatProperties2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceImageFormatProperties2KHR"]
try:
    vkGetPhysicalDeviceMemoryProperties = jvulkanLib.vkGetPhysicalDeviceMemoryProperties
    #print("statd vkGetPhysicalDeviceMemoryProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceMemoryProperties"]
try:
    vkGetPhysicalDeviceMemoryProperties2 = jvulkanLib.vkGetPhysicalDeviceMemoryProperties2
    #print("statd vkGetPhysicalDeviceMemoryProperties2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceMemoryProperties2"]
try:
    vkGetPhysicalDeviceMemoryProperties2KHR = jvulkanLib.vkGetPhysicalDeviceMemoryProperties2KHR
    #print("statd vkGetPhysicalDeviceMemoryProperties2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceMemoryProperties2KHR"]
try:
    vkGetPhysicalDeviceMultisamplePropertiesEXT = jvulkanLib.vkGetPhysicalDeviceMultisamplePropertiesEXT
    #print("statd vkGetPhysicalDeviceMultisamplePropertiesEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceMultisamplePropertiesEXT"]
try:
    vkGetPhysicalDevicePresentRectanglesKHR = jvulkanLib.vkGetPhysicalDevicePresentRectanglesKHR
    #print("statd vkGetPhysicalDevicePresentRectanglesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDevicePresentRectanglesKHR"]
try:
    vkGetPhysicalDeviceProperties = jvulkanLib.vkGetPhysicalDeviceProperties
    #print("statd vkGetPhysicalDeviceProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceProperties"]
try:
    vkGetPhysicalDeviceProperties2 = jvulkanLib.vkGetPhysicalDeviceProperties2
    #print("statd vkGetPhysicalDeviceProperties2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceProperties2"]
try:
    vkGetPhysicalDeviceProperties2KHR = jvulkanLib.vkGetPhysicalDeviceProperties2KHR
    #print("statd vkGetPhysicalDeviceProperties2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceProperties2KHR"]
try:
    vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = jvulkanLib.vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR
    #print("statd vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR"]
try:
    vkGetPhysicalDeviceQueueFamilyProperties = jvulkanLib.vkGetPhysicalDeviceQueueFamilyProperties
    #print("statd vkGetPhysicalDeviceQueueFamilyProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceQueueFamilyProperties"]
try:
    vkGetPhysicalDeviceQueueFamilyProperties2 = jvulkanLib.vkGetPhysicalDeviceQueueFamilyProperties2
    #print("statd vkGetPhysicalDeviceQueueFamilyProperties2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceQueueFamilyProperties2"]
try:
    vkGetPhysicalDeviceQueueFamilyProperties2KHR = jvulkanLib.vkGetPhysicalDeviceQueueFamilyProperties2KHR
    #print("statd vkGetPhysicalDeviceQueueFamilyProperties2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceQueueFamilyProperties2KHR"]
try:
    vkGetPhysicalDeviceSparseImageFormatProperties = jvulkanLib.vkGetPhysicalDeviceSparseImageFormatProperties
    #print("statd vkGetPhysicalDeviceSparseImageFormatProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSparseImageFormatProperties"]
try:
    vkGetPhysicalDeviceSparseImageFormatProperties2 = jvulkanLib.vkGetPhysicalDeviceSparseImageFormatProperties2
    #print("statd vkGetPhysicalDeviceSparseImageFormatProperties2")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSparseImageFormatProperties2"]
try:
    vkGetPhysicalDeviceSparseImageFormatProperties2KHR = jvulkanLib.vkGetPhysicalDeviceSparseImageFormatProperties2KHR
    #print("statd vkGetPhysicalDeviceSparseImageFormatProperties2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSparseImageFormatProperties2KHR"]
try:
    vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = jvulkanLib.vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV
    #print("statd vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV"]
try:
    vkGetPhysicalDeviceSurfaceCapabilities2EXT = jvulkanLib.vkGetPhysicalDeviceSurfaceCapabilities2EXT
    #print("statd vkGetPhysicalDeviceSurfaceCapabilities2EXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSurfaceCapabilities2EXT"]
try:
    vkGetPhysicalDeviceSurfaceCapabilities2KHR = jvulkanLib.vkGetPhysicalDeviceSurfaceCapabilities2KHR
    #print("statd vkGetPhysicalDeviceSurfaceCapabilities2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSurfaceCapabilities2KHR"]
try:
    vkGetPhysicalDeviceSurfaceCapabilitiesKHR = jvulkanLib.vkGetPhysicalDeviceSurfaceCapabilitiesKHR
    #print("statd vkGetPhysicalDeviceSurfaceCapabilitiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSurfaceCapabilitiesKHR"]
try:
    vkGetPhysicalDeviceSurfaceFormats2KHR = jvulkanLib.vkGetPhysicalDeviceSurfaceFormats2KHR
    #print("statd vkGetPhysicalDeviceSurfaceFormats2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSurfaceFormats2KHR"]
try:
    vkGetPhysicalDeviceSurfaceFormatsKHR = jvulkanLib.vkGetPhysicalDeviceSurfaceFormatsKHR
    #print("statd vkGetPhysicalDeviceSurfaceFormatsKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSurfaceFormatsKHR"]
try:
    vkGetPhysicalDeviceSurfacePresentModesKHR = jvulkanLib.vkGetPhysicalDeviceSurfacePresentModesKHR
    #print("statd vkGetPhysicalDeviceSurfacePresentModesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSurfacePresentModesKHR"]
try:
    vkGetPhysicalDeviceSurfaceSupportKHR = jvulkanLib.vkGetPhysicalDeviceSurfaceSupportKHR
    #print("statd vkGetPhysicalDeviceSurfaceSupportKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceSurfaceSupportKHR"]
try:
    vkGetPhysicalDeviceToolProperties = jvulkanLib.vkGetPhysicalDeviceToolProperties
    #print("statd vkGetPhysicalDeviceToolProperties")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceToolProperties"]
try:
    vkGetPhysicalDeviceToolPropertiesEXT = jvulkanLib.vkGetPhysicalDeviceToolPropertiesEXT
    #print("statd vkGetPhysicalDeviceToolPropertiesEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceToolPropertiesEXT"]
try:
    vkGetPhysicalDeviceWaylandPresentationSupportKHR = jvulkanLib.vkGetPhysicalDeviceWaylandPresentationSupportKHR
    #print("statd vkGetPhysicalDeviceWaylandPresentationSupportKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceWaylandPresentationSupportKHR"]
try:
    vkGetPhysicalDeviceXcbPresentationSupportKHR = jvulkanLib.vkGetPhysicalDeviceXcbPresentationSupportKHR
    #print("statd vkGetPhysicalDeviceXcbPresentationSupportKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceXcbPresentationSupportKHR"]
try:
    vkGetPhysicalDeviceXlibPresentationSupportKHR = jvulkanLib.vkGetPhysicalDeviceXlibPresentationSupportKHR
    #print("statd vkGetPhysicalDeviceXlibPresentationSupportKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPhysicalDeviceXlibPresentationSupportKHR"]
try:
    vkGetPipelineCacheData = jvulkanLib.vkGetPipelineCacheData
    #print("statd vkGetPipelineCacheData")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPipelineCacheData"]
try:
    vkGetPipelineExecutableInternalRepresentationsKHR = jvulkanLib.vkGetPipelineExecutableInternalRepresentationsKHR
    #print("statd vkGetPipelineExecutableInternalRepresentationsKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPipelineExecutableInternalRepresentationsKHR"]
try:
    vkGetPipelineExecutablePropertiesKHR = jvulkanLib.vkGetPipelineExecutablePropertiesKHR
    #print("statd vkGetPipelineExecutablePropertiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPipelineExecutablePropertiesKHR"]
try:
    vkGetPipelineExecutableStatisticsKHR = jvulkanLib.vkGetPipelineExecutableStatisticsKHR
    #print("statd vkGetPipelineExecutableStatisticsKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPipelineExecutableStatisticsKHR"]
try:
    vkGetPrivateData = jvulkanLib.vkGetPrivateData
    #print("statd vkGetPrivateData")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPrivateData"]
try:
    vkGetPrivateDataEXT = jvulkanLib.vkGetPrivateDataEXT
    #print("statd vkGetPrivateDataEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetPrivateDataEXT"]
try:
    vkGetQueryPoolResults = jvulkanLib.vkGetQueryPoolResults
    #print("statd vkGetQueryPoolResults")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetQueryPoolResults"]
try:
    vkGetQueueCheckpointData2NV = jvulkanLib.vkGetQueueCheckpointData2NV
    #print("statd vkGetQueueCheckpointData2NV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetQueueCheckpointData2NV"]
try:
    vkGetQueueCheckpointDataNV = jvulkanLib.vkGetQueueCheckpointDataNV
    #print("statd vkGetQueueCheckpointDataNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetQueueCheckpointDataNV"]
try:
    vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = jvulkanLib.vkGetRayTracingCaptureReplayShaderGroupHandlesKHR
    #print("statd vkGetRayTracingCaptureReplayShaderGroupHandlesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetRayTracingCaptureReplayShaderGroupHandlesKHR"]
try:
    vkGetRayTracingShaderGroupHandlesKHR = jvulkanLib.vkGetRayTracingShaderGroupHandlesKHR
    #print("statd vkGetRayTracingShaderGroupHandlesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetRayTracingShaderGroupHandlesKHR"]
try:
    vkGetRayTracingShaderGroupHandlesNV = jvulkanLib.vkGetRayTracingShaderGroupHandlesNV
    #print("statd vkGetRayTracingShaderGroupHandlesNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetRayTracingShaderGroupHandlesNV"]
try:
    vkGetRayTracingShaderGroupStackSizeKHR = jvulkanLib.vkGetRayTracingShaderGroupStackSizeKHR
    #print("statd vkGetRayTracingShaderGroupStackSizeKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetRayTracingShaderGroupStackSizeKHR"]
try:
    vkGetRefreshCycleDurationGOOGLE = jvulkanLib.vkGetRefreshCycleDurationGOOGLE
    #print("statd vkGetRefreshCycleDurationGOOGLE")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetRefreshCycleDurationGOOGLE"]
try:
    vkGetRenderAreaGranularity = jvulkanLib.vkGetRenderAreaGranularity
    #print("statd vkGetRenderAreaGranularity")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetRenderAreaGranularity"]
try:
    vkGetSemaphoreCounterValue = jvulkanLib.vkGetSemaphoreCounterValue
    #print("statd vkGetSemaphoreCounterValue")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetSemaphoreCounterValue"]
try:
    vkGetSemaphoreCounterValueKHR = jvulkanLib.vkGetSemaphoreCounterValueKHR
    #print("statd vkGetSemaphoreCounterValueKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetSemaphoreCounterValueKHR"]
try:
    vkGetSemaphoreFdKHR = jvulkanLib.vkGetSemaphoreFdKHR
    #print("statd vkGetSemaphoreFdKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetSemaphoreFdKHR"]
try:
    vkGetShaderInfoAMD = jvulkanLib.vkGetShaderInfoAMD
    #print("statd vkGetShaderInfoAMD")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetShaderInfoAMD"]
try:
    vkGetSwapchainCounterEXT = jvulkanLib.vkGetSwapchainCounterEXT
    #print("statd vkGetSwapchainCounterEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetSwapchainCounterEXT"]
try:
    vkGetSwapchainImagesKHR = jvulkanLib.vkGetSwapchainImagesKHR
    #print("statd vkGetSwapchainImagesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetSwapchainImagesKHR"]
try:
    vkGetSwapchainStatusKHR = jvulkanLib.vkGetSwapchainStatusKHR
    #print("statd vkGetSwapchainStatusKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetSwapchainStatusKHR"]
try:
    vkGetValidationCacheDataEXT = jvulkanLib.vkGetValidationCacheDataEXT
    #print("statd vkGetValidationCacheDataEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetValidationCacheDataEXT"]
try:
    vkGetWinrtDisplayNV = jvulkanLib.vkGetWinrtDisplayNV
    #print("statd vkGetWinrtDisplayNV")
except Exception as e:
    pass
    UNSTATABLE += ["vkGetWinrtDisplayNV"]
try:
    vkImportFenceFdKHR = jvulkanLib.vkImportFenceFdKHR
    #print("statd vkImportFenceFdKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkImportFenceFdKHR"]
try:
    vkImportSemaphoreFdKHR = jvulkanLib.vkImportSemaphoreFdKHR
    #print("statd vkImportSemaphoreFdKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkImportSemaphoreFdKHR"]
try:
    vkInitializePerformanceApiINTEL = jvulkanLib.vkInitializePerformanceApiINTEL
    #print("statd vkInitializePerformanceApiINTEL")
except Exception as e:
    pass
    UNSTATABLE += ["vkInitializePerformanceApiINTEL"]
try:
    vkInvalidateMappedMemoryRanges = jvulkanLib.vkInvalidateMappedMemoryRanges
    #print("statd vkInvalidateMappedMemoryRanges")
except Exception as e:
    pass
    UNSTATABLE += ["vkInvalidateMappedMemoryRanges"]
try:
    vkMapMemory = jvulkanLib.vkMapMemory
    #print("statd vkMapMemory")
except Exception as e:
    pass
    UNSTATABLE += ["vkMapMemory"]
try:
    vkMergePipelineCaches = jvulkanLib.vkMergePipelineCaches
    #print("statd vkMergePipelineCaches")
except Exception as e:
    pass
    UNSTATABLE += ["vkMergePipelineCaches"]
try:
    vkMergeValidationCachesEXT = jvulkanLib.vkMergeValidationCachesEXT
    #print("statd vkMergeValidationCachesEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkMergeValidationCachesEXT"]
try:
    vkQueueBeginDebugUtilsLabelEXT = jvulkanLib.vkQueueBeginDebugUtilsLabelEXT
    #print("statd vkQueueBeginDebugUtilsLabelEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkQueueBeginDebugUtilsLabelEXT"]
try:
    vkQueueBindSparse = jvulkanLib.vkQueueBindSparse
    #print("statd vkQueueBindSparse")
except Exception as e:
    pass
    UNSTATABLE += ["vkQueueBindSparse"]
try:
    vkQueueEndDebugUtilsLabelEXT = jvulkanLib.vkQueueEndDebugUtilsLabelEXT
    #print("statd vkQueueEndDebugUtilsLabelEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkQueueEndDebugUtilsLabelEXT"]
try:
    vkQueueInsertDebugUtilsLabelEXT = jvulkanLib.vkQueueInsertDebugUtilsLabelEXT
    #print("statd vkQueueInsertDebugUtilsLabelEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkQueueInsertDebugUtilsLabelEXT"]
try:
    vkQueuePresentKHR = jvulkanLib.vkQueuePresentKHR
    #print("statd vkQueuePresentKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkQueuePresentKHR"]
try:
    vkQueueSetPerformanceConfigurationINTEL = jvulkanLib.vkQueueSetPerformanceConfigurationINTEL
    #print("statd vkQueueSetPerformanceConfigurationINTEL")
except Exception as e:
    pass
    UNSTATABLE += ["vkQueueSetPerformanceConfigurationINTEL"]
try:
    vkQueueSubmit = jvulkanLib.vkQueueSubmit
    #print("statd vkQueueSubmit")
except Exception as e:
    pass
    UNSTATABLE += ["vkQueueSubmit"]
try:
    vkQueueSubmit2 = jvulkanLib.vkQueueSubmit2
    #print("statd vkQueueSubmit2")
except Exception as e:
    pass
    UNSTATABLE += ["vkQueueSubmit2"]
try:
    vkQueueSubmit2KHR = jvulkanLib.vkQueueSubmit2KHR
    #print("statd vkQueueSubmit2KHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkQueueSubmit2KHR"]
try:
    vkQueueWaitIdle = jvulkanLib.vkQueueWaitIdle
    #print("statd vkQueueWaitIdle")
except Exception as e:
    pass
    UNSTATABLE += ["vkQueueWaitIdle"]
try:
    vkRegisterDeviceEventEXT = jvulkanLib.vkRegisterDeviceEventEXT
    #print("statd vkRegisterDeviceEventEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkRegisterDeviceEventEXT"]
try:
    vkRegisterDisplayEventEXT = jvulkanLib.vkRegisterDisplayEventEXT
    #print("statd vkRegisterDisplayEventEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkRegisterDisplayEventEXT"]
try:
    vkReleaseDisplayEXT = jvulkanLib.vkReleaseDisplayEXT
    #print("statd vkReleaseDisplayEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkReleaseDisplayEXT"]
try:
    vkReleasePerformanceConfigurationINTEL = jvulkanLib.vkReleasePerformanceConfigurationINTEL
    #print("statd vkReleasePerformanceConfigurationINTEL")
except Exception as e:
    pass
    UNSTATABLE += ["vkReleasePerformanceConfigurationINTEL"]
try:
    vkReleaseProfilingLockKHR = jvulkanLib.vkReleaseProfilingLockKHR
    #print("statd vkReleaseProfilingLockKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkReleaseProfilingLockKHR"]
try:
    vkResetCommandBuffer = jvulkanLib.vkResetCommandBuffer
    #print("statd vkResetCommandBuffer")
except Exception as e:
    pass
    UNSTATABLE += ["vkResetCommandBuffer"]
try:
    vkResetCommandPool = jvulkanLib.vkResetCommandPool
    #print("statd vkResetCommandPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkResetCommandPool"]
try:
    vkResetDescriptorPool = jvulkanLib.vkResetDescriptorPool
    #print("statd vkResetDescriptorPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkResetDescriptorPool"]
try:
    vkResetEvent = jvulkanLib.vkResetEvent
    #print("statd vkResetEvent")
except Exception as e:
    pass
    UNSTATABLE += ["vkResetEvent"]
try:
    vkResetFences = jvulkanLib.vkResetFences
    #print("statd vkResetFences")
except Exception as e:
    pass
    UNSTATABLE += ["vkResetFences"]
try:
    vkResetQueryPool = jvulkanLib.vkResetQueryPool
    #print("statd vkResetQueryPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkResetQueryPool"]
try:
    vkResetQueryPoolEXT = jvulkanLib.vkResetQueryPoolEXT
    #print("statd vkResetQueryPoolEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkResetQueryPoolEXT"]
try:
    vkSetDebugUtilsObjectNameEXT = jvulkanLib.vkSetDebugUtilsObjectNameEXT
    #print("statd vkSetDebugUtilsObjectNameEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkSetDebugUtilsObjectNameEXT"]
try:
    vkSetDebugUtilsObjectTagEXT = jvulkanLib.vkSetDebugUtilsObjectTagEXT
    #print("statd vkSetDebugUtilsObjectTagEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkSetDebugUtilsObjectTagEXT"]
try:
    vkSetDeviceMemoryPriorityEXT = jvulkanLib.vkSetDeviceMemoryPriorityEXT
    #print("statd vkSetDeviceMemoryPriorityEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkSetDeviceMemoryPriorityEXT"]
try:
    vkSetEvent = jvulkanLib.vkSetEvent
    #print("statd vkSetEvent")
except Exception as e:
    pass
    UNSTATABLE += ["vkSetEvent"]
try:
    vkSetHdrMetadataEXT = jvulkanLib.vkSetHdrMetadataEXT
    #print("statd vkSetHdrMetadataEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkSetHdrMetadataEXT"]
try:
    vkSetLocalDimmingAMD = jvulkanLib.vkSetLocalDimmingAMD
    #print("statd vkSetLocalDimmingAMD")
except Exception as e:
    pass
    UNSTATABLE += ["vkSetLocalDimmingAMD"]
try:
    vkSetPrivateData = jvulkanLib.vkSetPrivateData
    #print("statd vkSetPrivateData")
except Exception as e:
    pass
    UNSTATABLE += ["vkSetPrivateData"]
try:
    vkSetPrivateDataEXT = jvulkanLib.vkSetPrivateDataEXT
    #print("statd vkSetPrivateDataEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkSetPrivateDataEXT"]
try:
    vkSignalSemaphore = jvulkanLib.vkSignalSemaphore
    #print("statd vkSignalSemaphore")
except Exception as e:
    pass
    UNSTATABLE += ["vkSignalSemaphore"]
try:
    vkSignalSemaphoreKHR = jvulkanLib.vkSignalSemaphoreKHR
    #print("statd vkSignalSemaphoreKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkSignalSemaphoreKHR"]
try:
    vkSubmitDebugUtilsMessageEXT = jvulkanLib.vkSubmitDebugUtilsMessageEXT
    #print("statd vkSubmitDebugUtilsMessageEXT")
except Exception as e:
    pass
    UNSTATABLE += ["vkSubmitDebugUtilsMessageEXT"]
try:
    vkTrimCommandPool = jvulkanLib.vkTrimCommandPool
    #print("statd vkTrimCommandPool")
except Exception as e:
    pass
    UNSTATABLE += ["vkTrimCommandPool"]
try:
    vkTrimCommandPoolKHR = jvulkanLib.vkTrimCommandPoolKHR
    #print("statd vkTrimCommandPoolKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkTrimCommandPoolKHR"]
try:
    vkUninitializePerformanceApiINTEL = jvulkanLib.vkUninitializePerformanceApiINTEL
    #print("statd vkUninitializePerformanceApiINTEL")
except Exception as e:
    pass
    UNSTATABLE += ["vkUninitializePerformanceApiINTEL"]
try:
    vkUnmapMemory = jvulkanLib.vkUnmapMemory
    #print("statd vkUnmapMemory")
except Exception as e:
    pass
    UNSTATABLE += ["vkUnmapMemory"]
try:
    vkUpdateDescriptorSetWithTemplate = jvulkanLib.vkUpdateDescriptorSetWithTemplate
    #print("statd vkUpdateDescriptorSetWithTemplate")
except Exception as e:
    pass
    UNSTATABLE += ["vkUpdateDescriptorSetWithTemplate"]
try:
    vkUpdateDescriptorSetWithTemplateKHR = jvulkanLib.vkUpdateDescriptorSetWithTemplateKHR
    #print("statd vkUpdateDescriptorSetWithTemplateKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkUpdateDescriptorSetWithTemplateKHR"]
try:
    vkUpdateDescriptorSets = jvulkanLib.vkUpdateDescriptorSets
    #print("statd vkUpdateDescriptorSets")
except Exception as e:
    pass
    UNSTATABLE += ["vkUpdateDescriptorSets"]
try:
    vkWaitForFences = jvulkanLib.vkWaitForFences
    #print("statd vkWaitForFences")
except Exception as e:
    pass
    UNSTATABLE += ["vkWaitForFences"]
try:
    vkWaitForPresentKHR = jvulkanLib.vkWaitForPresentKHR
    #print("statd vkWaitForPresentKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkWaitForPresentKHR"]
try:
    vkWaitSemaphores = jvulkanLib.vkWaitSemaphores
    #print("statd vkWaitSemaphores")
except Exception as e:
    pass
    UNSTATABLE += ["vkWaitSemaphores"]
try:
    vkWaitSemaphoresKHR = jvulkanLib.vkWaitSemaphoresKHR
    #print("statd vkWaitSemaphoresKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkWaitSemaphoresKHR"]
try:
    vkWriteAccelerationStructuresPropertiesKHR = jvulkanLib.vkWriteAccelerationStructuresPropertiesKHR
    #print("statd vkWriteAccelerationStructuresPropertiesKHR")
except Exception as e:
    pass
    UNSTATABLE += ["vkWriteAccelerationStructuresPropertiesKHR"]

with open("UNSTATABLE", 'w+') as f:
	f.write(str(UNSTATABLE))
